/* eoddataDataSoapProxy.cpp
   Generated by gSOAP 2.8.28 from eoddata.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "eoddataDataSoapProxy.h"

namespace eoddata {

DataSoapProxy::DataSoapProxy() : soap(SOAP_IO_DEFAULT)
{	DataSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DataSoapProxy::DataSoapProxy(const DataSoapProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

DataSoapProxy::DataSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

DataSoapProxy::DataSoapProxy(const char *url) : soap(SOAP_IO_DEFAULT)
{	DataSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

DataSoapProxy::DataSoapProxy(soap_mode iomode) : soap(iomode)
{	DataSoapProxy_init(iomode, iomode);
}

DataSoapProxy::DataSoapProxy(const char *url, soap_mode iomode) : soap(iomode)
{	DataSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

DataSoapProxy::DataSoapProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	DataSoapProxy_init(imode, omode);
}

DataSoapProxy::~DataSoapProxy()
{
	this->destroy();
	}

void DataSoapProxy::DataSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"eoddata1", "http://ws.eoddata.com/Data", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

#ifndef WITH_PURE_VIRTUAL
DataSoapProxy *DataSoapProxy::copy()
{	DataSoapProxy *dup = SOAP_NEW_COPY(DataSoapProxy(*(struct soap*)this));
	return dup;
}
#endif

DataSoapProxy& DataSoapProxy::operator=(const DataSoapProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void DataSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void DataSoapProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	DataSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void DataSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *DataSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *DataSoapProxy::soap_fault()
{	return this->fault;
}

const char *DataSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *DataSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int DataSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int DataSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void DataSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DataSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *DataSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int DataSoapProxy::Login(const char *endpoint, const char *soap_action, _eoddata1__Login *eoddata1__Login, _eoddata1__LoginResponse &eoddata1__LoginResponse)
{	struct soap *soap = this;
	struct __eoddata1__Login soap_tmp___eoddata1__Login;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login";
	soap_tmp___eoddata1__Login.eoddata1__Login = eoddata1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Login(soap, &soap_tmp___eoddata1__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Login(soap, &soap_tmp___eoddata1__Login, "-eoddata1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Login(soap, &soap_tmp___eoddata1__Login, "-eoddata1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__LoginResponse)
		return soap_closesock(soap);
	eoddata1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__LoginResponse.soap_get(soap, "eoddata1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Login2(const char *endpoint, const char *soap_action, _eoddata1__Login2 *eoddata1__Login2, _eoddata1__Login2Response &eoddata1__Login2Response)
{	struct soap *soap = this;
	struct __eoddata1__Login2 soap_tmp___eoddata1__Login2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login2";
	soap_tmp___eoddata1__Login2.eoddata1__Login2 = eoddata1__Login2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Login2(soap, &soap_tmp___eoddata1__Login2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Login2(soap, &soap_tmp___eoddata1__Login2, "-eoddata1:Login2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Login2(soap, &soap_tmp___eoddata1__Login2, "-eoddata1:Login2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Login2Response)
		return soap_closesock(soap);
	eoddata1__Login2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Login2Response.soap_get(soap, "eoddata1:Login2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Membership(const char *endpoint, const char *soap_action, _eoddata1__Membership *eoddata1__Membership, _eoddata1__MembershipResponse &eoddata1__MembershipResponse)
{	struct soap *soap = this;
	struct __eoddata1__Membership soap_tmp___eoddata1__Membership;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Membership";
	soap_tmp___eoddata1__Membership.eoddata1__Membership = eoddata1__Membership;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Membership(soap, &soap_tmp___eoddata1__Membership);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Membership(soap, &soap_tmp___eoddata1__Membership, "-eoddata1:Membership", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Membership(soap, &soap_tmp___eoddata1__Membership, "-eoddata1:Membership", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__MembershipResponse)
		return soap_closesock(soap);
	eoddata1__MembershipResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__MembershipResponse.soap_get(soap, "eoddata1:MembershipResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeList(const char *endpoint, const char *soap_action, _eoddata1__ExchangeList *eoddata1__ExchangeList, _eoddata1__ExchangeListResponse &eoddata1__ExchangeListResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeList soap_tmp___eoddata1__ExchangeList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeList";
	soap_tmp___eoddata1__ExchangeList.eoddata1__ExchangeList = eoddata1__ExchangeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeList(soap, &soap_tmp___eoddata1__ExchangeList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeList(soap, &soap_tmp___eoddata1__ExchangeList, "-eoddata1:ExchangeList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeList(soap, &soap_tmp___eoddata1__ExchangeList, "-eoddata1:ExchangeList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeListResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeListResponse.soap_get(soap, "eoddata1:ExchangeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeGet(const char *endpoint, const char *soap_action, _eoddata1__ExchangeGet *eoddata1__ExchangeGet, _eoddata1__ExchangeGetResponse &eoddata1__ExchangeGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeGet soap_tmp___eoddata1__ExchangeGet;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeGet";
	soap_tmp___eoddata1__ExchangeGet.eoddata1__ExchangeGet = eoddata1__ExchangeGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeGet(soap, &soap_tmp___eoddata1__ExchangeGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeGet(soap, &soap_tmp___eoddata1__ExchangeGet, "-eoddata1:ExchangeGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeGet(soap, &soap_tmp___eoddata1__ExchangeGet, "-eoddata1:ExchangeGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeGetResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeGetResponse.soap_get(soap, "eoddata1:ExchangeGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolList(const char *endpoint, const char *soap_action, _eoddata1__SymbolList *eoddata1__SymbolList, _eoddata1__SymbolListResponse &eoddata1__SymbolListResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolList soap_tmp___eoddata1__SymbolList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList";
	soap_tmp___eoddata1__SymbolList.eoddata1__SymbolList = eoddata1__SymbolList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolList(soap, &soap_tmp___eoddata1__SymbolList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolList(soap, &soap_tmp___eoddata1__SymbolList, "-eoddata1:SymbolList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolList(soap, &soap_tmp___eoddata1__SymbolList, "-eoddata1:SymbolList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolListResponse)
		return soap_closesock(soap);
	eoddata1__SymbolListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolListResponse.soap_get(soap, "eoddata1:SymbolListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolList2(const char *endpoint, const char *soap_action, _eoddata1__SymbolList2 *eoddata1__SymbolList2, _eoddata1__SymbolList2Response &eoddata1__SymbolList2Response)
{	struct soap *soap = this;
	struct __eoddata1__SymbolList2 soap_tmp___eoddata1__SymbolList2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList2";
	soap_tmp___eoddata1__SymbolList2.eoddata1__SymbolList2 = eoddata1__SymbolList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolList2(soap, &soap_tmp___eoddata1__SymbolList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolList2(soap, &soap_tmp___eoddata1__SymbolList2, "-eoddata1:SymbolList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolList2(soap, &soap_tmp___eoddata1__SymbolList2, "-eoddata1:SymbolList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolList2Response)
		return soap_closesock(soap);
	eoddata1__SymbolList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolList2Response.soap_get(soap, "eoddata1:SymbolList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteGet(const char *endpoint, const char *soap_action, _eoddata1__QuoteGet *eoddata1__QuoteGet, _eoddata1__QuoteGetResponse &eoddata1__QuoteGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteGet soap_tmp___eoddata1__QuoteGet;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteGet";
	soap_tmp___eoddata1__QuoteGet.eoddata1__QuoteGet = eoddata1__QuoteGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteGet(soap, &soap_tmp___eoddata1__QuoteGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteGet(soap, &soap_tmp___eoddata1__QuoteGet, "-eoddata1:QuoteGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteGet(soap, &soap_tmp___eoddata1__QuoteGet, "-eoddata1:QuoteGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteGetResponse)
		return soap_closesock(soap);
	eoddata1__QuoteGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteGetResponse.soap_get(soap, "eoddata1:QuoteGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteList2(const char *endpoint, const char *soap_action, _eoddata1__QuoteList2 *eoddata1__QuoteList2, _eoddata1__QuoteList2Response &eoddata1__QuoteList2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteList2 soap_tmp___eoddata1__QuoteList2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList2";
	soap_tmp___eoddata1__QuoteList2.eoddata1__QuoteList2 = eoddata1__QuoteList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteList2(soap, &soap_tmp___eoddata1__QuoteList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteList2(soap, &soap_tmp___eoddata1__QuoteList2, "-eoddata1:QuoteList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteList2(soap, &soap_tmp___eoddata1__QuoteList2, "-eoddata1:QuoteList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteList2Response)
		return soap_closesock(soap);
	eoddata1__QuoteList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteList2Response.soap_get(soap, "eoddata1:QuoteList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolGet(const char *endpoint, const char *soap_action, _eoddata1__SymbolGet *eoddata1__SymbolGet, _eoddata1__SymbolGetResponse &eoddata1__SymbolGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolGet soap_tmp___eoddata1__SymbolGet;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolGet";
	soap_tmp___eoddata1__SymbolGet.eoddata1__SymbolGet = eoddata1__SymbolGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolGet(soap, &soap_tmp___eoddata1__SymbolGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolGet(soap, &soap_tmp___eoddata1__SymbolGet, "-eoddata1:SymbolGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolGet(soap, &soap_tmp___eoddata1__SymbolGet, "-eoddata1:SymbolGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolGetResponse)
		return soap_closesock(soap);
	eoddata1__SymbolGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolGetResponse.soap_get(soap, "eoddata1:SymbolGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteList(const char *endpoint, const char *soap_action, _eoddata1__QuoteList *eoddata1__QuoteList, _eoddata1__QuoteListResponse &eoddata1__QuoteListResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteList soap_tmp___eoddata1__QuoteList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList";
	soap_tmp___eoddata1__QuoteList.eoddata1__QuoteList = eoddata1__QuoteList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteList(soap, &soap_tmp___eoddata1__QuoteList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteList(soap, &soap_tmp___eoddata1__QuoteList, "-eoddata1:QuoteList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteList(soap, &soap_tmp___eoddata1__QuoteList, "-eoddata1:QuoteList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListResponse.soap_get(soap, "eoddata1:QuoteListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::NewsList(const char *endpoint, const char *soap_action, _eoddata1__NewsList *eoddata1__NewsList, _eoddata1__NewsListResponse &eoddata1__NewsListResponse)
{	struct soap *soap = this;
	struct __eoddata1__NewsList soap_tmp___eoddata1__NewsList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsList";
	soap_tmp___eoddata1__NewsList.eoddata1__NewsList = eoddata1__NewsList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__NewsList(soap, &soap_tmp___eoddata1__NewsList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__NewsList(soap, &soap_tmp___eoddata1__NewsList, "-eoddata1:NewsList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__NewsList(soap, &soap_tmp___eoddata1__NewsList, "-eoddata1:NewsList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__NewsListResponse)
		return soap_closesock(soap);
	eoddata1__NewsListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__NewsListResponse.soap_get(soap, "eoddata1:NewsListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::NewsListBySymbol(const char *endpoint, const char *soap_action, _eoddata1__NewsListBySymbol *eoddata1__NewsListBySymbol, _eoddata1__NewsListBySymbolResponse &eoddata1__NewsListBySymbolResponse)
{	struct soap *soap = this;
	struct __eoddata1__NewsListBySymbol soap_tmp___eoddata1__NewsListBySymbol;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsListBySymbol";
	soap_tmp___eoddata1__NewsListBySymbol.eoddata1__NewsListBySymbol = eoddata1__NewsListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__NewsListBySymbol(soap, &soap_tmp___eoddata1__NewsListBySymbol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__NewsListBySymbol(soap, &soap_tmp___eoddata1__NewsListBySymbol, "-eoddata1:NewsListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__NewsListBySymbol(soap, &soap_tmp___eoddata1__NewsListBySymbol, "-eoddata1:NewsListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__NewsListBySymbolResponse)
		return soap_closesock(soap);
	eoddata1__NewsListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__NewsListBySymbolResponse.soap_get(soap, "eoddata1:NewsListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::FundamentalList(const char *endpoint, const char *soap_action, _eoddata1__FundamentalList *eoddata1__FundamentalList, _eoddata1__FundamentalListResponse &eoddata1__FundamentalListResponse)
{	struct soap *soap = this;
	struct __eoddata1__FundamentalList soap_tmp___eoddata1__FundamentalList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/FundamentalList";
	soap_tmp___eoddata1__FundamentalList.eoddata1__FundamentalList = eoddata1__FundamentalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__FundamentalList(soap, &soap_tmp___eoddata1__FundamentalList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__FundamentalList(soap, &soap_tmp___eoddata1__FundamentalList, "-eoddata1:FundamentalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__FundamentalList(soap, &soap_tmp___eoddata1__FundamentalList, "-eoddata1:FundamentalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__FundamentalListResponse)
		return soap_closesock(soap);
	eoddata1__FundamentalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__FundamentalListResponse.soap_get(soap, "eoddata1:FundamentalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::TechnicalList(const char *endpoint, const char *soap_action, _eoddata1__TechnicalList *eoddata1__TechnicalList, _eoddata1__TechnicalListResponse &eoddata1__TechnicalListResponse)
{	struct soap *soap = this;
	struct __eoddata1__TechnicalList soap_tmp___eoddata1__TechnicalList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/TechnicalList";
	soap_tmp___eoddata1__TechnicalList.eoddata1__TechnicalList = eoddata1__TechnicalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__TechnicalList(soap, &soap_tmp___eoddata1__TechnicalList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__TechnicalList(soap, &soap_tmp___eoddata1__TechnicalList, "-eoddata1:TechnicalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__TechnicalList(soap, &soap_tmp___eoddata1__TechnicalList, "-eoddata1:TechnicalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__TechnicalListResponse)
		return soap_closesock(soap);
	eoddata1__TechnicalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__TechnicalListResponse.soap_get(soap, "eoddata1:TechnicalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDate(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDate *eoddata1__QuoteListByDate, _eoddata1__QuoteListByDateResponse &eoddata1__QuoteListByDateResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDate soap_tmp___eoddata1__QuoteListByDate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate";
	soap_tmp___eoddata1__QuoteListByDate.eoddata1__QuoteListByDate = eoddata1__QuoteListByDate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDate(soap, &soap_tmp___eoddata1__QuoteListByDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDate(soap, &soap_tmp___eoddata1__QuoteListByDate, "-eoddata1:QuoteListByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDate(soap, &soap_tmp___eoddata1__QuoteListByDate, "-eoddata1:QuoteListByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDateResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDateResponse.soap_get(soap, "eoddata1:QuoteListByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDate2(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDate2 *eoddata1__QuoteListByDate2, _eoddata1__QuoteListByDate2Response &eoddata1__QuoteListByDate2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDate2 soap_tmp___eoddata1__QuoteListByDate2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate2";
	soap_tmp___eoddata1__QuoteListByDate2.eoddata1__QuoteListByDate2 = eoddata1__QuoteListByDate2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDate2(soap, &soap_tmp___eoddata1__QuoteListByDate2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDate2(soap, &soap_tmp___eoddata1__QuoteListByDate2, "-eoddata1:QuoteListByDate2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDate2(soap, &soap_tmp___eoddata1__QuoteListByDate2, "-eoddata1:QuoteListByDate2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDate2Response)
		return soap_closesock(soap);
	eoddata1__QuoteListByDate2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDate2Response.soap_get(soap, "eoddata1:QuoteListByDate2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistory(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistory *eoddata1__SymbolHistory, _eoddata1__SymbolHistoryResponse &eoddata1__SymbolHistoryResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistory soap_tmp___eoddata1__SymbolHistory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistory";
	soap_tmp___eoddata1__SymbolHistory.eoddata1__SymbolHistory = eoddata1__SymbolHistory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistory(soap, &soap_tmp___eoddata1__SymbolHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistory(soap, &soap_tmp___eoddata1__SymbolHistory, "-eoddata1:SymbolHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistory(soap, &soap_tmp___eoddata1__SymbolHistory, "-eoddata1:SymbolHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryResponse.soap_get(soap, "eoddata1:SymbolHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Top10Gains(const char *endpoint, const char *soap_action, _eoddata1__Top10Gains *eoddata1__Top10Gains, _eoddata1__Top10GainsResponse &eoddata1__Top10GainsResponse)
{	struct soap *soap = this;
	struct __eoddata1__Top10Gains soap_tmp___eoddata1__Top10Gains;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Gains";
	soap_tmp___eoddata1__Top10Gains.eoddata1__Top10Gains = eoddata1__Top10Gains;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Top10Gains(soap, &soap_tmp___eoddata1__Top10Gains);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Top10Gains(soap, &soap_tmp___eoddata1__Top10Gains, "-eoddata1:Top10Gains", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Top10Gains(soap, &soap_tmp___eoddata1__Top10Gains, "-eoddata1:Top10Gains", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Top10GainsResponse)
		return soap_closesock(soap);
	eoddata1__Top10GainsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Top10GainsResponse.soap_get(soap, "eoddata1:Top10GainsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Top10Losses(const char *endpoint, const char *soap_action, _eoddata1__Top10Losses *eoddata1__Top10Losses, _eoddata1__Top10LossesResponse &eoddata1__Top10LossesResponse)
{	struct soap *soap = this;
	struct __eoddata1__Top10Losses soap_tmp___eoddata1__Top10Losses;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Losses";
	soap_tmp___eoddata1__Top10Losses.eoddata1__Top10Losses = eoddata1__Top10Losses;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Top10Losses(soap, &soap_tmp___eoddata1__Top10Losses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Top10Losses(soap, &soap_tmp___eoddata1__Top10Losses, "-eoddata1:Top10Losses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Top10Losses(soap, &soap_tmp___eoddata1__Top10Losses, "-eoddata1:Top10Losses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Top10LossesResponse)
		return soap_closesock(soap);
	eoddata1__Top10LossesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Top10LossesResponse.soap_get(soap, "eoddata1:Top10LossesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolChart(const char *endpoint, const char *soap_action, _eoddata1__SymbolChart *eoddata1__SymbolChart, _eoddata1__SymbolChartResponse &eoddata1__SymbolChartResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolChart soap_tmp___eoddata1__SymbolChart;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChart";
	soap_tmp___eoddata1__SymbolChart.eoddata1__SymbolChart = eoddata1__SymbolChart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolChart(soap, &soap_tmp___eoddata1__SymbolChart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolChart(soap, &soap_tmp___eoddata1__SymbolChart, "-eoddata1:SymbolChart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolChart(soap, &soap_tmp___eoddata1__SymbolChart, "-eoddata1:SymbolChart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolChartResponse)
		return soap_closesock(soap);
	eoddata1__SymbolChartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolChartResponse.soap_get(soap, "eoddata1:SymbolChartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeMonths(const char *endpoint, const char *soap_action, _eoddata1__ExchangeMonths *eoddata1__ExchangeMonths, _eoddata1__ExchangeMonthsResponse &eoddata1__ExchangeMonthsResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeMonths soap_tmp___eoddata1__ExchangeMonths;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeMonths";
	soap_tmp___eoddata1__ExchangeMonths.eoddata1__ExchangeMonths = eoddata1__ExchangeMonths;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeMonths(soap, &soap_tmp___eoddata1__ExchangeMonths);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeMonths(soap, &soap_tmp___eoddata1__ExchangeMonths, "-eoddata1:ExchangeMonths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeMonths(soap, &soap_tmp___eoddata1__ExchangeMonths, "-eoddata1:ExchangeMonths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeMonthsResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeMonthsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeMonthsResponse.soap_get(soap, "eoddata1:ExchangeMonthsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SplitListByExchange(const char *endpoint, const char *soap_action, _eoddata1__SplitListByExchange *eoddata1__SplitListByExchange, _eoddata1__SplitListByExchangeResponse &eoddata1__SplitListByExchangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SplitListByExchange soap_tmp___eoddata1__SplitListByExchange;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListByExchange";
	soap_tmp___eoddata1__SplitListByExchange.eoddata1__SplitListByExchange = eoddata1__SplitListByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SplitListByExchange(soap, &soap_tmp___eoddata1__SplitListByExchange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SplitListByExchange(soap, &soap_tmp___eoddata1__SplitListByExchange, "-eoddata1:SplitListByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SplitListByExchange(soap, &soap_tmp___eoddata1__SplitListByExchange, "-eoddata1:SplitListByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SplitListByExchangeResponse)
		return soap_closesock(soap);
	eoddata1__SplitListByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SplitListByExchangeResponse.soap_get(soap, "eoddata1:SplitListByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SplitListBySymbol(const char *endpoint, const char *soap_action, _eoddata1__SplitListBySymbol *eoddata1__SplitListBySymbol, _eoddata1__SplitListBySymbolResponse &eoddata1__SplitListBySymbolResponse)
{	struct soap *soap = this;
	struct __eoddata1__SplitListBySymbol soap_tmp___eoddata1__SplitListBySymbol;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListBySymbol";
	soap_tmp___eoddata1__SplitListBySymbol.eoddata1__SplitListBySymbol = eoddata1__SplitListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SplitListBySymbol(soap, &soap_tmp___eoddata1__SplitListBySymbol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SplitListBySymbol(soap, &soap_tmp___eoddata1__SplitListBySymbol, "-eoddata1:SplitListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SplitListBySymbol(soap, &soap_tmp___eoddata1__SplitListBySymbol, "-eoddata1:SplitListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SplitListBySymbolResponse)
		return soap_closesock(soap);
	eoddata1__SplitListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SplitListBySymbolResponse.soap_get(soap, "eoddata1:SplitListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::CountryList(const char *endpoint, const char *soap_action, _eoddata1__CountryList *eoddata1__CountryList, _eoddata1__CountryListResponse &eoddata1__CountryListResponse)
{	struct soap *soap = this;
	struct __eoddata1__CountryList soap_tmp___eoddata1__CountryList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/CountryList";
	soap_tmp___eoddata1__CountryList.eoddata1__CountryList = eoddata1__CountryList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__CountryList(soap, &soap_tmp___eoddata1__CountryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__CountryList(soap, &soap_tmp___eoddata1__CountryList, "-eoddata1:CountryList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__CountryList(soap, &soap_tmp___eoddata1__CountryList, "-eoddata1:CountryList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__CountryListResponse)
		return soap_closesock(soap);
	eoddata1__CountryListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__CountryListResponse.soap_get(soap, "eoddata1:CountryListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistoryPeriod(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistoryPeriod *eoddata1__SymbolHistoryPeriod, _eoddata1__SymbolHistoryPeriodResponse &eoddata1__SymbolHistoryPeriodResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistoryPeriod soap_tmp___eoddata1__SymbolHistoryPeriod;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriod";
	soap_tmp___eoddata1__SymbolHistoryPeriod.eoddata1__SymbolHistoryPeriod = eoddata1__SymbolHistoryPeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistoryPeriod(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistoryPeriod(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod, "-eoddata1:SymbolHistoryPeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistoryPeriod(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod, "-eoddata1:SymbolHistoryPeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryPeriodResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodResponse.soap_get(soap, "eoddata1:SymbolHistoryPeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistoryPeriodByDateRange(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistoryPeriodByDateRange *eoddata1__SymbolHistoryPeriodByDateRange, _eoddata1__SymbolHistoryPeriodByDateRangeResponse &eoddata1__SymbolHistoryPeriodByDateRangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistoryPeriodByDateRange soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriodByDateRange";
	soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange.eoddata1__SymbolHistoryPeriodByDateRange = eoddata1__SymbolHistoryPeriodByDateRange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryPeriodByDateRangeResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodByDateRangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodByDateRangeResponse.soap_get(soap, "eoddata1:SymbolHistoryPeriodByDateRangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDatePeriod(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDatePeriod *eoddata1__QuoteListByDatePeriod, _eoddata1__QuoteListByDatePeriodResponse &eoddata1__QuoteListByDatePeriodResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDatePeriod soap_tmp___eoddata1__QuoteListByDatePeriod;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod";
	soap_tmp___eoddata1__QuoteListByDatePeriod.eoddata1__QuoteListByDatePeriod = eoddata1__QuoteListByDatePeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDatePeriod(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDatePeriod(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod, "-eoddata1:QuoteListByDatePeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDatePeriod(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod, "-eoddata1:QuoteListByDatePeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDatePeriodResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriodResponse.soap_get(soap, "eoddata1:QuoteListByDatePeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDatePeriod2(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDatePeriod2 *eoddata1__QuoteListByDatePeriod2, _eoddata1__QuoteListByDatePeriod2Response &eoddata1__QuoteListByDatePeriod2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDatePeriod2 soap_tmp___eoddata1__QuoteListByDatePeriod2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod2";
	soap_tmp___eoddata1__QuoteListByDatePeriod2.eoddata1__QuoteListByDatePeriod2 = eoddata1__QuoteListByDatePeriod2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDatePeriod2(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDatePeriod2(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2, "-eoddata1:QuoteListByDatePeriod2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDatePeriod2(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2, "-eoddata1:QuoteListByDatePeriod2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDatePeriod2Response)
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriod2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriod2Response.soap_get(soap, "eoddata1:QuoteListByDatePeriod2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolChangesByExchange(const char *endpoint, const char *soap_action, _eoddata1__SymbolChangesByExchange *eoddata1__SymbolChangesByExchange, _eoddata1__SymbolChangesByExchangeResponse &eoddata1__SymbolChangesByExchangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolChangesByExchange soap_tmp___eoddata1__SymbolChangesByExchange;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChangesByExchange";
	soap_tmp___eoddata1__SymbolChangesByExchange.eoddata1__SymbolChangesByExchange = eoddata1__SymbolChangesByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolChangesByExchange(soap, &soap_tmp___eoddata1__SymbolChangesByExchange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolChangesByExchange(soap, &soap_tmp___eoddata1__SymbolChangesByExchange, "-eoddata1:SymbolChangesByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolChangesByExchange(soap, &soap_tmp___eoddata1__SymbolChangesByExchange, "-eoddata1:SymbolChangesByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolChangesByExchangeResponse)
		return soap_closesock(soap);
	eoddata1__SymbolChangesByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolChangesByExchangeResponse.soap_get(soap, "eoddata1:SymbolChangesByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::DataClientLatestVersion(const char *endpoint, const char *soap_action, _eoddata1__DataClientLatestVersion *eoddata1__DataClientLatestVersion, _eoddata1__DataClientLatestVersionResponse &eoddata1__DataClientLatestVersionResponse)
{	struct soap *soap = this;
	struct __eoddata1__DataClientLatestVersion soap_tmp___eoddata1__DataClientLatestVersion;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataClientLatestVersion";
	soap_tmp___eoddata1__DataClientLatestVersion.eoddata1__DataClientLatestVersion = eoddata1__DataClientLatestVersion;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__DataClientLatestVersion(soap, &soap_tmp___eoddata1__DataClientLatestVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__DataClientLatestVersion(soap, &soap_tmp___eoddata1__DataClientLatestVersion, "-eoddata1:DataClientLatestVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__DataClientLatestVersion(soap, &soap_tmp___eoddata1__DataClientLatestVersion, "-eoddata1:DataClientLatestVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__DataClientLatestVersionResponse)
		return soap_closesock(soap);
	eoddata1__DataClientLatestVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__DataClientLatestVersionResponse.soap_get(soap, "eoddata1:DataClientLatestVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::DataFormats(const char *endpoint, const char *soap_action, _eoddata1__DataFormats *eoddata1__DataFormats, _eoddata1__DataFormatsResponse &eoddata1__DataFormatsResponse)
{	struct soap *soap = this;
	struct __eoddata1__DataFormats soap_tmp___eoddata1__DataFormats;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataFormats";
	soap_tmp___eoddata1__DataFormats.eoddata1__DataFormats = eoddata1__DataFormats;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__DataFormats(soap, &soap_tmp___eoddata1__DataFormats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__DataFormats(soap, &soap_tmp___eoddata1__DataFormats, "-eoddata1:DataFormats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__DataFormats(soap, &soap_tmp___eoddata1__DataFormats, "-eoddata1:DataFormats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__DataFormatsResponse)
		return soap_closesock(soap);
	eoddata1__DataFormatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__DataFormatsResponse.soap_get(soap, "eoddata1:DataFormatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::UpdateDataFormat(const char *endpoint, const char *soap_action, _eoddata1__UpdateDataFormat *eoddata1__UpdateDataFormat, _eoddata1__UpdateDataFormatResponse &eoddata1__UpdateDataFormatResponse)
{	struct soap *soap = this;
	struct __eoddata1__UpdateDataFormat soap_tmp___eoddata1__UpdateDataFormat;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/UpdateDataFormat";
	soap_tmp___eoddata1__UpdateDataFormat.eoddata1__UpdateDataFormat = eoddata1__UpdateDataFormat;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__UpdateDataFormat(soap, &soap_tmp___eoddata1__UpdateDataFormat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__UpdateDataFormat(soap, &soap_tmp___eoddata1__UpdateDataFormat, "-eoddata1:UpdateDataFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__UpdateDataFormat(soap, &soap_tmp___eoddata1__UpdateDataFormat, "-eoddata1:UpdateDataFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__UpdateDataFormatResponse)
		return soap_closesock(soap);
	eoddata1__UpdateDataFormatResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__UpdateDataFormatResponse.soap_get(soap, "eoddata1:UpdateDataFormatResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ValidateAccess(const char *endpoint, const char *soap_action, _eoddata1__ValidateAccess *eoddata1__ValidateAccess, _eoddata1__ValidateAccessResponse &eoddata1__ValidateAccessResponse)
{	struct soap *soap = this;
	struct __eoddata1__ValidateAccess soap_tmp___eoddata1__ValidateAccess;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ValidateAccess";
	soap_tmp___eoddata1__ValidateAccess.eoddata1__ValidateAccess = eoddata1__ValidateAccess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ValidateAccess(soap, &soap_tmp___eoddata1__ValidateAccess);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ValidateAccess(soap, &soap_tmp___eoddata1__ValidateAccess, "-eoddata1:ValidateAccess", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ValidateAccess(soap, &soap_tmp___eoddata1__ValidateAccess, "-eoddata1:ValidateAccess", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ValidateAccessResponse)
		return soap_closesock(soap);
	eoddata1__ValidateAccessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ValidateAccessResponse.soap_get(soap, "eoddata1:ValidateAccessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Login_(const char *endpoint, const char *soap_action, _eoddata1__Login *eoddata1__Login, _eoddata1__LoginResponse &eoddata1__LoginResponse)
{	struct soap *soap = this;
	struct __eoddata1__Login_ soap_tmp___eoddata1__Login_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login";
	soap_tmp___eoddata1__Login_.eoddata1__Login = eoddata1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Login_(soap, &soap_tmp___eoddata1__Login_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Login_(soap, &soap_tmp___eoddata1__Login_, "-eoddata1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Login_(soap, &soap_tmp___eoddata1__Login_, "-eoddata1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__LoginResponse)
		return soap_closesock(soap);
	eoddata1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__LoginResponse.soap_get(soap, "eoddata1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Login2_(const char *endpoint, const char *soap_action, _eoddata1__Login2 *eoddata1__Login2, _eoddata1__Login2Response &eoddata1__Login2Response)
{	struct soap *soap = this;
	struct __eoddata1__Login2_ soap_tmp___eoddata1__Login2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login2";
	soap_tmp___eoddata1__Login2_.eoddata1__Login2 = eoddata1__Login2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Login2_(soap, &soap_tmp___eoddata1__Login2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Login2_(soap, &soap_tmp___eoddata1__Login2_, "-eoddata1:Login2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Login2_(soap, &soap_tmp___eoddata1__Login2_, "-eoddata1:Login2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Login2Response)
		return soap_closesock(soap);
	eoddata1__Login2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Login2Response.soap_get(soap, "eoddata1:Login2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Membership_(const char *endpoint, const char *soap_action, _eoddata1__Membership *eoddata1__Membership, _eoddata1__MembershipResponse &eoddata1__MembershipResponse)
{	struct soap *soap = this;
	struct __eoddata1__Membership_ soap_tmp___eoddata1__Membership_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Membership";
	soap_tmp___eoddata1__Membership_.eoddata1__Membership = eoddata1__Membership;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Membership_(soap, &soap_tmp___eoddata1__Membership_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Membership_(soap, &soap_tmp___eoddata1__Membership_, "-eoddata1:Membership", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Membership_(soap, &soap_tmp___eoddata1__Membership_, "-eoddata1:Membership", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__MembershipResponse)
		return soap_closesock(soap);
	eoddata1__MembershipResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__MembershipResponse.soap_get(soap, "eoddata1:MembershipResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeList_(const char *endpoint, const char *soap_action, _eoddata1__ExchangeList *eoddata1__ExchangeList, _eoddata1__ExchangeListResponse &eoddata1__ExchangeListResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeList_ soap_tmp___eoddata1__ExchangeList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeList";
	soap_tmp___eoddata1__ExchangeList_.eoddata1__ExchangeList = eoddata1__ExchangeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeList_(soap, &soap_tmp___eoddata1__ExchangeList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeList_(soap, &soap_tmp___eoddata1__ExchangeList_, "-eoddata1:ExchangeList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeList_(soap, &soap_tmp___eoddata1__ExchangeList_, "-eoddata1:ExchangeList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeListResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeListResponse.soap_get(soap, "eoddata1:ExchangeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeGet_(const char *endpoint, const char *soap_action, _eoddata1__ExchangeGet *eoddata1__ExchangeGet, _eoddata1__ExchangeGetResponse &eoddata1__ExchangeGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeGet_ soap_tmp___eoddata1__ExchangeGet_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeGet";
	soap_tmp___eoddata1__ExchangeGet_.eoddata1__ExchangeGet = eoddata1__ExchangeGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeGet_(soap, &soap_tmp___eoddata1__ExchangeGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeGet_(soap, &soap_tmp___eoddata1__ExchangeGet_, "-eoddata1:ExchangeGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeGet_(soap, &soap_tmp___eoddata1__ExchangeGet_, "-eoddata1:ExchangeGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeGetResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeGetResponse.soap_get(soap, "eoddata1:ExchangeGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolList_(const char *endpoint, const char *soap_action, _eoddata1__SymbolList *eoddata1__SymbolList, _eoddata1__SymbolListResponse &eoddata1__SymbolListResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolList_ soap_tmp___eoddata1__SymbolList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList";
	soap_tmp___eoddata1__SymbolList_.eoddata1__SymbolList = eoddata1__SymbolList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolList_(soap, &soap_tmp___eoddata1__SymbolList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolList_(soap, &soap_tmp___eoddata1__SymbolList_, "-eoddata1:SymbolList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolList_(soap, &soap_tmp___eoddata1__SymbolList_, "-eoddata1:SymbolList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolListResponse)
		return soap_closesock(soap);
	eoddata1__SymbolListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolListResponse.soap_get(soap, "eoddata1:SymbolListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolList2_(const char *endpoint, const char *soap_action, _eoddata1__SymbolList2 *eoddata1__SymbolList2, _eoddata1__SymbolList2Response &eoddata1__SymbolList2Response)
{	struct soap *soap = this;
	struct __eoddata1__SymbolList2_ soap_tmp___eoddata1__SymbolList2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList2";
	soap_tmp___eoddata1__SymbolList2_.eoddata1__SymbolList2 = eoddata1__SymbolList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolList2_(soap, &soap_tmp___eoddata1__SymbolList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolList2_(soap, &soap_tmp___eoddata1__SymbolList2_, "-eoddata1:SymbolList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolList2_(soap, &soap_tmp___eoddata1__SymbolList2_, "-eoddata1:SymbolList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolList2Response)
		return soap_closesock(soap);
	eoddata1__SymbolList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolList2Response.soap_get(soap, "eoddata1:SymbolList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteGet_(const char *endpoint, const char *soap_action, _eoddata1__QuoteGet *eoddata1__QuoteGet, _eoddata1__QuoteGetResponse &eoddata1__QuoteGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteGet_ soap_tmp___eoddata1__QuoteGet_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteGet";
	soap_tmp___eoddata1__QuoteGet_.eoddata1__QuoteGet = eoddata1__QuoteGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteGet_(soap, &soap_tmp___eoddata1__QuoteGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteGet_(soap, &soap_tmp___eoddata1__QuoteGet_, "-eoddata1:QuoteGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteGet_(soap, &soap_tmp___eoddata1__QuoteGet_, "-eoddata1:QuoteGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteGetResponse)
		return soap_closesock(soap);
	eoddata1__QuoteGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteGetResponse.soap_get(soap, "eoddata1:QuoteGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteList2_(const char *endpoint, const char *soap_action, _eoddata1__QuoteList2 *eoddata1__QuoteList2, _eoddata1__QuoteList2Response &eoddata1__QuoteList2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteList2_ soap_tmp___eoddata1__QuoteList2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList2";
	soap_tmp___eoddata1__QuoteList2_.eoddata1__QuoteList2 = eoddata1__QuoteList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteList2_(soap, &soap_tmp___eoddata1__QuoteList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteList2_(soap, &soap_tmp___eoddata1__QuoteList2_, "-eoddata1:QuoteList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteList2_(soap, &soap_tmp___eoddata1__QuoteList2_, "-eoddata1:QuoteList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteList2Response)
		return soap_closesock(soap);
	eoddata1__QuoteList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteList2Response.soap_get(soap, "eoddata1:QuoteList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolGet_(const char *endpoint, const char *soap_action, _eoddata1__SymbolGet *eoddata1__SymbolGet, _eoddata1__SymbolGetResponse &eoddata1__SymbolGetResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolGet_ soap_tmp___eoddata1__SymbolGet_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolGet";
	soap_tmp___eoddata1__SymbolGet_.eoddata1__SymbolGet = eoddata1__SymbolGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolGet_(soap, &soap_tmp___eoddata1__SymbolGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolGet_(soap, &soap_tmp___eoddata1__SymbolGet_, "-eoddata1:SymbolGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolGet_(soap, &soap_tmp___eoddata1__SymbolGet_, "-eoddata1:SymbolGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolGetResponse)
		return soap_closesock(soap);
	eoddata1__SymbolGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolGetResponse.soap_get(soap, "eoddata1:SymbolGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteList_(const char *endpoint, const char *soap_action, _eoddata1__QuoteList *eoddata1__QuoteList, _eoddata1__QuoteListResponse &eoddata1__QuoteListResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteList_ soap_tmp___eoddata1__QuoteList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList";
	soap_tmp___eoddata1__QuoteList_.eoddata1__QuoteList = eoddata1__QuoteList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteList_(soap, &soap_tmp___eoddata1__QuoteList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteList_(soap, &soap_tmp___eoddata1__QuoteList_, "-eoddata1:QuoteList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteList_(soap, &soap_tmp___eoddata1__QuoteList_, "-eoddata1:QuoteList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListResponse.soap_get(soap, "eoddata1:QuoteListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::NewsList_(const char *endpoint, const char *soap_action, _eoddata1__NewsList *eoddata1__NewsList, _eoddata1__NewsListResponse &eoddata1__NewsListResponse)
{	struct soap *soap = this;
	struct __eoddata1__NewsList_ soap_tmp___eoddata1__NewsList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsList";
	soap_tmp___eoddata1__NewsList_.eoddata1__NewsList = eoddata1__NewsList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__NewsList_(soap, &soap_tmp___eoddata1__NewsList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__NewsList_(soap, &soap_tmp___eoddata1__NewsList_, "-eoddata1:NewsList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__NewsList_(soap, &soap_tmp___eoddata1__NewsList_, "-eoddata1:NewsList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__NewsListResponse)
		return soap_closesock(soap);
	eoddata1__NewsListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__NewsListResponse.soap_get(soap, "eoddata1:NewsListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::NewsListBySymbol_(const char *endpoint, const char *soap_action, _eoddata1__NewsListBySymbol *eoddata1__NewsListBySymbol, _eoddata1__NewsListBySymbolResponse &eoddata1__NewsListBySymbolResponse)
{	struct soap *soap = this;
	struct __eoddata1__NewsListBySymbol_ soap_tmp___eoddata1__NewsListBySymbol_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsListBySymbol";
	soap_tmp___eoddata1__NewsListBySymbol_.eoddata1__NewsListBySymbol = eoddata1__NewsListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__NewsListBySymbol_(soap, &soap_tmp___eoddata1__NewsListBySymbol_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__NewsListBySymbol_(soap, &soap_tmp___eoddata1__NewsListBySymbol_, "-eoddata1:NewsListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__NewsListBySymbol_(soap, &soap_tmp___eoddata1__NewsListBySymbol_, "-eoddata1:NewsListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__NewsListBySymbolResponse)
		return soap_closesock(soap);
	eoddata1__NewsListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__NewsListBySymbolResponse.soap_get(soap, "eoddata1:NewsListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::FundamentalList_(const char *endpoint, const char *soap_action, _eoddata1__FundamentalList *eoddata1__FundamentalList, _eoddata1__FundamentalListResponse &eoddata1__FundamentalListResponse)
{	struct soap *soap = this;
	struct __eoddata1__FundamentalList_ soap_tmp___eoddata1__FundamentalList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/FundamentalList";
	soap_tmp___eoddata1__FundamentalList_.eoddata1__FundamentalList = eoddata1__FundamentalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__FundamentalList_(soap, &soap_tmp___eoddata1__FundamentalList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__FundamentalList_(soap, &soap_tmp___eoddata1__FundamentalList_, "-eoddata1:FundamentalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__FundamentalList_(soap, &soap_tmp___eoddata1__FundamentalList_, "-eoddata1:FundamentalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__FundamentalListResponse)
		return soap_closesock(soap);
	eoddata1__FundamentalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__FundamentalListResponse.soap_get(soap, "eoddata1:FundamentalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::TechnicalList_(const char *endpoint, const char *soap_action, _eoddata1__TechnicalList *eoddata1__TechnicalList, _eoddata1__TechnicalListResponse &eoddata1__TechnicalListResponse)
{	struct soap *soap = this;
	struct __eoddata1__TechnicalList_ soap_tmp___eoddata1__TechnicalList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/TechnicalList";
	soap_tmp___eoddata1__TechnicalList_.eoddata1__TechnicalList = eoddata1__TechnicalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__TechnicalList_(soap, &soap_tmp___eoddata1__TechnicalList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__TechnicalList_(soap, &soap_tmp___eoddata1__TechnicalList_, "-eoddata1:TechnicalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__TechnicalList_(soap, &soap_tmp___eoddata1__TechnicalList_, "-eoddata1:TechnicalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__TechnicalListResponse)
		return soap_closesock(soap);
	eoddata1__TechnicalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__TechnicalListResponse.soap_get(soap, "eoddata1:TechnicalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDate_(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDate *eoddata1__QuoteListByDate, _eoddata1__QuoteListByDateResponse &eoddata1__QuoteListByDateResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDate_ soap_tmp___eoddata1__QuoteListByDate_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate";
	soap_tmp___eoddata1__QuoteListByDate_.eoddata1__QuoteListByDate = eoddata1__QuoteListByDate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDate_(soap, &soap_tmp___eoddata1__QuoteListByDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDate_(soap, &soap_tmp___eoddata1__QuoteListByDate_, "-eoddata1:QuoteListByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDate_(soap, &soap_tmp___eoddata1__QuoteListByDate_, "-eoddata1:QuoteListByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDateResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDateResponse.soap_get(soap, "eoddata1:QuoteListByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDate2_(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDate2 *eoddata1__QuoteListByDate2, _eoddata1__QuoteListByDate2Response &eoddata1__QuoteListByDate2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDate2_ soap_tmp___eoddata1__QuoteListByDate2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate2";
	soap_tmp___eoddata1__QuoteListByDate2_.eoddata1__QuoteListByDate2 = eoddata1__QuoteListByDate2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDate2_(soap, &soap_tmp___eoddata1__QuoteListByDate2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDate2_(soap, &soap_tmp___eoddata1__QuoteListByDate2_, "-eoddata1:QuoteListByDate2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDate2_(soap, &soap_tmp___eoddata1__QuoteListByDate2_, "-eoddata1:QuoteListByDate2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDate2Response)
		return soap_closesock(soap);
	eoddata1__QuoteListByDate2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDate2Response.soap_get(soap, "eoddata1:QuoteListByDate2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistory_(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistory *eoddata1__SymbolHistory, _eoddata1__SymbolHistoryResponse &eoddata1__SymbolHistoryResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistory_ soap_tmp___eoddata1__SymbolHistory_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistory";
	soap_tmp___eoddata1__SymbolHistory_.eoddata1__SymbolHistory = eoddata1__SymbolHistory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistory_(soap, &soap_tmp___eoddata1__SymbolHistory_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistory_(soap, &soap_tmp___eoddata1__SymbolHistory_, "-eoddata1:SymbolHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistory_(soap, &soap_tmp___eoddata1__SymbolHistory_, "-eoddata1:SymbolHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryResponse.soap_get(soap, "eoddata1:SymbolHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Top10Gains_(const char *endpoint, const char *soap_action, _eoddata1__Top10Gains *eoddata1__Top10Gains, _eoddata1__Top10GainsResponse &eoddata1__Top10GainsResponse)
{	struct soap *soap = this;
	struct __eoddata1__Top10Gains_ soap_tmp___eoddata1__Top10Gains_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Gains";
	soap_tmp___eoddata1__Top10Gains_.eoddata1__Top10Gains = eoddata1__Top10Gains;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Top10Gains_(soap, &soap_tmp___eoddata1__Top10Gains_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Top10Gains_(soap, &soap_tmp___eoddata1__Top10Gains_, "-eoddata1:Top10Gains", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Top10Gains_(soap, &soap_tmp___eoddata1__Top10Gains_, "-eoddata1:Top10Gains", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Top10GainsResponse)
		return soap_closesock(soap);
	eoddata1__Top10GainsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Top10GainsResponse.soap_get(soap, "eoddata1:Top10GainsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::Top10Losses_(const char *endpoint, const char *soap_action, _eoddata1__Top10Losses *eoddata1__Top10Losses, _eoddata1__Top10LossesResponse &eoddata1__Top10LossesResponse)
{	struct soap *soap = this;
	struct __eoddata1__Top10Losses_ soap_tmp___eoddata1__Top10Losses_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Losses";
	soap_tmp___eoddata1__Top10Losses_.eoddata1__Top10Losses = eoddata1__Top10Losses;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__Top10Losses_(soap, &soap_tmp___eoddata1__Top10Losses_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__Top10Losses_(soap, &soap_tmp___eoddata1__Top10Losses_, "-eoddata1:Top10Losses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__Top10Losses_(soap, &soap_tmp___eoddata1__Top10Losses_, "-eoddata1:Top10Losses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__Top10LossesResponse)
		return soap_closesock(soap);
	eoddata1__Top10LossesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__Top10LossesResponse.soap_get(soap, "eoddata1:Top10LossesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolChart_(const char *endpoint, const char *soap_action, _eoddata1__SymbolChart *eoddata1__SymbolChart, _eoddata1__SymbolChartResponse &eoddata1__SymbolChartResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolChart_ soap_tmp___eoddata1__SymbolChart_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChart";
	soap_tmp___eoddata1__SymbolChart_.eoddata1__SymbolChart = eoddata1__SymbolChart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolChart_(soap, &soap_tmp___eoddata1__SymbolChart_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolChart_(soap, &soap_tmp___eoddata1__SymbolChart_, "-eoddata1:SymbolChart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolChart_(soap, &soap_tmp___eoddata1__SymbolChart_, "-eoddata1:SymbolChart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolChartResponse)
		return soap_closesock(soap);
	eoddata1__SymbolChartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolChartResponse.soap_get(soap, "eoddata1:SymbolChartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ExchangeMonths_(const char *endpoint, const char *soap_action, _eoddata1__ExchangeMonths *eoddata1__ExchangeMonths, _eoddata1__ExchangeMonthsResponse &eoddata1__ExchangeMonthsResponse)
{	struct soap *soap = this;
	struct __eoddata1__ExchangeMonths_ soap_tmp___eoddata1__ExchangeMonths_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeMonths";
	soap_tmp___eoddata1__ExchangeMonths_.eoddata1__ExchangeMonths = eoddata1__ExchangeMonths;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ExchangeMonths_(soap, &soap_tmp___eoddata1__ExchangeMonths_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ExchangeMonths_(soap, &soap_tmp___eoddata1__ExchangeMonths_, "-eoddata1:ExchangeMonths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ExchangeMonths_(soap, &soap_tmp___eoddata1__ExchangeMonths_, "-eoddata1:ExchangeMonths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ExchangeMonthsResponse)
		return soap_closesock(soap);
	eoddata1__ExchangeMonthsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ExchangeMonthsResponse.soap_get(soap, "eoddata1:ExchangeMonthsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SplitListByExchange_(const char *endpoint, const char *soap_action, _eoddata1__SplitListByExchange *eoddata1__SplitListByExchange, _eoddata1__SplitListByExchangeResponse &eoddata1__SplitListByExchangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SplitListByExchange_ soap_tmp___eoddata1__SplitListByExchange_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListByExchange";
	soap_tmp___eoddata1__SplitListByExchange_.eoddata1__SplitListByExchange = eoddata1__SplitListByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SplitListByExchange_(soap, &soap_tmp___eoddata1__SplitListByExchange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SplitListByExchange_(soap, &soap_tmp___eoddata1__SplitListByExchange_, "-eoddata1:SplitListByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SplitListByExchange_(soap, &soap_tmp___eoddata1__SplitListByExchange_, "-eoddata1:SplitListByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SplitListByExchangeResponse)
		return soap_closesock(soap);
	eoddata1__SplitListByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SplitListByExchangeResponse.soap_get(soap, "eoddata1:SplitListByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SplitListBySymbol_(const char *endpoint, const char *soap_action, _eoddata1__SplitListBySymbol *eoddata1__SplitListBySymbol, _eoddata1__SplitListBySymbolResponse &eoddata1__SplitListBySymbolResponse)
{	struct soap *soap = this;
	struct __eoddata1__SplitListBySymbol_ soap_tmp___eoddata1__SplitListBySymbol_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListBySymbol";
	soap_tmp___eoddata1__SplitListBySymbol_.eoddata1__SplitListBySymbol = eoddata1__SplitListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SplitListBySymbol_(soap, &soap_tmp___eoddata1__SplitListBySymbol_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SplitListBySymbol_(soap, &soap_tmp___eoddata1__SplitListBySymbol_, "-eoddata1:SplitListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SplitListBySymbol_(soap, &soap_tmp___eoddata1__SplitListBySymbol_, "-eoddata1:SplitListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SplitListBySymbolResponse)
		return soap_closesock(soap);
	eoddata1__SplitListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SplitListBySymbolResponse.soap_get(soap, "eoddata1:SplitListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::CountryList_(const char *endpoint, const char *soap_action, _eoddata1__CountryList *eoddata1__CountryList, _eoddata1__CountryListResponse &eoddata1__CountryListResponse)
{	struct soap *soap = this;
	struct __eoddata1__CountryList_ soap_tmp___eoddata1__CountryList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/CountryList";
	soap_tmp___eoddata1__CountryList_.eoddata1__CountryList = eoddata1__CountryList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__CountryList_(soap, &soap_tmp___eoddata1__CountryList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__CountryList_(soap, &soap_tmp___eoddata1__CountryList_, "-eoddata1:CountryList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__CountryList_(soap, &soap_tmp___eoddata1__CountryList_, "-eoddata1:CountryList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__CountryListResponse)
		return soap_closesock(soap);
	eoddata1__CountryListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__CountryListResponse.soap_get(soap, "eoddata1:CountryListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistoryPeriod_(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistoryPeriod *eoddata1__SymbolHistoryPeriod, _eoddata1__SymbolHistoryPeriodResponse &eoddata1__SymbolHistoryPeriodResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistoryPeriod_ soap_tmp___eoddata1__SymbolHistoryPeriod_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriod";
	soap_tmp___eoddata1__SymbolHistoryPeriod_.eoddata1__SymbolHistoryPeriod = eoddata1__SymbolHistoryPeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistoryPeriod_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistoryPeriod_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod_, "-eoddata1:SymbolHistoryPeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistoryPeriod_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriod_, "-eoddata1:SymbolHistoryPeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryPeriodResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodResponse.soap_get(soap, "eoddata1:SymbolHistoryPeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolHistoryPeriodByDateRange_(const char *endpoint, const char *soap_action, _eoddata1__SymbolHistoryPeriodByDateRange *eoddata1__SymbolHistoryPeriodByDateRange, _eoddata1__SymbolHistoryPeriodByDateRangeResponse &eoddata1__SymbolHistoryPeriodByDateRangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolHistoryPeriodByDateRange_ soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriodByDateRange";
	soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange_.eoddata1__SymbolHistoryPeriodByDateRange = eoddata1__SymbolHistoryPeriodByDateRange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange_, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___eoddata1__SymbolHistoryPeriodByDateRange_, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolHistoryPeriodByDateRangeResponse)
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodByDateRangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolHistoryPeriodByDateRangeResponse.soap_get(soap, "eoddata1:SymbolHistoryPeriodByDateRangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDatePeriod_(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDatePeriod *eoddata1__QuoteListByDatePeriod, _eoddata1__QuoteListByDatePeriodResponse &eoddata1__QuoteListByDatePeriodResponse)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDatePeriod_ soap_tmp___eoddata1__QuoteListByDatePeriod_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod";
	soap_tmp___eoddata1__QuoteListByDatePeriod_.eoddata1__QuoteListByDatePeriod = eoddata1__QuoteListByDatePeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDatePeriod_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDatePeriod_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod_, "-eoddata1:QuoteListByDatePeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDatePeriod_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod_, "-eoddata1:QuoteListByDatePeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDatePeriodResponse)
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriodResponse.soap_get(soap, "eoddata1:QuoteListByDatePeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::QuoteListByDatePeriod2_(const char *endpoint, const char *soap_action, _eoddata1__QuoteListByDatePeriod2 *eoddata1__QuoteListByDatePeriod2, _eoddata1__QuoteListByDatePeriod2Response &eoddata1__QuoteListByDatePeriod2Response)
{	struct soap *soap = this;
	struct __eoddata1__QuoteListByDatePeriod2_ soap_tmp___eoddata1__QuoteListByDatePeriod2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod2";
	soap_tmp___eoddata1__QuoteListByDatePeriod2_.eoddata1__QuoteListByDatePeriod2 = eoddata1__QuoteListByDatePeriod2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__QuoteListByDatePeriod2_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__QuoteListByDatePeriod2_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2_, "-eoddata1:QuoteListByDatePeriod2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__QuoteListByDatePeriod2_(soap, &soap_tmp___eoddata1__QuoteListByDatePeriod2_, "-eoddata1:QuoteListByDatePeriod2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__QuoteListByDatePeriod2Response)
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriod2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__QuoteListByDatePeriod2Response.soap_get(soap, "eoddata1:QuoteListByDatePeriod2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::SymbolChangesByExchange_(const char *endpoint, const char *soap_action, _eoddata1__SymbolChangesByExchange *eoddata1__SymbolChangesByExchange, _eoddata1__SymbolChangesByExchangeResponse &eoddata1__SymbolChangesByExchangeResponse)
{	struct soap *soap = this;
	struct __eoddata1__SymbolChangesByExchange_ soap_tmp___eoddata1__SymbolChangesByExchange_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChangesByExchange";
	soap_tmp___eoddata1__SymbolChangesByExchange_.eoddata1__SymbolChangesByExchange = eoddata1__SymbolChangesByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__SymbolChangesByExchange_(soap, &soap_tmp___eoddata1__SymbolChangesByExchange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__SymbolChangesByExchange_(soap, &soap_tmp___eoddata1__SymbolChangesByExchange_, "-eoddata1:SymbolChangesByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__SymbolChangesByExchange_(soap, &soap_tmp___eoddata1__SymbolChangesByExchange_, "-eoddata1:SymbolChangesByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__SymbolChangesByExchangeResponse)
		return soap_closesock(soap);
	eoddata1__SymbolChangesByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__SymbolChangesByExchangeResponse.soap_get(soap, "eoddata1:SymbolChangesByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::DataClientLatestVersion_(const char *endpoint, const char *soap_action, _eoddata1__DataClientLatestVersion *eoddata1__DataClientLatestVersion, _eoddata1__DataClientLatestVersionResponse &eoddata1__DataClientLatestVersionResponse)
{	struct soap *soap = this;
	struct __eoddata1__DataClientLatestVersion_ soap_tmp___eoddata1__DataClientLatestVersion_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataClientLatestVersion";
	soap_tmp___eoddata1__DataClientLatestVersion_.eoddata1__DataClientLatestVersion = eoddata1__DataClientLatestVersion;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__DataClientLatestVersion_(soap, &soap_tmp___eoddata1__DataClientLatestVersion_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__DataClientLatestVersion_(soap, &soap_tmp___eoddata1__DataClientLatestVersion_, "-eoddata1:DataClientLatestVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__DataClientLatestVersion_(soap, &soap_tmp___eoddata1__DataClientLatestVersion_, "-eoddata1:DataClientLatestVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__DataClientLatestVersionResponse)
		return soap_closesock(soap);
	eoddata1__DataClientLatestVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__DataClientLatestVersionResponse.soap_get(soap, "eoddata1:DataClientLatestVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::DataFormats_(const char *endpoint, const char *soap_action, _eoddata1__DataFormats *eoddata1__DataFormats, _eoddata1__DataFormatsResponse &eoddata1__DataFormatsResponse)
{	struct soap *soap = this;
	struct __eoddata1__DataFormats_ soap_tmp___eoddata1__DataFormats_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataFormats";
	soap_tmp___eoddata1__DataFormats_.eoddata1__DataFormats = eoddata1__DataFormats;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__DataFormats_(soap, &soap_tmp___eoddata1__DataFormats_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__DataFormats_(soap, &soap_tmp___eoddata1__DataFormats_, "-eoddata1:DataFormats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__DataFormats_(soap, &soap_tmp___eoddata1__DataFormats_, "-eoddata1:DataFormats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__DataFormatsResponse)
		return soap_closesock(soap);
	eoddata1__DataFormatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__DataFormatsResponse.soap_get(soap, "eoddata1:DataFormatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::UpdateDataFormat_(const char *endpoint, const char *soap_action, _eoddata1__UpdateDataFormat *eoddata1__UpdateDataFormat, _eoddata1__UpdateDataFormatResponse &eoddata1__UpdateDataFormatResponse)
{	struct soap *soap = this;
	struct __eoddata1__UpdateDataFormat_ soap_tmp___eoddata1__UpdateDataFormat_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/UpdateDataFormat";
	soap_tmp___eoddata1__UpdateDataFormat_.eoddata1__UpdateDataFormat = eoddata1__UpdateDataFormat;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__UpdateDataFormat_(soap, &soap_tmp___eoddata1__UpdateDataFormat_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__UpdateDataFormat_(soap, &soap_tmp___eoddata1__UpdateDataFormat_, "-eoddata1:UpdateDataFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__UpdateDataFormat_(soap, &soap_tmp___eoddata1__UpdateDataFormat_, "-eoddata1:UpdateDataFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__UpdateDataFormatResponse)
		return soap_closesock(soap);
	eoddata1__UpdateDataFormatResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__UpdateDataFormatResponse.soap_get(soap, "eoddata1:UpdateDataFormatResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DataSoapProxy::ValidateAccess_(const char *endpoint, const char *soap_action, _eoddata1__ValidateAccess *eoddata1__ValidateAccess, _eoddata1__ValidateAccessResponse &eoddata1__ValidateAccessResponse)
{	struct soap *soap = this;
	struct __eoddata1__ValidateAccess_ soap_tmp___eoddata1__ValidateAccess_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ValidateAccess";
	soap_tmp___eoddata1__ValidateAccess_.eoddata1__ValidateAccess = eoddata1__ValidateAccess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___eoddata1__ValidateAccess_(soap, &soap_tmp___eoddata1__ValidateAccess_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___eoddata1__ValidateAccess_(soap, &soap_tmp___eoddata1__ValidateAccess_, "-eoddata1:ValidateAccess", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___eoddata1__ValidateAccess_(soap, &soap_tmp___eoddata1__ValidateAccess_, "-eoddata1:ValidateAccess", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&eoddata1__ValidateAccessResponse)
		return soap_closesock(soap);
	eoddata1__ValidateAccessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	eoddata1__ValidateAccessResponse.soap_get(soap, "eoddata1:ValidateAccessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace eoddata

/* End of client proxy code */
