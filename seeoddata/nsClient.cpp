/* nsClient.cpp
   Generated by gSOAP 2.8.28 from eoddatawebservice.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "nsH.h"

namespace ns {

SOAP_SOURCE_STAMP("@(#) nsClient.cpp ver 2.8.28 2016-06-13 10:48:13 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct __ns1__Login soap_tmp___ns1__Login;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login";
	soap_tmp___ns1__Login.ns1__Login = ns1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login(soap, &soap_tmp___ns1__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LoginResponse)
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login2(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login2 *ns1__Login2, _ns1__Login2Response &ns1__Login2Response)
{	struct __ns1__Login2 soap_tmp___ns1__Login2;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login2";
	soap_tmp___ns1__Login2.ns1__Login2 = ns1__Login2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login2(soap, &soap_tmp___ns1__Login2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login2(soap, &soap_tmp___ns1__Login2, "-ns1:Login2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login2(soap, &soap_tmp___ns1__Login2, "-ns1:Login2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Login2Response)
		return soap_closesock(soap);
	ns1__Login2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Login2Response.soap_get(soap, "ns1:Login2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Membership(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Membership *ns1__Membership, _ns1__MembershipResponse &ns1__MembershipResponse)
{	struct __ns1__Membership soap_tmp___ns1__Membership;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Membership";
	soap_tmp___ns1__Membership.ns1__Membership = ns1__Membership;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Membership(soap, &soap_tmp___ns1__Membership);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Membership(soap, &soap_tmp___ns1__Membership, "-ns1:Membership", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Membership(soap, &soap_tmp___ns1__Membership, "-ns1:Membership", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MembershipResponse)
		return soap_closesock(soap);
	ns1__MembershipResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MembershipResponse.soap_get(soap, "ns1:MembershipResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeList *ns1__ExchangeList, _ns1__ExchangeListResponse &ns1__ExchangeListResponse)
{	struct __ns1__ExchangeList soap_tmp___ns1__ExchangeList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeList";
	soap_tmp___ns1__ExchangeList.ns1__ExchangeList = ns1__ExchangeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeList(soap, &soap_tmp___ns1__ExchangeList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeList(soap, &soap_tmp___ns1__ExchangeList, "-ns1:ExchangeList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeList(soap, &soap_tmp___ns1__ExchangeList, "-ns1:ExchangeList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeListResponse)
		return soap_closesock(soap);
	ns1__ExchangeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeListResponse.soap_get(soap, "ns1:ExchangeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeGet *ns1__ExchangeGet, _ns1__ExchangeGetResponse &ns1__ExchangeGetResponse)
{	struct __ns1__ExchangeGet soap_tmp___ns1__ExchangeGet;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeGet";
	soap_tmp___ns1__ExchangeGet.ns1__ExchangeGet = ns1__ExchangeGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeGet(soap, &soap_tmp___ns1__ExchangeGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeGet(soap, &soap_tmp___ns1__ExchangeGet, "-ns1:ExchangeGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeGet(soap, &soap_tmp___ns1__ExchangeGet, "-ns1:ExchangeGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeGetResponse)
		return soap_closesock(soap);
	ns1__ExchangeGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeGetResponse.soap_get(soap, "ns1:ExchangeGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolList *ns1__SymbolList, _ns1__SymbolListResponse &ns1__SymbolListResponse)
{	struct __ns1__SymbolList soap_tmp___ns1__SymbolList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList";
	soap_tmp___ns1__SymbolList.ns1__SymbolList = ns1__SymbolList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolList(soap, &soap_tmp___ns1__SymbolList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolList(soap, &soap_tmp___ns1__SymbolList, "-ns1:SymbolList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolList(soap, &soap_tmp___ns1__SymbolList, "-ns1:SymbolList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolListResponse)
		return soap_closesock(soap);
	ns1__SymbolListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolListResponse.soap_get(soap, "ns1:SymbolListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList2(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolList2 *ns1__SymbolList2, _ns1__SymbolList2Response &ns1__SymbolList2Response)
{	struct __ns1__SymbolList2 soap_tmp___ns1__SymbolList2;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList2";
	soap_tmp___ns1__SymbolList2.ns1__SymbolList2 = ns1__SymbolList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolList2(soap, &soap_tmp___ns1__SymbolList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolList2(soap, &soap_tmp___ns1__SymbolList2, "-ns1:SymbolList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolList2(soap, &soap_tmp___ns1__SymbolList2, "-ns1:SymbolList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolList2Response)
		return soap_closesock(soap);
	ns1__SymbolList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolList2Response.soap_get(soap, "ns1:SymbolList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteGet *ns1__QuoteGet, _ns1__QuoteGetResponse &ns1__QuoteGetResponse)
{	struct __ns1__QuoteGet soap_tmp___ns1__QuoteGet;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteGet";
	soap_tmp___ns1__QuoteGet.ns1__QuoteGet = ns1__QuoteGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteGet(soap, &soap_tmp___ns1__QuoteGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteGet(soap, &soap_tmp___ns1__QuoteGet, "-ns1:QuoteGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteGet(soap, &soap_tmp___ns1__QuoteGet, "-ns1:QuoteGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteGetResponse)
		return soap_closesock(soap);
	ns1__QuoteGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteGetResponse.soap_get(soap, "ns1:QuoteGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList2(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteList2 *ns1__QuoteList2, _ns1__QuoteList2Response &ns1__QuoteList2Response)
{	struct __ns1__QuoteList2 soap_tmp___ns1__QuoteList2;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList2";
	soap_tmp___ns1__QuoteList2.ns1__QuoteList2 = ns1__QuoteList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteList2(soap, &soap_tmp___ns1__QuoteList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteList2(soap, &soap_tmp___ns1__QuoteList2, "-ns1:QuoteList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteList2(soap, &soap_tmp___ns1__QuoteList2, "-ns1:QuoteList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteList2Response)
		return soap_closesock(soap);
	ns1__QuoteList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteList2Response.soap_get(soap, "ns1:QuoteList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolGet(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolGet *ns1__SymbolGet, _ns1__SymbolGetResponse &ns1__SymbolGetResponse)
{	struct __ns1__SymbolGet soap_tmp___ns1__SymbolGet;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolGet";
	soap_tmp___ns1__SymbolGet.ns1__SymbolGet = ns1__SymbolGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolGet(soap, &soap_tmp___ns1__SymbolGet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolGet(soap, &soap_tmp___ns1__SymbolGet, "-ns1:SymbolGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolGet(soap, &soap_tmp___ns1__SymbolGet, "-ns1:SymbolGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolGetResponse)
		return soap_closesock(soap);
	ns1__SymbolGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolGetResponse.soap_get(soap, "ns1:SymbolGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteList *ns1__QuoteList, _ns1__QuoteListResponse &ns1__QuoteListResponse)
{	struct __ns1__QuoteList soap_tmp___ns1__QuoteList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList";
	soap_tmp___ns1__QuoteList.ns1__QuoteList = ns1__QuoteList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteList(soap, &soap_tmp___ns1__QuoteList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteList(soap, &soap_tmp___ns1__QuoteList, "-ns1:QuoteList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteList(soap, &soap_tmp___ns1__QuoteList, "-ns1:QuoteList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListResponse)
		return soap_closesock(soap);
	ns1__QuoteListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListResponse.soap_get(soap, "ns1:QuoteListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__NewsList *ns1__NewsList, _ns1__NewsListResponse &ns1__NewsListResponse)
{	struct __ns1__NewsList soap_tmp___ns1__NewsList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsList";
	soap_tmp___ns1__NewsList.ns1__NewsList = ns1__NewsList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__NewsList(soap, &soap_tmp___ns1__NewsList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__NewsList(soap, &soap_tmp___ns1__NewsList, "-ns1:NewsList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__NewsList(soap, &soap_tmp___ns1__NewsList, "-ns1:NewsList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__NewsListResponse)
		return soap_closesock(soap);
	ns1__NewsListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NewsListResponse.soap_get(soap, "ns1:NewsListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsListBySymbol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__NewsListBySymbol *ns1__NewsListBySymbol, _ns1__NewsListBySymbolResponse &ns1__NewsListBySymbolResponse)
{	struct __ns1__NewsListBySymbol soap_tmp___ns1__NewsListBySymbol;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsListBySymbol";
	soap_tmp___ns1__NewsListBySymbol.ns1__NewsListBySymbol = ns1__NewsListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__NewsListBySymbol(soap, &soap_tmp___ns1__NewsListBySymbol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__NewsListBySymbol(soap, &soap_tmp___ns1__NewsListBySymbol, "-ns1:NewsListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__NewsListBySymbol(soap, &soap_tmp___ns1__NewsListBySymbol, "-ns1:NewsListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__NewsListBySymbolResponse)
		return soap_closesock(soap);
	ns1__NewsListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NewsListBySymbolResponse.soap_get(soap, "ns1:NewsListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FundamentalList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__FundamentalList *ns1__FundamentalList, _ns1__FundamentalListResponse &ns1__FundamentalListResponse)
{	struct __ns1__FundamentalList soap_tmp___ns1__FundamentalList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/FundamentalList";
	soap_tmp___ns1__FundamentalList.ns1__FundamentalList = ns1__FundamentalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__FundamentalList(soap, &soap_tmp___ns1__FundamentalList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FundamentalList(soap, &soap_tmp___ns1__FundamentalList, "-ns1:FundamentalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FundamentalList(soap, &soap_tmp___ns1__FundamentalList, "-ns1:FundamentalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FundamentalListResponse)
		return soap_closesock(soap);
	ns1__FundamentalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FundamentalListResponse.soap_get(soap, "ns1:FundamentalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TechnicalList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TechnicalList *ns1__TechnicalList, _ns1__TechnicalListResponse &ns1__TechnicalListResponse)
{	struct __ns1__TechnicalList soap_tmp___ns1__TechnicalList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/TechnicalList";
	soap_tmp___ns1__TechnicalList.ns1__TechnicalList = ns1__TechnicalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TechnicalList(soap, &soap_tmp___ns1__TechnicalList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TechnicalList(soap, &soap_tmp___ns1__TechnicalList, "-ns1:TechnicalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TechnicalList(soap, &soap_tmp___ns1__TechnicalList, "-ns1:TechnicalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TechnicalListResponse)
		return soap_closesock(soap);
	ns1__TechnicalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TechnicalListResponse.soap_get(soap, "ns1:TechnicalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDate *ns1__QuoteListByDate, _ns1__QuoteListByDateResponse &ns1__QuoteListByDateResponse)
{	struct __ns1__QuoteListByDate soap_tmp___ns1__QuoteListByDate;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate";
	soap_tmp___ns1__QuoteListByDate.ns1__QuoteListByDate = ns1__QuoteListByDate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDate(soap, &soap_tmp___ns1__QuoteListByDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDate(soap, &soap_tmp___ns1__QuoteListByDate, "-ns1:QuoteListByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDate(soap, &soap_tmp___ns1__QuoteListByDate, "-ns1:QuoteListByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDateResponse)
		return soap_closesock(soap);
	ns1__QuoteListByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDateResponse.soap_get(soap, "ns1:QuoteListByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate2(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDate2 *ns1__QuoteListByDate2, _ns1__QuoteListByDate2Response &ns1__QuoteListByDate2Response)
{	struct __ns1__QuoteListByDate2 soap_tmp___ns1__QuoteListByDate2;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate2";
	soap_tmp___ns1__QuoteListByDate2.ns1__QuoteListByDate2 = ns1__QuoteListByDate2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDate2(soap, &soap_tmp___ns1__QuoteListByDate2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDate2(soap, &soap_tmp___ns1__QuoteListByDate2, "-ns1:QuoteListByDate2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDate2(soap, &soap_tmp___ns1__QuoteListByDate2, "-ns1:QuoteListByDate2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDate2Response)
		return soap_closesock(soap);
	ns1__QuoteListByDate2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDate2Response.soap_get(soap, "ns1:QuoteListByDate2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistory *ns1__SymbolHistory, _ns1__SymbolHistoryResponse &ns1__SymbolHistoryResponse)
{	struct __ns1__SymbolHistory soap_tmp___ns1__SymbolHistory;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistory";
	soap_tmp___ns1__SymbolHistory.ns1__SymbolHistory = ns1__SymbolHistory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistory(soap, &soap_tmp___ns1__SymbolHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistory(soap, &soap_tmp___ns1__SymbolHistory, "-ns1:SymbolHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistory(soap, &soap_tmp___ns1__SymbolHistory, "-ns1:SymbolHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryResponse.soap_get(soap, "ns1:SymbolHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Gains(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Top10Gains *ns1__Top10Gains, _ns1__Top10GainsResponse &ns1__Top10GainsResponse)
{	struct __ns1__Top10Gains soap_tmp___ns1__Top10Gains;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Gains";
	soap_tmp___ns1__Top10Gains.ns1__Top10Gains = ns1__Top10Gains;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Top10Gains(soap, &soap_tmp___ns1__Top10Gains);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Top10Gains(soap, &soap_tmp___ns1__Top10Gains, "-ns1:Top10Gains", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Top10Gains(soap, &soap_tmp___ns1__Top10Gains, "-ns1:Top10Gains", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Top10GainsResponse)
		return soap_closesock(soap);
	ns1__Top10GainsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Top10GainsResponse.soap_get(soap, "ns1:Top10GainsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Losses(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Top10Losses *ns1__Top10Losses, _ns1__Top10LossesResponse &ns1__Top10LossesResponse)
{	struct __ns1__Top10Losses soap_tmp___ns1__Top10Losses;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Losses";
	soap_tmp___ns1__Top10Losses.ns1__Top10Losses = ns1__Top10Losses;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Top10Losses(soap, &soap_tmp___ns1__Top10Losses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Top10Losses(soap, &soap_tmp___ns1__Top10Losses, "-ns1:Top10Losses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Top10Losses(soap, &soap_tmp___ns1__Top10Losses, "-ns1:Top10Losses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Top10LossesResponse)
		return soap_closesock(soap);
	ns1__Top10LossesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Top10LossesResponse.soap_get(soap, "ns1:Top10LossesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChart(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolChart *ns1__SymbolChart, _ns1__SymbolChartResponse &ns1__SymbolChartResponse)
{	struct __ns1__SymbolChart soap_tmp___ns1__SymbolChart;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChart";
	soap_tmp___ns1__SymbolChart.ns1__SymbolChart = ns1__SymbolChart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolChart(soap, &soap_tmp___ns1__SymbolChart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolChart(soap, &soap_tmp___ns1__SymbolChart, "-ns1:SymbolChart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolChart(soap, &soap_tmp___ns1__SymbolChart, "-ns1:SymbolChart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolChartResponse)
		return soap_closesock(soap);
	ns1__SymbolChartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolChartResponse.soap_get(soap, "ns1:SymbolChartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeMonths(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeMonths *ns1__ExchangeMonths, _ns1__ExchangeMonthsResponse &ns1__ExchangeMonthsResponse)
{	struct __ns1__ExchangeMonths soap_tmp___ns1__ExchangeMonths;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeMonths";
	soap_tmp___ns1__ExchangeMonths.ns1__ExchangeMonths = ns1__ExchangeMonths;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeMonths(soap, &soap_tmp___ns1__ExchangeMonths);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeMonths(soap, &soap_tmp___ns1__ExchangeMonths, "-ns1:ExchangeMonths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeMonths(soap, &soap_tmp___ns1__ExchangeMonths, "-ns1:ExchangeMonths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeMonthsResponse)
		return soap_closesock(soap);
	ns1__ExchangeMonthsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeMonthsResponse.soap_get(soap, "ns1:ExchangeMonthsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListByExchange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SplitListByExchange *ns1__SplitListByExchange, _ns1__SplitListByExchangeResponse &ns1__SplitListByExchangeResponse)
{	struct __ns1__SplitListByExchange soap_tmp___ns1__SplitListByExchange;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListByExchange";
	soap_tmp___ns1__SplitListByExchange.ns1__SplitListByExchange = ns1__SplitListByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SplitListByExchange(soap, &soap_tmp___ns1__SplitListByExchange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SplitListByExchange(soap, &soap_tmp___ns1__SplitListByExchange, "-ns1:SplitListByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SplitListByExchange(soap, &soap_tmp___ns1__SplitListByExchange, "-ns1:SplitListByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SplitListByExchangeResponse)
		return soap_closesock(soap);
	ns1__SplitListByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SplitListByExchangeResponse.soap_get(soap, "ns1:SplitListByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListBySymbol(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SplitListBySymbol *ns1__SplitListBySymbol, _ns1__SplitListBySymbolResponse &ns1__SplitListBySymbolResponse)
{	struct __ns1__SplitListBySymbol soap_tmp___ns1__SplitListBySymbol;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListBySymbol";
	soap_tmp___ns1__SplitListBySymbol.ns1__SplitListBySymbol = ns1__SplitListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SplitListBySymbol(soap, &soap_tmp___ns1__SplitListBySymbol);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SplitListBySymbol(soap, &soap_tmp___ns1__SplitListBySymbol, "-ns1:SplitListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SplitListBySymbol(soap, &soap_tmp___ns1__SplitListBySymbol, "-ns1:SplitListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SplitListBySymbolResponse)
		return soap_closesock(soap);
	ns1__SplitListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SplitListBySymbolResponse.soap_get(soap, "ns1:SplitListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountryList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountryList *ns1__CountryList, _ns1__CountryListResponse &ns1__CountryListResponse)
{	struct __ns1__CountryList soap_tmp___ns1__CountryList;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/CountryList";
	soap_tmp___ns1__CountryList.ns1__CountryList = ns1__CountryList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CountryList(soap, &soap_tmp___ns1__CountryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CountryList(soap, &soap_tmp___ns1__CountryList, "-ns1:CountryList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CountryList(soap, &soap_tmp___ns1__CountryList, "-ns1:CountryList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CountryListResponse)
		return soap_closesock(soap);
	ns1__CountryListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountryListResponse.soap_get(soap, "ns1:CountryListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriod(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistoryPeriod *ns1__SymbolHistoryPeriod, _ns1__SymbolHistoryPeriodResponse &ns1__SymbolHistoryPeriodResponse)
{	struct __ns1__SymbolHistoryPeriod soap_tmp___ns1__SymbolHistoryPeriod;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriod";
	soap_tmp___ns1__SymbolHistoryPeriod.ns1__SymbolHistoryPeriod = ns1__SymbolHistoryPeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistoryPeriod(soap, &soap_tmp___ns1__SymbolHistoryPeriod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistoryPeriod(soap, &soap_tmp___ns1__SymbolHistoryPeriod, "-ns1:SymbolHistoryPeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistoryPeriod(soap, &soap_tmp___ns1__SymbolHistoryPeriod, "-ns1:SymbolHistoryPeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryPeriodResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodResponse.soap_get(soap, "ns1:SymbolHistoryPeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriodByDateRange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistoryPeriodByDateRange *ns1__SymbolHistoryPeriodByDateRange, _ns1__SymbolHistoryPeriodByDateRangeResponse &ns1__SymbolHistoryPeriodByDateRangeResponse)
{	struct __ns1__SymbolHistoryPeriodByDateRange soap_tmp___ns1__SymbolHistoryPeriodByDateRange;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriodByDateRange";
	soap_tmp___ns1__SymbolHistoryPeriodByDateRange.ns1__SymbolHistoryPeriodByDateRange = ns1__SymbolHistoryPeriodByDateRange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange, "-ns1:SymbolHistoryPeriodByDateRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistoryPeriodByDateRange(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange, "-ns1:SymbolHistoryPeriodByDateRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryPeriodByDateRangeResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodByDateRangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodByDateRangeResponse.soap_get(soap, "ns1:SymbolHistoryPeriodByDateRangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDatePeriod *ns1__QuoteListByDatePeriod, _ns1__QuoteListByDatePeriodResponse &ns1__QuoteListByDatePeriodResponse)
{	struct __ns1__QuoteListByDatePeriod soap_tmp___ns1__QuoteListByDatePeriod;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod";
	soap_tmp___ns1__QuoteListByDatePeriod.ns1__QuoteListByDatePeriod = ns1__QuoteListByDatePeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDatePeriod(soap, &soap_tmp___ns1__QuoteListByDatePeriod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDatePeriod(soap, &soap_tmp___ns1__QuoteListByDatePeriod, "-ns1:QuoteListByDatePeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDatePeriod(soap, &soap_tmp___ns1__QuoteListByDatePeriod, "-ns1:QuoteListByDatePeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDatePeriodResponse)
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriodResponse.soap_get(soap, "ns1:QuoteListByDatePeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod2(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDatePeriod2 *ns1__QuoteListByDatePeriod2, _ns1__QuoteListByDatePeriod2Response &ns1__QuoteListByDatePeriod2Response)
{	struct __ns1__QuoteListByDatePeriod2 soap_tmp___ns1__QuoteListByDatePeriod2;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod2";
	soap_tmp___ns1__QuoteListByDatePeriod2.ns1__QuoteListByDatePeriod2 = ns1__QuoteListByDatePeriod2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDatePeriod2(soap, &soap_tmp___ns1__QuoteListByDatePeriod2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDatePeriod2(soap, &soap_tmp___ns1__QuoteListByDatePeriod2, "-ns1:QuoteListByDatePeriod2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDatePeriod2(soap, &soap_tmp___ns1__QuoteListByDatePeriod2, "-ns1:QuoteListByDatePeriod2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDatePeriod2Response)
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriod2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriod2Response.soap_get(soap, "ns1:QuoteListByDatePeriod2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChangesByExchange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolChangesByExchange *ns1__SymbolChangesByExchange, _ns1__SymbolChangesByExchangeResponse &ns1__SymbolChangesByExchangeResponse)
{	struct __ns1__SymbolChangesByExchange soap_tmp___ns1__SymbolChangesByExchange;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChangesByExchange";
	soap_tmp___ns1__SymbolChangesByExchange.ns1__SymbolChangesByExchange = ns1__SymbolChangesByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolChangesByExchange(soap, &soap_tmp___ns1__SymbolChangesByExchange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolChangesByExchange(soap, &soap_tmp___ns1__SymbolChangesByExchange, "-ns1:SymbolChangesByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolChangesByExchange(soap, &soap_tmp___ns1__SymbolChangesByExchange, "-ns1:SymbolChangesByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolChangesByExchangeResponse)
		return soap_closesock(soap);
	ns1__SymbolChangesByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolChangesByExchangeResponse.soap_get(soap, "ns1:SymbolChangesByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataClientLatestVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DataClientLatestVersion *ns1__DataClientLatestVersion, _ns1__DataClientLatestVersionResponse &ns1__DataClientLatestVersionResponse)
{	struct __ns1__DataClientLatestVersion soap_tmp___ns1__DataClientLatestVersion;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataClientLatestVersion";
	soap_tmp___ns1__DataClientLatestVersion.ns1__DataClientLatestVersion = ns1__DataClientLatestVersion;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DataClientLatestVersion(soap, &soap_tmp___ns1__DataClientLatestVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DataClientLatestVersion(soap, &soap_tmp___ns1__DataClientLatestVersion, "-ns1:DataClientLatestVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DataClientLatestVersion(soap, &soap_tmp___ns1__DataClientLatestVersion, "-ns1:DataClientLatestVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DataClientLatestVersionResponse)
		return soap_closesock(soap);
	ns1__DataClientLatestVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DataClientLatestVersionResponse.soap_get(soap, "ns1:DataClientLatestVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataFormats(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DataFormats *ns1__DataFormats, _ns1__DataFormatsResponse &ns1__DataFormatsResponse)
{	struct __ns1__DataFormats soap_tmp___ns1__DataFormats;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataFormats";
	soap_tmp___ns1__DataFormats.ns1__DataFormats = ns1__DataFormats;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DataFormats(soap, &soap_tmp___ns1__DataFormats);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DataFormats(soap, &soap_tmp___ns1__DataFormats, "-ns1:DataFormats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DataFormats(soap, &soap_tmp___ns1__DataFormats, "-ns1:DataFormats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DataFormatsResponse)
		return soap_closesock(soap);
	ns1__DataFormatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DataFormatsResponse.soap_get(soap, "ns1:DataFormatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateDataFormat(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDataFormat *ns1__UpdateDataFormat, _ns1__UpdateDataFormatResponse &ns1__UpdateDataFormatResponse)
{	struct __ns1__UpdateDataFormat soap_tmp___ns1__UpdateDataFormat;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/UpdateDataFormat";
	soap_tmp___ns1__UpdateDataFormat.ns1__UpdateDataFormat = ns1__UpdateDataFormat;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateDataFormat(soap, &soap_tmp___ns1__UpdateDataFormat);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateDataFormat(soap, &soap_tmp___ns1__UpdateDataFormat, "-ns1:UpdateDataFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateDataFormat(soap, &soap_tmp___ns1__UpdateDataFormat, "-ns1:UpdateDataFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UpdateDataFormatResponse)
		return soap_closesock(soap);
	ns1__UpdateDataFormatResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateDataFormatResponse.soap_get(soap, "ns1:UpdateDataFormatResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ValidateAccess(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ValidateAccess *ns1__ValidateAccess, _ns1__ValidateAccessResponse &ns1__ValidateAccessResponse)
{	struct __ns1__ValidateAccess soap_tmp___ns1__ValidateAccess;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ValidateAccess";
	soap_tmp___ns1__ValidateAccess.ns1__ValidateAccess = ns1__ValidateAccess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ValidateAccess(soap, &soap_tmp___ns1__ValidateAccess);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ValidateAccess(soap, &soap_tmp___ns1__ValidateAccess, "-ns1:ValidateAccess", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ValidateAccess(soap, &soap_tmp___ns1__ValidateAccess, "-ns1:ValidateAccess", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ValidateAccessResponse)
		return soap_closesock(soap);
	ns1__ValidateAccessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ValidateAccessResponse.soap_get(soap, "ns1:ValidateAccessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct __ns1__Login_ soap_tmp___ns1__Login_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login";
	soap_tmp___ns1__Login_.ns1__Login = ns1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login_(soap, &soap_tmp___ns1__Login_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LoginResponse)
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login2_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login2 *ns1__Login2, _ns1__Login2Response &ns1__Login2Response)
{	struct __ns1__Login2_ soap_tmp___ns1__Login2_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Login2";
	soap_tmp___ns1__Login2_.ns1__Login2 = ns1__Login2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login2_(soap, &soap_tmp___ns1__Login2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login2_(soap, &soap_tmp___ns1__Login2_, "-ns1:Login2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login2_(soap, &soap_tmp___ns1__Login2_, "-ns1:Login2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Login2Response)
		return soap_closesock(soap);
	ns1__Login2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Login2Response.soap_get(soap, "ns1:Login2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Membership_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Membership *ns1__Membership, _ns1__MembershipResponse &ns1__MembershipResponse)
{	struct __ns1__Membership_ soap_tmp___ns1__Membership_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Membership";
	soap_tmp___ns1__Membership_.ns1__Membership = ns1__Membership;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Membership_(soap, &soap_tmp___ns1__Membership_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Membership_(soap, &soap_tmp___ns1__Membership_, "-ns1:Membership", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Membership_(soap, &soap_tmp___ns1__Membership_, "-ns1:Membership", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MembershipResponse)
		return soap_closesock(soap);
	ns1__MembershipResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MembershipResponse.soap_get(soap, "ns1:MembershipResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeList *ns1__ExchangeList, _ns1__ExchangeListResponse &ns1__ExchangeListResponse)
{	struct __ns1__ExchangeList_ soap_tmp___ns1__ExchangeList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeList";
	soap_tmp___ns1__ExchangeList_.ns1__ExchangeList = ns1__ExchangeList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeList_(soap, &soap_tmp___ns1__ExchangeList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeList_(soap, &soap_tmp___ns1__ExchangeList_, "-ns1:ExchangeList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeList_(soap, &soap_tmp___ns1__ExchangeList_, "-ns1:ExchangeList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeListResponse)
		return soap_closesock(soap);
	ns1__ExchangeListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeListResponse.soap_get(soap, "ns1:ExchangeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeGet_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeGet *ns1__ExchangeGet, _ns1__ExchangeGetResponse &ns1__ExchangeGetResponse)
{	struct __ns1__ExchangeGet_ soap_tmp___ns1__ExchangeGet_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeGet";
	soap_tmp___ns1__ExchangeGet_.ns1__ExchangeGet = ns1__ExchangeGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeGet_(soap, &soap_tmp___ns1__ExchangeGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeGet_(soap, &soap_tmp___ns1__ExchangeGet_, "-ns1:ExchangeGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeGet_(soap, &soap_tmp___ns1__ExchangeGet_, "-ns1:ExchangeGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeGetResponse)
		return soap_closesock(soap);
	ns1__ExchangeGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeGetResponse.soap_get(soap, "ns1:ExchangeGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolList *ns1__SymbolList, _ns1__SymbolListResponse &ns1__SymbolListResponse)
{	struct __ns1__SymbolList_ soap_tmp___ns1__SymbolList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList";
	soap_tmp___ns1__SymbolList_.ns1__SymbolList = ns1__SymbolList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolList_(soap, &soap_tmp___ns1__SymbolList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolList_(soap, &soap_tmp___ns1__SymbolList_, "-ns1:SymbolList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolList_(soap, &soap_tmp___ns1__SymbolList_, "-ns1:SymbolList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolListResponse)
		return soap_closesock(soap);
	ns1__SymbolListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolListResponse.soap_get(soap, "ns1:SymbolListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList2_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolList2 *ns1__SymbolList2, _ns1__SymbolList2Response &ns1__SymbolList2Response)
{	struct __ns1__SymbolList2_ soap_tmp___ns1__SymbolList2_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolList2";
	soap_tmp___ns1__SymbolList2_.ns1__SymbolList2 = ns1__SymbolList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolList2_(soap, &soap_tmp___ns1__SymbolList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolList2_(soap, &soap_tmp___ns1__SymbolList2_, "-ns1:SymbolList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolList2_(soap, &soap_tmp___ns1__SymbolList2_, "-ns1:SymbolList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolList2Response)
		return soap_closesock(soap);
	ns1__SymbolList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolList2Response.soap_get(soap, "ns1:SymbolList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteGet_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteGet *ns1__QuoteGet, _ns1__QuoteGetResponse &ns1__QuoteGetResponse)
{	struct __ns1__QuoteGet_ soap_tmp___ns1__QuoteGet_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteGet";
	soap_tmp___ns1__QuoteGet_.ns1__QuoteGet = ns1__QuoteGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteGet_(soap, &soap_tmp___ns1__QuoteGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteGet_(soap, &soap_tmp___ns1__QuoteGet_, "-ns1:QuoteGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteGet_(soap, &soap_tmp___ns1__QuoteGet_, "-ns1:QuoteGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteGetResponse)
		return soap_closesock(soap);
	ns1__QuoteGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteGetResponse.soap_get(soap, "ns1:QuoteGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList2_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteList2 *ns1__QuoteList2, _ns1__QuoteList2Response &ns1__QuoteList2Response)
{	struct __ns1__QuoteList2_ soap_tmp___ns1__QuoteList2_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList2";
	soap_tmp___ns1__QuoteList2_.ns1__QuoteList2 = ns1__QuoteList2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteList2_(soap, &soap_tmp___ns1__QuoteList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteList2_(soap, &soap_tmp___ns1__QuoteList2_, "-ns1:QuoteList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteList2_(soap, &soap_tmp___ns1__QuoteList2_, "-ns1:QuoteList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteList2Response)
		return soap_closesock(soap);
	ns1__QuoteList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteList2Response.soap_get(soap, "ns1:QuoteList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolGet_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolGet *ns1__SymbolGet, _ns1__SymbolGetResponse &ns1__SymbolGetResponse)
{	struct __ns1__SymbolGet_ soap_tmp___ns1__SymbolGet_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolGet";
	soap_tmp___ns1__SymbolGet_.ns1__SymbolGet = ns1__SymbolGet;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolGet_(soap, &soap_tmp___ns1__SymbolGet_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolGet_(soap, &soap_tmp___ns1__SymbolGet_, "-ns1:SymbolGet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolGet_(soap, &soap_tmp___ns1__SymbolGet_, "-ns1:SymbolGet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolGetResponse)
		return soap_closesock(soap);
	ns1__SymbolGetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolGetResponse.soap_get(soap, "ns1:SymbolGetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteList *ns1__QuoteList, _ns1__QuoteListResponse &ns1__QuoteListResponse)
{	struct __ns1__QuoteList_ soap_tmp___ns1__QuoteList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteList";
	soap_tmp___ns1__QuoteList_.ns1__QuoteList = ns1__QuoteList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteList_(soap, &soap_tmp___ns1__QuoteList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteList_(soap, &soap_tmp___ns1__QuoteList_, "-ns1:QuoteList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteList_(soap, &soap_tmp___ns1__QuoteList_, "-ns1:QuoteList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListResponse)
		return soap_closesock(soap);
	ns1__QuoteListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListResponse.soap_get(soap, "ns1:QuoteListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__NewsList *ns1__NewsList, _ns1__NewsListResponse &ns1__NewsListResponse)
{	struct __ns1__NewsList_ soap_tmp___ns1__NewsList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsList";
	soap_tmp___ns1__NewsList_.ns1__NewsList = ns1__NewsList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__NewsList_(soap, &soap_tmp___ns1__NewsList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__NewsList_(soap, &soap_tmp___ns1__NewsList_, "-ns1:NewsList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__NewsList_(soap, &soap_tmp___ns1__NewsList_, "-ns1:NewsList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__NewsListResponse)
		return soap_closesock(soap);
	ns1__NewsListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NewsListResponse.soap_get(soap, "ns1:NewsListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsListBySymbol_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__NewsListBySymbol *ns1__NewsListBySymbol, _ns1__NewsListBySymbolResponse &ns1__NewsListBySymbolResponse)
{	struct __ns1__NewsListBySymbol_ soap_tmp___ns1__NewsListBySymbol_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/NewsListBySymbol";
	soap_tmp___ns1__NewsListBySymbol_.ns1__NewsListBySymbol = ns1__NewsListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__NewsListBySymbol_(soap, &soap_tmp___ns1__NewsListBySymbol_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__NewsListBySymbol_(soap, &soap_tmp___ns1__NewsListBySymbol_, "-ns1:NewsListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__NewsListBySymbol_(soap, &soap_tmp___ns1__NewsListBySymbol_, "-ns1:NewsListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__NewsListBySymbolResponse)
		return soap_closesock(soap);
	ns1__NewsListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__NewsListBySymbolResponse.soap_get(soap, "ns1:NewsListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FundamentalList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__FundamentalList *ns1__FundamentalList, _ns1__FundamentalListResponse &ns1__FundamentalListResponse)
{	struct __ns1__FundamentalList_ soap_tmp___ns1__FundamentalList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/FundamentalList";
	soap_tmp___ns1__FundamentalList_.ns1__FundamentalList = ns1__FundamentalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__FundamentalList_(soap, &soap_tmp___ns1__FundamentalList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FundamentalList_(soap, &soap_tmp___ns1__FundamentalList_, "-ns1:FundamentalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FundamentalList_(soap, &soap_tmp___ns1__FundamentalList_, "-ns1:FundamentalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FundamentalListResponse)
		return soap_closesock(soap);
	ns1__FundamentalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FundamentalListResponse.soap_get(soap, "ns1:FundamentalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TechnicalList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TechnicalList *ns1__TechnicalList, _ns1__TechnicalListResponse &ns1__TechnicalListResponse)
{	struct __ns1__TechnicalList_ soap_tmp___ns1__TechnicalList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/TechnicalList";
	soap_tmp___ns1__TechnicalList_.ns1__TechnicalList = ns1__TechnicalList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__TechnicalList_(soap, &soap_tmp___ns1__TechnicalList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TechnicalList_(soap, &soap_tmp___ns1__TechnicalList_, "-ns1:TechnicalList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TechnicalList_(soap, &soap_tmp___ns1__TechnicalList_, "-ns1:TechnicalList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TechnicalListResponse)
		return soap_closesock(soap);
	ns1__TechnicalListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TechnicalListResponse.soap_get(soap, "ns1:TechnicalListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDate *ns1__QuoteListByDate, _ns1__QuoteListByDateResponse &ns1__QuoteListByDateResponse)
{	struct __ns1__QuoteListByDate_ soap_tmp___ns1__QuoteListByDate_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate";
	soap_tmp___ns1__QuoteListByDate_.ns1__QuoteListByDate = ns1__QuoteListByDate;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDate_(soap, &soap_tmp___ns1__QuoteListByDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDate_(soap, &soap_tmp___ns1__QuoteListByDate_, "-ns1:QuoteListByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDate_(soap, &soap_tmp___ns1__QuoteListByDate_, "-ns1:QuoteListByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDateResponse)
		return soap_closesock(soap);
	ns1__QuoteListByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDateResponse.soap_get(soap, "ns1:QuoteListByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate2_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDate2 *ns1__QuoteListByDate2, _ns1__QuoteListByDate2Response &ns1__QuoteListByDate2Response)
{	struct __ns1__QuoteListByDate2_ soap_tmp___ns1__QuoteListByDate2_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDate2";
	soap_tmp___ns1__QuoteListByDate2_.ns1__QuoteListByDate2 = ns1__QuoteListByDate2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDate2_(soap, &soap_tmp___ns1__QuoteListByDate2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDate2_(soap, &soap_tmp___ns1__QuoteListByDate2_, "-ns1:QuoteListByDate2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDate2_(soap, &soap_tmp___ns1__QuoteListByDate2_, "-ns1:QuoteListByDate2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDate2Response)
		return soap_closesock(soap);
	ns1__QuoteListByDate2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDate2Response.soap_get(soap, "ns1:QuoteListByDate2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistory_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistory *ns1__SymbolHistory, _ns1__SymbolHistoryResponse &ns1__SymbolHistoryResponse)
{	struct __ns1__SymbolHistory_ soap_tmp___ns1__SymbolHistory_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistory";
	soap_tmp___ns1__SymbolHistory_.ns1__SymbolHistory = ns1__SymbolHistory;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistory_(soap, &soap_tmp___ns1__SymbolHistory_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistory_(soap, &soap_tmp___ns1__SymbolHistory_, "-ns1:SymbolHistory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistory_(soap, &soap_tmp___ns1__SymbolHistory_, "-ns1:SymbolHistory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryResponse.soap_get(soap, "ns1:SymbolHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Gains_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Top10Gains *ns1__Top10Gains, _ns1__Top10GainsResponse &ns1__Top10GainsResponse)
{	struct __ns1__Top10Gains_ soap_tmp___ns1__Top10Gains_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Gains";
	soap_tmp___ns1__Top10Gains_.ns1__Top10Gains = ns1__Top10Gains;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Top10Gains_(soap, &soap_tmp___ns1__Top10Gains_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Top10Gains_(soap, &soap_tmp___ns1__Top10Gains_, "-ns1:Top10Gains", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Top10Gains_(soap, &soap_tmp___ns1__Top10Gains_, "-ns1:Top10Gains", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Top10GainsResponse)
		return soap_closesock(soap);
	ns1__Top10GainsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Top10GainsResponse.soap_get(soap, "ns1:Top10GainsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Losses_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Top10Losses *ns1__Top10Losses, _ns1__Top10LossesResponse &ns1__Top10LossesResponse)
{	struct __ns1__Top10Losses_ soap_tmp___ns1__Top10Losses_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/Top10Losses";
	soap_tmp___ns1__Top10Losses_.ns1__Top10Losses = ns1__Top10Losses;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Top10Losses_(soap, &soap_tmp___ns1__Top10Losses_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Top10Losses_(soap, &soap_tmp___ns1__Top10Losses_, "-ns1:Top10Losses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Top10Losses_(soap, &soap_tmp___ns1__Top10Losses_, "-ns1:Top10Losses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__Top10LossesResponse)
		return soap_closesock(soap);
	ns1__Top10LossesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Top10LossesResponse.soap_get(soap, "ns1:Top10LossesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChart_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolChart *ns1__SymbolChart, _ns1__SymbolChartResponse &ns1__SymbolChartResponse)
{	struct __ns1__SymbolChart_ soap_tmp___ns1__SymbolChart_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChart";
	soap_tmp___ns1__SymbolChart_.ns1__SymbolChart = ns1__SymbolChart;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolChart_(soap, &soap_tmp___ns1__SymbolChart_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolChart_(soap, &soap_tmp___ns1__SymbolChart_, "-ns1:SymbolChart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolChart_(soap, &soap_tmp___ns1__SymbolChart_, "-ns1:SymbolChart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolChartResponse)
		return soap_closesock(soap);
	ns1__SymbolChartResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolChartResponse.soap_get(soap, "ns1:SymbolChartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeMonths_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExchangeMonths *ns1__ExchangeMonths, _ns1__ExchangeMonthsResponse &ns1__ExchangeMonthsResponse)
{	struct __ns1__ExchangeMonths_ soap_tmp___ns1__ExchangeMonths_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ExchangeMonths";
	soap_tmp___ns1__ExchangeMonths_.ns1__ExchangeMonths = ns1__ExchangeMonths;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ExchangeMonths_(soap, &soap_tmp___ns1__ExchangeMonths_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExchangeMonths_(soap, &soap_tmp___ns1__ExchangeMonths_, "-ns1:ExchangeMonths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExchangeMonths_(soap, &soap_tmp___ns1__ExchangeMonths_, "-ns1:ExchangeMonths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ExchangeMonthsResponse)
		return soap_closesock(soap);
	ns1__ExchangeMonthsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExchangeMonthsResponse.soap_get(soap, "ns1:ExchangeMonthsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListByExchange_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SplitListByExchange *ns1__SplitListByExchange, _ns1__SplitListByExchangeResponse &ns1__SplitListByExchangeResponse)
{	struct __ns1__SplitListByExchange_ soap_tmp___ns1__SplitListByExchange_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListByExchange";
	soap_tmp___ns1__SplitListByExchange_.ns1__SplitListByExchange = ns1__SplitListByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SplitListByExchange_(soap, &soap_tmp___ns1__SplitListByExchange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SplitListByExchange_(soap, &soap_tmp___ns1__SplitListByExchange_, "-ns1:SplitListByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SplitListByExchange_(soap, &soap_tmp___ns1__SplitListByExchange_, "-ns1:SplitListByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SplitListByExchangeResponse)
		return soap_closesock(soap);
	ns1__SplitListByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SplitListByExchangeResponse.soap_get(soap, "ns1:SplitListByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListBySymbol_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SplitListBySymbol *ns1__SplitListBySymbol, _ns1__SplitListBySymbolResponse &ns1__SplitListBySymbolResponse)
{	struct __ns1__SplitListBySymbol_ soap_tmp___ns1__SplitListBySymbol_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SplitListBySymbol";
	soap_tmp___ns1__SplitListBySymbol_.ns1__SplitListBySymbol = ns1__SplitListBySymbol;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SplitListBySymbol_(soap, &soap_tmp___ns1__SplitListBySymbol_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SplitListBySymbol_(soap, &soap_tmp___ns1__SplitListBySymbol_, "-ns1:SplitListBySymbol", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SplitListBySymbol_(soap, &soap_tmp___ns1__SplitListBySymbol_, "-ns1:SplitListBySymbol", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SplitListBySymbolResponse)
		return soap_closesock(soap);
	ns1__SplitListBySymbolResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SplitListBySymbolResponse.soap_get(soap, "ns1:SplitListBySymbolResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountryList_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CountryList *ns1__CountryList, _ns1__CountryListResponse &ns1__CountryListResponse)
{	struct __ns1__CountryList_ soap_tmp___ns1__CountryList_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/CountryList";
	soap_tmp___ns1__CountryList_.ns1__CountryList = ns1__CountryList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CountryList_(soap, &soap_tmp___ns1__CountryList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CountryList_(soap, &soap_tmp___ns1__CountryList_, "-ns1:CountryList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CountryList_(soap, &soap_tmp___ns1__CountryList_, "-ns1:CountryList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CountryListResponse)
		return soap_closesock(soap);
	ns1__CountryListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CountryListResponse.soap_get(soap, "ns1:CountryListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriod_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistoryPeriod *ns1__SymbolHistoryPeriod, _ns1__SymbolHistoryPeriodResponse &ns1__SymbolHistoryPeriodResponse)
{	struct __ns1__SymbolHistoryPeriod_ soap_tmp___ns1__SymbolHistoryPeriod_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriod";
	soap_tmp___ns1__SymbolHistoryPeriod_.ns1__SymbolHistoryPeriod = ns1__SymbolHistoryPeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistoryPeriod_(soap, &soap_tmp___ns1__SymbolHistoryPeriod_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistoryPeriod_(soap, &soap_tmp___ns1__SymbolHistoryPeriod_, "-ns1:SymbolHistoryPeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistoryPeriod_(soap, &soap_tmp___ns1__SymbolHistoryPeriod_, "-ns1:SymbolHistoryPeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryPeriodResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodResponse.soap_get(soap, "ns1:SymbolHistoryPeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriodByDateRange_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolHistoryPeriodByDateRange *ns1__SymbolHistoryPeriodByDateRange, _ns1__SymbolHistoryPeriodByDateRangeResponse &ns1__SymbolHistoryPeriodByDateRangeResponse)
{	struct __ns1__SymbolHistoryPeriodByDateRange_ soap_tmp___ns1__SymbolHistoryPeriodByDateRange_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolHistoryPeriodByDateRange";
	soap_tmp___ns1__SymbolHistoryPeriodByDateRange_.ns1__SymbolHistoryPeriodByDateRange = ns1__SymbolHistoryPeriodByDateRange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange_, "-ns1:SymbolHistoryPeriodByDateRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolHistoryPeriodByDateRange_(soap, &soap_tmp___ns1__SymbolHistoryPeriodByDateRange_, "-ns1:SymbolHistoryPeriodByDateRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolHistoryPeriodByDateRangeResponse)
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodByDateRangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolHistoryPeriodByDateRangeResponse.soap_get(soap, "ns1:SymbolHistoryPeriodByDateRangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDatePeriod *ns1__QuoteListByDatePeriod, _ns1__QuoteListByDatePeriodResponse &ns1__QuoteListByDatePeriodResponse)
{	struct __ns1__QuoteListByDatePeriod_ soap_tmp___ns1__QuoteListByDatePeriod_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod";
	soap_tmp___ns1__QuoteListByDatePeriod_.ns1__QuoteListByDatePeriod = ns1__QuoteListByDatePeriod;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDatePeriod_(soap, &soap_tmp___ns1__QuoteListByDatePeriod_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDatePeriod_(soap, &soap_tmp___ns1__QuoteListByDatePeriod_, "-ns1:QuoteListByDatePeriod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDatePeriod_(soap, &soap_tmp___ns1__QuoteListByDatePeriod_, "-ns1:QuoteListByDatePeriod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDatePeriodResponse)
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriodResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriodResponse.soap_get(soap, "ns1:QuoteListByDatePeriodResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod2_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__QuoteListByDatePeriod2 *ns1__QuoteListByDatePeriod2, _ns1__QuoteListByDatePeriod2Response &ns1__QuoteListByDatePeriod2Response)
{	struct __ns1__QuoteListByDatePeriod2_ soap_tmp___ns1__QuoteListByDatePeriod2_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/QuoteListByDatePeriod2";
	soap_tmp___ns1__QuoteListByDatePeriod2_.ns1__QuoteListByDatePeriod2 = ns1__QuoteListByDatePeriod2;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__QuoteListByDatePeriod2_(soap, &soap_tmp___ns1__QuoteListByDatePeriod2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__QuoteListByDatePeriod2_(soap, &soap_tmp___ns1__QuoteListByDatePeriod2_, "-ns1:QuoteListByDatePeriod2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__QuoteListByDatePeriod2_(soap, &soap_tmp___ns1__QuoteListByDatePeriod2_, "-ns1:QuoteListByDatePeriod2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__QuoteListByDatePeriod2Response)
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriod2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__QuoteListByDatePeriod2Response.soap_get(soap, "ns1:QuoteListByDatePeriod2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChangesByExchange_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SymbolChangesByExchange *ns1__SymbolChangesByExchange, _ns1__SymbolChangesByExchangeResponse &ns1__SymbolChangesByExchangeResponse)
{	struct __ns1__SymbolChangesByExchange_ soap_tmp___ns1__SymbolChangesByExchange_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/SymbolChangesByExchange";
	soap_tmp___ns1__SymbolChangesByExchange_.ns1__SymbolChangesByExchange = ns1__SymbolChangesByExchange;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SymbolChangesByExchange_(soap, &soap_tmp___ns1__SymbolChangesByExchange_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SymbolChangesByExchange_(soap, &soap_tmp___ns1__SymbolChangesByExchange_, "-ns1:SymbolChangesByExchange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SymbolChangesByExchange_(soap, &soap_tmp___ns1__SymbolChangesByExchange_, "-ns1:SymbolChangesByExchange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SymbolChangesByExchangeResponse)
		return soap_closesock(soap);
	ns1__SymbolChangesByExchangeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SymbolChangesByExchangeResponse.soap_get(soap, "ns1:SymbolChangesByExchangeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataClientLatestVersion_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DataClientLatestVersion *ns1__DataClientLatestVersion, _ns1__DataClientLatestVersionResponse &ns1__DataClientLatestVersionResponse)
{	struct __ns1__DataClientLatestVersion_ soap_tmp___ns1__DataClientLatestVersion_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataClientLatestVersion";
	soap_tmp___ns1__DataClientLatestVersion_.ns1__DataClientLatestVersion = ns1__DataClientLatestVersion;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DataClientLatestVersion_(soap, &soap_tmp___ns1__DataClientLatestVersion_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DataClientLatestVersion_(soap, &soap_tmp___ns1__DataClientLatestVersion_, "-ns1:DataClientLatestVersion", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DataClientLatestVersion_(soap, &soap_tmp___ns1__DataClientLatestVersion_, "-ns1:DataClientLatestVersion", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DataClientLatestVersionResponse)
		return soap_closesock(soap);
	ns1__DataClientLatestVersionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DataClientLatestVersionResponse.soap_get(soap, "ns1:DataClientLatestVersionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataFormats_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DataFormats *ns1__DataFormats, _ns1__DataFormatsResponse &ns1__DataFormatsResponse)
{	struct __ns1__DataFormats_ soap_tmp___ns1__DataFormats_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/DataFormats";
	soap_tmp___ns1__DataFormats_.ns1__DataFormats = ns1__DataFormats;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__DataFormats_(soap, &soap_tmp___ns1__DataFormats_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DataFormats_(soap, &soap_tmp___ns1__DataFormats_, "-ns1:DataFormats", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DataFormats_(soap, &soap_tmp___ns1__DataFormats_, "-ns1:DataFormats", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__DataFormatsResponse)
		return soap_closesock(soap);
	ns1__DataFormatsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DataFormatsResponse.soap_get(soap, "ns1:DataFormatsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateDataFormat_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDataFormat *ns1__UpdateDataFormat, _ns1__UpdateDataFormatResponse &ns1__UpdateDataFormatResponse)
{	struct __ns1__UpdateDataFormat_ soap_tmp___ns1__UpdateDataFormat_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/UpdateDataFormat";
	soap_tmp___ns1__UpdateDataFormat_.ns1__UpdateDataFormat = ns1__UpdateDataFormat;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UpdateDataFormat_(soap, &soap_tmp___ns1__UpdateDataFormat_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UpdateDataFormat_(soap, &soap_tmp___ns1__UpdateDataFormat_, "-ns1:UpdateDataFormat", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UpdateDataFormat_(soap, &soap_tmp___ns1__UpdateDataFormat_, "-ns1:UpdateDataFormat", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UpdateDataFormatResponse)
		return soap_closesock(soap);
	ns1__UpdateDataFormatResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UpdateDataFormatResponse.soap_get(soap, "ns1:UpdateDataFormatResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ValidateAccess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ValidateAccess *ns1__ValidateAccess, _ns1__ValidateAccessResponse &ns1__ValidateAccessResponse)
{	struct __ns1__ValidateAccess_ soap_tmp___ns1__ValidateAccess_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "http://ws.eoddata.com/Data/ValidateAccess";
	soap_tmp___ns1__ValidateAccess_.ns1__ValidateAccess = ns1__ValidateAccess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ValidateAccess_(soap, &soap_tmp___ns1__ValidateAccess_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ValidateAccess_(soap, &soap_tmp___ns1__ValidateAccess_, "-ns1:ValidateAccess", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ValidateAccess_(soap, &soap_tmp___ns1__ValidateAccess_, "-ns1:ValidateAccess", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ValidateAccessResponse)
		return soap_closesock(soap);
	ns1__ValidateAccessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ValidateAccessResponse.soap_get(soap, "ns1:ValidateAccessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LOGINRESPONSE &ns1__LOGINRESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Login";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__LOGINRESPONSE_)
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_get(soap, "ns1:LOGINRESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login2Response__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__LOGINRESPONSE &ns1__LOGINRESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Login2";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__LOGINRESPONSE_)
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_get(soap, "ns1:LOGINRESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__MembershipResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Membership";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeGetResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeGet";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList2Response__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolList2";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteGetResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteGet";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList2Response__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteList2";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolGetResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolGet";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/NewsList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsListBySymbolResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/NewsListBySymbol";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FundamentalListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/FundamentalList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TechnicalListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/TechnicalList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDateResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDate";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate2Response__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDate2";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistory";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10GainsResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Top10Gains";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10LossesResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Top10Losses";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChartResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolChart";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeMonthsResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeMonths";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListByExchangeResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SplitListByExchange";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListBySymbolResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SplitListBySymbol";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountryListResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/CountryList";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriodResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistoryPeriod";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriodByDateRangeResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistoryPeriodByDateRange";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriodResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDatePeriod";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod2Response__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDatePeriod2";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChangesByExchangeResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolChangesByExchange";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataClientLatestVersionResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/DataClientLatestVersion";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataFormatsResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/DataFormats";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateDataFormatResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/UpdateDataFormat";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ValidateAccessResponse__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ValidateAccess";
	if (soap_connect_command(soap, SOAP_GET, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Username, std::string Password, ns1__LOGINRESPONSE &ns1__LOGINRESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Login";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Username=") || soap_send(soap, soap_encode_url_string(soap, Username.c_str()))
	 || soap_send(soap, "&Password=") || soap_send(soap, soap_encode_url_string(soap, Password.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LOGINRESPONSE_)
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_get(soap, "ns1:LOGINRESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login2___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Username, std::string Password, std::string Version, ns1__LOGINRESPONSE &ns1__LOGINRESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Login2";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Username=") || soap_send(soap, soap_encode_url_string(soap, Username.c_str()))
	 || soap_send(soap, "&Password=") || soap_send(soap, soap_encode_url_string(soap, Password.c_str()))
	 || soap_send(soap, "&Version=") || soap_send(soap, soap_encode_url_string(soap, Version.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LOGINRESPONSE_)
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LOGINRESPONSE_.soap_get(soap, "ns1:LOGINRESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Membership___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Membership";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeGet___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeGet";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolList2___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolList2";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteGet___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteGet";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList2___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbols, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteList2";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbols=") || soap_send(soap, soap_encode_url_string(soap, Symbols.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolGet___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolGet";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/NewsList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__NewsListBySymbol___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string token, std::string Exchange, std::string symbol, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/NewsListBySymbol";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "token=") || soap_send(soap, soap_encode_url_string(soap, token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&symbol=") || soap_send(soap, soap_encode_url_string(soap, symbol.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__FundamentalList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/FundamentalList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__TechnicalList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/TechnicalList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string QuoteDate, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDate";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&QuoteDate=") || soap_send(soap, soap_encode_url_string(soap, QuoteDate.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDate2___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string QuoteDate, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDate2";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&QuoteDate=") || soap_send(soap, soap_encode_url_string(soap, QuoteDate.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistory___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, std::string StartDate, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistory";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_send(soap, "&StartDate=") || soap_send(soap, soap_encode_url_string(soap, StartDate.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Gains___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Top10Gains";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Top10Losses___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/Top10Losses";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChart___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolChart";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExchangeMonths___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ExchangeMonths";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListByExchange___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SplitListByExchange";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SplitListBySymbol___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SplitListBySymbol";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CountryList___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/CountryList";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriod___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, std::string Date, std::string Period, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistoryPeriod";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_send(soap, "&Date=") || soap_send(soap, soap_encode_url_string(soap, Date.c_str()))
	 || soap_send(soap, "&Period=") || soap_send(soap, soap_encode_url_string(soap, Period.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolHistoryPeriodByDateRange___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string Symbol, std::string StartDate, std::string EndDate, std::string Period, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolHistoryPeriodByDateRange";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&Symbol=") || soap_send(soap, soap_encode_url_string(soap, Symbol.c_str()))
	 || soap_send(soap, "&StartDate=") || soap_send(soap, soap_encode_url_string(soap, StartDate.c_str()))
	 || soap_send(soap, "&EndDate=") || soap_send(soap, soap_encode_url_string(soap, EndDate.c_str()))
	 || soap_send(soap, "&Period=") || soap_send(soap, soap_encode_url_string(soap, Period.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string QuoteDate, std::string Period, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDatePeriod";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&QuoteDate=") || soap_send(soap, soap_encode_url_string(soap, QuoteDate.c_str()))
	 || soap_send(soap, "&Period=") || soap_send(soap, soap_encode_url_string(soap, Period.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__QuoteListByDatePeriod2___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string QuoteDate, std::string Period, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/QuoteListByDatePeriod2";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&QuoteDate=") || soap_send(soap, soap_encode_url_string(soap, QuoteDate.c_str()))
	 || soap_send(soap, "&Period=") || soap_send(soap, soap_encode_url_string(soap, Period.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SymbolChangesByExchange___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/SymbolChangesByExchange";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataClientLatestVersion___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/DataClientLatestVersion";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DataFormats___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/DataFormats";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UpdateDataFormat___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string DataFormat, std::string IncludeHeader, std::string IncludeSuffix, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/UpdateDataFormat";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&DataFormat=") || soap_send(soap, soap_encode_url_string(soap, DataFormat.c_str()))
	 || soap_send(soap, "&IncludeHeader=") || soap_send(soap, soap_encode_url_string(soap, IncludeHeader.c_str()))
	 || soap_send(soap, "&IncludeSuffix=") || soap_send(soap, soap_encode_url_string(soap, IncludeSuffix.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ValidateAccess___(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string Token, std::string Exchange, std::string QuoteDate, std::string Period, ns1__RESPONSE &ns1__RESPONSE_)
{
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ws.eoddata.com/data.asmx";
	if (soap_action == NULL)
		soap_action = "/ValidateAccess";
	soap->http_content = "application/x-www-form-urlencoded";
	if (soap_connect_command(soap, SOAP_POST_FILE, soap_url(soap, soap_endpoint, soap_action), soap_action))
		return soap_closesock(soap);
	if (soap_send(soap, "Token=") || soap_send(soap, soap_encode_url_string(soap, Token.c_str()))
	 || soap_send(soap, "&Exchange=") || soap_send(soap, soap_encode_url_string(soap, Exchange.c_str()))
	 || soap_send(soap, "&QuoteDate=") || soap_send(soap, soap_encode_url_string(soap, QuoteDate.c_str()))
	 || soap_send(soap, "&Period=") || soap_send(soap, soap_encode_url_string(soap, Period.c_str()))
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RESPONSE_)
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RESPONSE_.soap_get(soap, "ns1:RESPONSE", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace ns


#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of nsClient.cpp */
