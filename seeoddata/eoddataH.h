/* eoddataH.h
   Generated by gSOAP 2.8.28 from eoddata.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef eoddataH_H
#define eoddataH_H
#include "eoddataStub.h"

namespace eoddata {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 eoddata_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 eoddata_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 eoddata_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 eoddata_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_eoddata_byte
#define SOAP_TYPE_eoddata_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( ((data) ? (eoddata::soap_default_byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_int
#define SOAP_TYPE_eoddata_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( ((data) ? (eoddata::soap_default_int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_LONG64
#define SOAP_TYPE_eoddata_LONG64 (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( ((data) ? (eoddata::soap_default_LONG64(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_LONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_double
#define SOAP_TYPE_eoddata_double (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( ((data) ? (eoddata::soap_default_double(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_dateTime
#define SOAP_TYPE_eoddata_dateTime (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_dateTime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( ((data) ? (eoddata::soap_default_dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_bool
#define SOAP_TYPE_eoddata_bool (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || eoddata::soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( ((data) ? (eoddata::soap_default_bool(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_bool(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_std__string
#define SOAP_TYPE_eoddata_std__string (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_std__string(soap, data), 0) || eoddata::soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( ((data) ? (eoddata::soap_default_std__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_std__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ValidateAccessResponse
#define SOAP_TYPE_eoddata__eoddata1__ValidateAccessResponse (106)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ValidateAccessResponse(struct soap*, const char*, int, const _eoddata1__ValidateAccessResponse *, const char*);
SOAP_FMAC3 _eoddata1__ValidateAccessResponse * SOAP_FMAC4 soap_in__eoddata1__ValidateAccessResponse(struct soap*, const char*, _eoddata1__ValidateAccessResponse *, const char*);
SOAP_FMAC1 _eoddata1__ValidateAccessResponse * SOAP_FMAC2 soap_instantiate__eoddata1__ValidateAccessResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ValidateAccessResponse * soap_new__eoddata1__ValidateAccessResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ValidateAccessResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ValidateAccessResponse * soap_new_req__eoddata1__ValidateAccessResponse(
	struct soap *soap)
{	_eoddata1__ValidateAccessResponse *_p = soap_new__eoddata1__ValidateAccessResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ValidateAccessResponse * soap_new_set__eoddata1__ValidateAccessResponse(
	struct soap *soap,
	eoddata1__RESPONSE *ValidateAccessResult)
{	_eoddata1__ValidateAccessResponse *_p = soap_new__eoddata1__ValidateAccessResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ValidateAccessResponse::ValidateAccessResult = ValidateAccessResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ValidateAccessResponse
#define soap_write__eoddata1__ValidateAccessResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ValidateAccessResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ValidateAccessResponse * SOAP_FMAC4 soap_get__eoddata1__ValidateAccessResponse(struct soap*, _eoddata1__ValidateAccessResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__ValidateAccessResponse
#define soap_read__eoddata1__ValidateAccessResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ValidateAccessResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ValidateAccess
#define SOAP_TYPE_eoddata__eoddata1__ValidateAccess (105)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ValidateAccess(struct soap*, const char*, int, const _eoddata1__ValidateAccess *, const char*);
SOAP_FMAC3 _eoddata1__ValidateAccess * SOAP_FMAC4 soap_in__eoddata1__ValidateAccess(struct soap*, const char*, _eoddata1__ValidateAccess *, const char*);
SOAP_FMAC1 _eoddata1__ValidateAccess * SOAP_FMAC2 soap_instantiate__eoddata1__ValidateAccess(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ValidateAccess * soap_new__eoddata1__ValidateAccess(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ValidateAccess(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ValidateAccess * soap_new_req__eoddata1__ValidateAccess(
	struct soap *soap)
{	_eoddata1__ValidateAccess *_p = soap_new__eoddata1__ValidateAccess(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ValidateAccess * soap_new_set__eoddata1__ValidateAccess(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *QuoteDate,
	std::string *Period)
{	_eoddata1__ValidateAccess *_p = soap_new__eoddata1__ValidateAccess(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ValidateAccess::Token = Token;
		_p->_eoddata1__ValidateAccess::Exchange = Exchange;
		_p->_eoddata1__ValidateAccess::QuoteDate = QuoteDate;
		_p->_eoddata1__ValidateAccess::Period = Period;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ValidateAccess
#define soap_write__eoddata1__ValidateAccess(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ValidateAccess", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ValidateAccess * SOAP_FMAC4 soap_get__eoddata1__ValidateAccess(struct soap*, _eoddata1__ValidateAccess *, const char*, const char*);

#ifndef soap_read__eoddata1__ValidateAccess
#define soap_read__eoddata1__ValidateAccess(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ValidateAccess(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__UpdateDataFormatResponse
#define SOAP_TYPE_eoddata__eoddata1__UpdateDataFormatResponse (104)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__UpdateDataFormatResponse(struct soap*, const char*, int, const _eoddata1__UpdateDataFormatResponse *, const char*);
SOAP_FMAC3 _eoddata1__UpdateDataFormatResponse * SOAP_FMAC4 soap_in__eoddata1__UpdateDataFormatResponse(struct soap*, const char*, _eoddata1__UpdateDataFormatResponse *, const char*);
SOAP_FMAC1 _eoddata1__UpdateDataFormatResponse * SOAP_FMAC2 soap_instantiate__eoddata1__UpdateDataFormatResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__UpdateDataFormatResponse * soap_new__eoddata1__UpdateDataFormatResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__UpdateDataFormatResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__UpdateDataFormatResponse * soap_new_req__eoddata1__UpdateDataFormatResponse(
	struct soap *soap)
{	_eoddata1__UpdateDataFormatResponse *_p = soap_new__eoddata1__UpdateDataFormatResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__UpdateDataFormatResponse * soap_new_set__eoddata1__UpdateDataFormatResponse(
	struct soap *soap,
	eoddata1__RESPONSE *UpdateDataFormatResult)
{	_eoddata1__UpdateDataFormatResponse *_p = soap_new__eoddata1__UpdateDataFormatResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__UpdateDataFormatResponse::UpdateDataFormatResult = UpdateDataFormatResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__UpdateDataFormatResponse
#define soap_write__eoddata1__UpdateDataFormatResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:UpdateDataFormatResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__UpdateDataFormatResponse * SOAP_FMAC4 soap_get__eoddata1__UpdateDataFormatResponse(struct soap*, _eoddata1__UpdateDataFormatResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__UpdateDataFormatResponse
#define soap_read__eoddata1__UpdateDataFormatResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__UpdateDataFormatResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__UpdateDataFormat
#define SOAP_TYPE_eoddata__eoddata1__UpdateDataFormat (103)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__UpdateDataFormat(struct soap*, const char*, int, const _eoddata1__UpdateDataFormat *, const char*);
SOAP_FMAC3 _eoddata1__UpdateDataFormat * SOAP_FMAC4 soap_in__eoddata1__UpdateDataFormat(struct soap*, const char*, _eoddata1__UpdateDataFormat *, const char*);
SOAP_FMAC1 _eoddata1__UpdateDataFormat * SOAP_FMAC2 soap_instantiate__eoddata1__UpdateDataFormat(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__UpdateDataFormat * soap_new__eoddata1__UpdateDataFormat(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__UpdateDataFormat(soap, n, NULL, NULL, NULL); }

inline _eoddata1__UpdateDataFormat * soap_new_req__eoddata1__UpdateDataFormat(
	struct soap *soap,
	bool IncludeHeader,
	bool IncludeSuffix)
{	_eoddata1__UpdateDataFormat *_p = soap_new__eoddata1__UpdateDataFormat(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__UpdateDataFormat::IncludeHeader = IncludeHeader;
		_p->_eoddata1__UpdateDataFormat::IncludeSuffix = IncludeSuffix;
	}
	return _p;
}

inline _eoddata1__UpdateDataFormat * soap_new_set__eoddata1__UpdateDataFormat(
	struct soap *soap,
	std::string *Token,
	std::string *DataFormat,
	bool IncludeHeader,
	bool IncludeSuffix)
{	_eoddata1__UpdateDataFormat *_p = soap_new__eoddata1__UpdateDataFormat(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__UpdateDataFormat::Token = Token;
		_p->_eoddata1__UpdateDataFormat::DataFormat = DataFormat;
		_p->_eoddata1__UpdateDataFormat::IncludeHeader = IncludeHeader;
		_p->_eoddata1__UpdateDataFormat::IncludeSuffix = IncludeSuffix;
	}
	return _p;
}

#ifndef soap_write__eoddata1__UpdateDataFormat
#define soap_write__eoddata1__UpdateDataFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:UpdateDataFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__UpdateDataFormat * SOAP_FMAC4 soap_get__eoddata1__UpdateDataFormat(struct soap*, _eoddata1__UpdateDataFormat *, const char*, const char*);

#ifndef soap_read__eoddata1__UpdateDataFormat
#define soap_read__eoddata1__UpdateDataFormat(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__UpdateDataFormat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__DataFormatsResponse
#define SOAP_TYPE_eoddata__eoddata1__DataFormatsResponse (102)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__DataFormatsResponse(struct soap*, const char*, int, const _eoddata1__DataFormatsResponse *, const char*);
SOAP_FMAC3 _eoddata1__DataFormatsResponse * SOAP_FMAC4 soap_in__eoddata1__DataFormatsResponse(struct soap*, const char*, _eoddata1__DataFormatsResponse *, const char*);
SOAP_FMAC1 _eoddata1__DataFormatsResponse * SOAP_FMAC2 soap_instantiate__eoddata1__DataFormatsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__DataFormatsResponse * soap_new__eoddata1__DataFormatsResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__DataFormatsResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__DataFormatsResponse * soap_new_req__eoddata1__DataFormatsResponse(
	struct soap *soap)
{	_eoddata1__DataFormatsResponse *_p = soap_new__eoddata1__DataFormatsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__DataFormatsResponse * soap_new_set__eoddata1__DataFormatsResponse(
	struct soap *soap,
	eoddata1__RESPONSE *DataFormatsResult)
{	_eoddata1__DataFormatsResponse *_p = soap_new__eoddata1__DataFormatsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__DataFormatsResponse::DataFormatsResult = DataFormatsResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__DataFormatsResponse
#define soap_write__eoddata1__DataFormatsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DataFormatsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataFormatsResponse * SOAP_FMAC4 soap_get__eoddata1__DataFormatsResponse(struct soap*, _eoddata1__DataFormatsResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__DataFormatsResponse
#define soap_read__eoddata1__DataFormatsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__DataFormatsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__DataFormats
#define SOAP_TYPE_eoddata__eoddata1__DataFormats (101)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__DataFormats(struct soap*, const char*, int, const _eoddata1__DataFormats *, const char*);
SOAP_FMAC3 _eoddata1__DataFormats * SOAP_FMAC4 soap_in__eoddata1__DataFormats(struct soap*, const char*, _eoddata1__DataFormats *, const char*);
SOAP_FMAC1 _eoddata1__DataFormats * SOAP_FMAC2 soap_instantiate__eoddata1__DataFormats(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__DataFormats * soap_new__eoddata1__DataFormats(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__DataFormats(soap, n, NULL, NULL, NULL); }

inline _eoddata1__DataFormats * soap_new_req__eoddata1__DataFormats(
	struct soap *soap)
{	_eoddata1__DataFormats *_p = soap_new__eoddata1__DataFormats(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__DataFormats * soap_new_set__eoddata1__DataFormats(
	struct soap *soap,
	std::string *Token)
{	_eoddata1__DataFormats *_p = soap_new__eoddata1__DataFormats(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__DataFormats::Token = Token;
	}
	return _p;
}

#ifndef soap_write__eoddata1__DataFormats
#define soap_write__eoddata1__DataFormats(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DataFormats", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataFormats * SOAP_FMAC4 soap_get__eoddata1__DataFormats(struct soap*, _eoddata1__DataFormats *, const char*, const char*);

#ifndef soap_read__eoddata1__DataFormats
#define soap_read__eoddata1__DataFormats(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__DataFormats(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__DataClientLatestVersionResponse
#define SOAP_TYPE_eoddata__eoddata1__DataClientLatestVersionResponse (100)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__DataClientLatestVersionResponse(struct soap*, const char*, int, const _eoddata1__DataClientLatestVersionResponse *, const char*);
SOAP_FMAC3 _eoddata1__DataClientLatestVersionResponse * SOAP_FMAC4 soap_in__eoddata1__DataClientLatestVersionResponse(struct soap*, const char*, _eoddata1__DataClientLatestVersionResponse *, const char*);
SOAP_FMAC1 _eoddata1__DataClientLatestVersionResponse * SOAP_FMAC2 soap_instantiate__eoddata1__DataClientLatestVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__DataClientLatestVersionResponse * soap_new__eoddata1__DataClientLatestVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__DataClientLatestVersionResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__DataClientLatestVersionResponse * soap_new_req__eoddata1__DataClientLatestVersionResponse(
	struct soap *soap)
{	_eoddata1__DataClientLatestVersionResponse *_p = soap_new__eoddata1__DataClientLatestVersionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__DataClientLatestVersionResponse * soap_new_set__eoddata1__DataClientLatestVersionResponse(
	struct soap *soap,
	eoddata1__RESPONSE *DataClientLatestVersionResult)
{	_eoddata1__DataClientLatestVersionResponse *_p = soap_new__eoddata1__DataClientLatestVersionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__DataClientLatestVersionResponse::DataClientLatestVersionResult = DataClientLatestVersionResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__DataClientLatestVersionResponse
#define soap_write__eoddata1__DataClientLatestVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DataClientLatestVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataClientLatestVersionResponse * SOAP_FMAC4 soap_get__eoddata1__DataClientLatestVersionResponse(struct soap*, _eoddata1__DataClientLatestVersionResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__DataClientLatestVersionResponse
#define soap_read__eoddata1__DataClientLatestVersionResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__DataClientLatestVersionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__DataClientLatestVersion
#define SOAP_TYPE_eoddata__eoddata1__DataClientLatestVersion (99)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__DataClientLatestVersion(struct soap*, const char*, int, const _eoddata1__DataClientLatestVersion *, const char*);
SOAP_FMAC3 _eoddata1__DataClientLatestVersion * SOAP_FMAC4 soap_in__eoddata1__DataClientLatestVersion(struct soap*, const char*, _eoddata1__DataClientLatestVersion *, const char*);
SOAP_FMAC1 _eoddata1__DataClientLatestVersion * SOAP_FMAC2 soap_instantiate__eoddata1__DataClientLatestVersion(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__DataClientLatestVersion * soap_new__eoddata1__DataClientLatestVersion(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__DataClientLatestVersion(soap, n, NULL, NULL, NULL); }

inline _eoddata1__DataClientLatestVersion * soap_new_req__eoddata1__DataClientLatestVersion(
	struct soap *soap)
{	_eoddata1__DataClientLatestVersion *_p = soap_new__eoddata1__DataClientLatestVersion(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__DataClientLatestVersion * soap_new_set__eoddata1__DataClientLatestVersion(
	struct soap *soap,
	std::string *Token)
{	_eoddata1__DataClientLatestVersion *_p = soap_new__eoddata1__DataClientLatestVersion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__DataClientLatestVersion::Token = Token;
	}
	return _p;
}

#ifndef soap_write__eoddata1__DataClientLatestVersion
#define soap_write__eoddata1__DataClientLatestVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DataClientLatestVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataClientLatestVersion * SOAP_FMAC4 soap_get__eoddata1__DataClientLatestVersion(struct soap*, _eoddata1__DataClientLatestVersion *, const char*, const char*);

#ifndef soap_read__eoddata1__DataClientLatestVersion
#define soap_read__eoddata1__DataClientLatestVersion(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__DataClientLatestVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolChangesByExchangeResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolChangesByExchangeResponse (98)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolChangesByExchangeResponse(struct soap*, const char*, int, const _eoddata1__SymbolChangesByExchangeResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolChangesByExchangeResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolChangesByExchangeResponse(struct soap*, const char*, _eoddata1__SymbolChangesByExchangeResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolChangesByExchangeResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolChangesByExchangeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolChangesByExchangeResponse * soap_new__eoddata1__SymbolChangesByExchangeResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolChangesByExchangeResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolChangesByExchangeResponse * soap_new_req__eoddata1__SymbolChangesByExchangeResponse(
	struct soap *soap)
{	_eoddata1__SymbolChangesByExchangeResponse *_p = soap_new__eoddata1__SymbolChangesByExchangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolChangesByExchangeResponse * soap_new_set__eoddata1__SymbolChangesByExchangeResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolChangesByExchangeResult)
{	_eoddata1__SymbolChangesByExchangeResponse *_p = soap_new__eoddata1__SymbolChangesByExchangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolChangesByExchangeResponse::SymbolChangesByExchangeResult = SymbolChangesByExchangeResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolChangesByExchangeResponse
#define soap_write__eoddata1__SymbolChangesByExchangeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolChangesByExchangeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChangesByExchangeResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolChangesByExchangeResponse(struct soap*, _eoddata1__SymbolChangesByExchangeResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolChangesByExchangeResponse
#define soap_read__eoddata1__SymbolChangesByExchangeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolChangesByExchangeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolChangesByExchange
#define SOAP_TYPE_eoddata__eoddata1__SymbolChangesByExchange (97)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolChangesByExchange(struct soap*, const char*, int, const _eoddata1__SymbolChangesByExchange *, const char*);
SOAP_FMAC3 _eoddata1__SymbolChangesByExchange * SOAP_FMAC4 soap_in__eoddata1__SymbolChangesByExchange(struct soap*, const char*, _eoddata1__SymbolChangesByExchange *, const char*);
SOAP_FMAC1 _eoddata1__SymbolChangesByExchange * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolChangesByExchange(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolChangesByExchange * soap_new__eoddata1__SymbolChangesByExchange(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolChangesByExchange(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolChangesByExchange * soap_new_req__eoddata1__SymbolChangesByExchange(
	struct soap *soap)
{	_eoddata1__SymbolChangesByExchange *_p = soap_new__eoddata1__SymbolChangesByExchange(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolChangesByExchange * soap_new_set__eoddata1__SymbolChangesByExchange(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__SymbolChangesByExchange *_p = soap_new__eoddata1__SymbolChangesByExchange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolChangesByExchange::Token = Token;
		_p->_eoddata1__SymbolChangesByExchange::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolChangesByExchange
#define soap_write__eoddata1__SymbolChangesByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolChangesByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChangesByExchange * SOAP_FMAC4 soap_get__eoddata1__SymbolChangesByExchange(struct soap*, _eoddata1__SymbolChangesByExchange *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolChangesByExchange
#define soap_read__eoddata1__SymbolChangesByExchange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolChangesByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod2Response
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod2Response (96)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDatePeriod2Response(struct soap*, const char*, int, const _eoddata1__QuoteListByDatePeriod2Response *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2Response * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDatePeriod2Response(struct soap*, const char*, _eoddata1__QuoteListByDatePeriod2Response *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDatePeriod2Response * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDatePeriod2Response(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDatePeriod2Response * soap_new__eoddata1__QuoteListByDatePeriod2Response(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDatePeriod2Response(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDatePeriod2Response * soap_new_req__eoddata1__QuoteListByDatePeriod2Response(
	struct soap *soap)
{	_eoddata1__QuoteListByDatePeriod2Response *_p = soap_new__eoddata1__QuoteListByDatePeriod2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDatePeriod2Response * soap_new_set__eoddata1__QuoteListByDatePeriod2Response(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteListByDatePeriod2Result)
{	_eoddata1__QuoteListByDatePeriod2Response *_p = soap_new__eoddata1__QuoteListByDatePeriod2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDatePeriod2Response::QuoteListByDatePeriod2Result = QuoteListByDatePeriod2Result;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDatePeriod2Response
#define soap_write__eoddata1__QuoteListByDatePeriod2Response(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDatePeriod2Response", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2Response * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDatePeriod2Response(struct soap*, _eoddata1__QuoteListByDatePeriod2Response *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDatePeriod2Response
#define soap_read__eoddata1__QuoteListByDatePeriod2Response(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDatePeriod2Response(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod2
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod2 (95)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDatePeriod2(struct soap*, const char*, int, const _eoddata1__QuoteListByDatePeriod2 *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDatePeriod2(struct soap*, const char*, _eoddata1__QuoteListByDatePeriod2 *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDatePeriod2(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDatePeriod2 * soap_new__eoddata1__QuoteListByDatePeriod2(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDatePeriod2(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDatePeriod2 * soap_new_req__eoddata1__QuoteListByDatePeriod2(
	struct soap *soap)
{	_eoddata1__QuoteListByDatePeriod2 *_p = soap_new__eoddata1__QuoteListByDatePeriod2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDatePeriod2 * soap_new_set__eoddata1__QuoteListByDatePeriod2(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *QuoteDate,
	std::string *Period)
{	_eoddata1__QuoteListByDatePeriod2 *_p = soap_new__eoddata1__QuoteListByDatePeriod2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDatePeriod2::Token = Token;
		_p->_eoddata1__QuoteListByDatePeriod2::Exchange = Exchange;
		_p->_eoddata1__QuoteListByDatePeriod2::QuoteDate = QuoteDate;
		_p->_eoddata1__QuoteListByDatePeriod2::Period = Period;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDatePeriod2
#define soap_write__eoddata1__QuoteListByDatePeriod2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDatePeriod2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDatePeriod2(struct soap*, _eoddata1__QuoteListByDatePeriod2 *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDatePeriod2
#define soap_read__eoddata1__QuoteListByDatePeriod2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDatePeriod2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriodResponse
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriodResponse (94)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDatePeriodResponse(struct soap*, const char*, int, const _eoddata1__QuoteListByDatePeriodResponse *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriodResponse * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDatePeriodResponse(struct soap*, const char*, _eoddata1__QuoteListByDatePeriodResponse *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDatePeriodResponse * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDatePeriodResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDatePeriodResponse * soap_new__eoddata1__QuoteListByDatePeriodResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDatePeriodResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDatePeriodResponse * soap_new_req__eoddata1__QuoteListByDatePeriodResponse(
	struct soap *soap)
{	_eoddata1__QuoteListByDatePeriodResponse *_p = soap_new__eoddata1__QuoteListByDatePeriodResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDatePeriodResponse * soap_new_set__eoddata1__QuoteListByDatePeriodResponse(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteListByDatePeriodResult)
{	_eoddata1__QuoteListByDatePeriodResponse *_p = soap_new__eoddata1__QuoteListByDatePeriodResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDatePeriodResponse::QuoteListByDatePeriodResult = QuoteListByDatePeriodResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDatePeriodResponse
#define soap_write__eoddata1__QuoteListByDatePeriodResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDatePeriodResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriodResponse * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDatePeriodResponse(struct soap*, _eoddata1__QuoteListByDatePeriodResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDatePeriodResponse
#define soap_read__eoddata1__QuoteListByDatePeriodResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDatePeriodResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDatePeriod (93)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDatePeriod(struct soap*, const char*, int, const _eoddata1__QuoteListByDatePeriod *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDatePeriod(struct soap*, const char*, _eoddata1__QuoteListByDatePeriod *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDatePeriod * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDatePeriod(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDatePeriod * soap_new__eoddata1__QuoteListByDatePeriod(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDatePeriod(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDatePeriod * soap_new_req__eoddata1__QuoteListByDatePeriod(
	struct soap *soap)
{	_eoddata1__QuoteListByDatePeriod *_p = soap_new__eoddata1__QuoteListByDatePeriod(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDatePeriod * soap_new_set__eoddata1__QuoteListByDatePeriod(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *QuoteDate,
	std::string *Period)
{	_eoddata1__QuoteListByDatePeriod *_p = soap_new__eoddata1__QuoteListByDatePeriod(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDatePeriod::Token = Token;
		_p->_eoddata1__QuoteListByDatePeriod::Exchange = Exchange;
		_p->_eoddata1__QuoteListByDatePeriod::QuoteDate = QuoteDate;
		_p->_eoddata1__QuoteListByDatePeriod::Period = Period;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDatePeriod
#define soap_write__eoddata1__QuoteListByDatePeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDatePeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDatePeriod(struct soap*, _eoddata1__QuoteListByDatePeriod *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDatePeriod
#define soap_read__eoddata1__QuoteListByDatePeriod(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDatePeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodByDateRangeResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodByDateRangeResponse (92)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistoryPeriodByDateRangeResponse(struct soap*, const char*, int, const _eoddata1__SymbolHistoryPeriodByDateRangeResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRangeResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolHistoryPeriodByDateRangeResponse(struct soap*, const char*, _eoddata1__SymbolHistoryPeriodByDateRangeResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistoryPeriodByDateRangeResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistoryPeriodByDateRangeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistoryPeriodByDateRangeResponse * soap_new__eoddata1__SymbolHistoryPeriodByDateRangeResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistoryPeriodByDateRangeResponse * soap_new_req__eoddata1__SymbolHistoryPeriodByDateRangeResponse(
	struct soap *soap)
{	_eoddata1__SymbolHistoryPeriodByDateRangeResponse *_p = soap_new__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistoryPeriodByDateRangeResponse * soap_new_set__eoddata1__SymbolHistoryPeriodByDateRangeResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolHistoryPeriodByDateRangeResult)
{	_eoddata1__SymbolHistoryPeriodByDateRangeResponse *_p = soap_new__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistoryPeriodByDateRangeResponse::SymbolHistoryPeriodByDateRangeResult = SymbolHistoryPeriodByDateRangeResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistoryPeriodByDateRangeResponse
#define soap_write__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistoryPeriodByDateRangeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRangeResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolHistoryPeriodByDateRangeResponse(struct soap*, _eoddata1__SymbolHistoryPeriodByDateRangeResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistoryPeriodByDateRangeResponse
#define soap_read__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistoryPeriodByDateRangeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodByDateRange
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodByDateRange (91)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char*, int, const _eoddata1__SymbolHistoryPeriodByDateRange *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC4 soap_in__eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char*, _eoddata1__SymbolHistoryPeriodByDateRange *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistoryPeriodByDateRange * soap_new__eoddata1__SymbolHistoryPeriodByDateRange(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistoryPeriodByDateRange(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistoryPeriodByDateRange * soap_new_req__eoddata1__SymbolHistoryPeriodByDateRange(
	struct soap *soap)
{	_eoddata1__SymbolHistoryPeriodByDateRange *_p = soap_new__eoddata1__SymbolHistoryPeriodByDateRange(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistoryPeriodByDateRange * soap_new_set__eoddata1__SymbolHistoryPeriodByDateRange(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol,
	std::string *StartDate,
	std::string *EndDate,
	std::string *Period)
{	_eoddata1__SymbolHistoryPeriodByDateRange *_p = soap_new__eoddata1__SymbolHistoryPeriodByDateRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::Token = Token;
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::Exchange = Exchange;
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::Symbol = Symbol;
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::StartDate = StartDate;
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::EndDate = EndDate;
		_p->_eoddata1__SymbolHistoryPeriodByDateRange::Period = Period;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistoryPeriodByDateRange
#define soap_write__eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistoryPeriodByDateRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC4 soap_get__eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, _eoddata1__SymbolHistoryPeriodByDateRange *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistoryPeriodByDateRange
#define soap_read__eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistoryPeriodByDateRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriodResponse (90)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistoryPeriodResponse(struct soap*, const char*, int, const _eoddata1__SymbolHistoryPeriodResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolHistoryPeriodResponse(struct soap*, const char*, _eoddata1__SymbolHistoryPeriodResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistoryPeriodResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistoryPeriodResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistoryPeriodResponse * soap_new__eoddata1__SymbolHistoryPeriodResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistoryPeriodResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistoryPeriodResponse * soap_new_req__eoddata1__SymbolHistoryPeriodResponse(
	struct soap *soap)
{	_eoddata1__SymbolHistoryPeriodResponse *_p = soap_new__eoddata1__SymbolHistoryPeriodResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistoryPeriodResponse * soap_new_set__eoddata1__SymbolHistoryPeriodResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolHistoryPeriodResult)
{	_eoddata1__SymbolHistoryPeriodResponse *_p = soap_new__eoddata1__SymbolHistoryPeriodResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistoryPeriodResponse::SymbolHistoryPeriodResult = SymbolHistoryPeriodResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistoryPeriodResponse
#define soap_write__eoddata1__SymbolHistoryPeriodResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistoryPeriodResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolHistoryPeriodResponse(struct soap*, _eoddata1__SymbolHistoryPeriodResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistoryPeriodResponse
#define soap_read__eoddata1__SymbolHistoryPeriodResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistoryPeriodResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriod
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistoryPeriod (89)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistoryPeriod(struct soap*, const char*, int, const _eoddata1__SymbolHistoryPeriod *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriod * SOAP_FMAC4 soap_in__eoddata1__SymbolHistoryPeriod(struct soap*, const char*, _eoddata1__SymbolHistoryPeriod *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistoryPeriod * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistoryPeriod(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistoryPeriod * soap_new__eoddata1__SymbolHistoryPeriod(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistoryPeriod(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistoryPeriod * soap_new_req__eoddata1__SymbolHistoryPeriod(
	struct soap *soap)
{	_eoddata1__SymbolHistoryPeriod *_p = soap_new__eoddata1__SymbolHistoryPeriod(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistoryPeriod * soap_new_set__eoddata1__SymbolHistoryPeriod(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol,
	std::string *Date,
	std::string *Period)
{	_eoddata1__SymbolHistoryPeriod *_p = soap_new__eoddata1__SymbolHistoryPeriod(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistoryPeriod::Token = Token;
		_p->_eoddata1__SymbolHistoryPeriod::Exchange = Exchange;
		_p->_eoddata1__SymbolHistoryPeriod::Symbol = Symbol;
		_p->_eoddata1__SymbolHistoryPeriod::Date = Date;
		_p->_eoddata1__SymbolHistoryPeriod::Period = Period;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistoryPeriod
#define soap_write__eoddata1__SymbolHistoryPeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistoryPeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriod * SOAP_FMAC4 soap_get__eoddata1__SymbolHistoryPeriod(struct soap*, _eoddata1__SymbolHistoryPeriod *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistoryPeriod
#define soap_read__eoddata1__SymbolHistoryPeriod(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistoryPeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__CountryListResponse
#define SOAP_TYPE_eoddata__eoddata1__CountryListResponse (88)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__CountryListResponse(struct soap*, const char*, int, const _eoddata1__CountryListResponse *, const char*);
SOAP_FMAC3 _eoddata1__CountryListResponse * SOAP_FMAC4 soap_in__eoddata1__CountryListResponse(struct soap*, const char*, _eoddata1__CountryListResponse *, const char*);
SOAP_FMAC1 _eoddata1__CountryListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__CountryListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__CountryListResponse * soap_new__eoddata1__CountryListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__CountryListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__CountryListResponse * soap_new_req__eoddata1__CountryListResponse(
	struct soap *soap)
{	_eoddata1__CountryListResponse *_p = soap_new__eoddata1__CountryListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__CountryListResponse * soap_new_set__eoddata1__CountryListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *CountryListResult)
{	_eoddata1__CountryListResponse *_p = soap_new__eoddata1__CountryListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__CountryListResponse::CountryListResult = CountryListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__CountryListResponse
#define soap_write__eoddata1__CountryListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:CountryListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__CountryListResponse * SOAP_FMAC4 soap_get__eoddata1__CountryListResponse(struct soap*, _eoddata1__CountryListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__CountryListResponse
#define soap_read__eoddata1__CountryListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__CountryListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__CountryList
#define SOAP_TYPE_eoddata__eoddata1__CountryList (87)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__CountryList(struct soap*, const char*, int, const _eoddata1__CountryList *, const char*);
SOAP_FMAC3 _eoddata1__CountryList * SOAP_FMAC4 soap_in__eoddata1__CountryList(struct soap*, const char*, _eoddata1__CountryList *, const char*);
SOAP_FMAC1 _eoddata1__CountryList * SOAP_FMAC2 soap_instantiate__eoddata1__CountryList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__CountryList * soap_new__eoddata1__CountryList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__CountryList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__CountryList * soap_new_req__eoddata1__CountryList(
	struct soap *soap)
{	_eoddata1__CountryList *_p = soap_new__eoddata1__CountryList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__CountryList * soap_new_set__eoddata1__CountryList(
	struct soap *soap,
	std::string *Token)
{	_eoddata1__CountryList *_p = soap_new__eoddata1__CountryList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__CountryList::Token = Token;
	}
	return _p;
}

#ifndef soap_write__eoddata1__CountryList
#define soap_write__eoddata1__CountryList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:CountryList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__CountryList * SOAP_FMAC4 soap_get__eoddata1__CountryList(struct soap*, _eoddata1__CountryList *, const char*, const char*);

#ifndef soap_read__eoddata1__CountryList
#define soap_read__eoddata1__CountryList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__CountryList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SplitListBySymbolResponse
#define SOAP_TYPE_eoddata__eoddata1__SplitListBySymbolResponse (86)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SplitListBySymbolResponse(struct soap*, const char*, int, const _eoddata1__SplitListBySymbolResponse *, const char*);
SOAP_FMAC3 _eoddata1__SplitListBySymbolResponse * SOAP_FMAC4 soap_in__eoddata1__SplitListBySymbolResponse(struct soap*, const char*, _eoddata1__SplitListBySymbolResponse *, const char*);
SOAP_FMAC1 _eoddata1__SplitListBySymbolResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SplitListBySymbolResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SplitListBySymbolResponse * soap_new__eoddata1__SplitListBySymbolResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SplitListBySymbolResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SplitListBySymbolResponse * soap_new_req__eoddata1__SplitListBySymbolResponse(
	struct soap *soap)
{	_eoddata1__SplitListBySymbolResponse *_p = soap_new__eoddata1__SplitListBySymbolResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SplitListBySymbolResponse * soap_new_set__eoddata1__SplitListBySymbolResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SplitListBySymbolResult)
{	_eoddata1__SplitListBySymbolResponse *_p = soap_new__eoddata1__SplitListBySymbolResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SplitListBySymbolResponse::SplitListBySymbolResult = SplitListBySymbolResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SplitListBySymbolResponse
#define soap_write__eoddata1__SplitListBySymbolResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SplitListBySymbolResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListBySymbolResponse * SOAP_FMAC4 soap_get__eoddata1__SplitListBySymbolResponse(struct soap*, _eoddata1__SplitListBySymbolResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SplitListBySymbolResponse
#define soap_read__eoddata1__SplitListBySymbolResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SplitListBySymbolResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SplitListBySymbol
#define SOAP_TYPE_eoddata__eoddata1__SplitListBySymbol (85)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SplitListBySymbol(struct soap*, const char*, int, const _eoddata1__SplitListBySymbol *, const char*);
SOAP_FMAC3 _eoddata1__SplitListBySymbol * SOAP_FMAC4 soap_in__eoddata1__SplitListBySymbol(struct soap*, const char*, _eoddata1__SplitListBySymbol *, const char*);
SOAP_FMAC1 _eoddata1__SplitListBySymbol * SOAP_FMAC2 soap_instantiate__eoddata1__SplitListBySymbol(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SplitListBySymbol * soap_new__eoddata1__SplitListBySymbol(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SplitListBySymbol(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SplitListBySymbol * soap_new_req__eoddata1__SplitListBySymbol(
	struct soap *soap)
{	_eoddata1__SplitListBySymbol *_p = soap_new__eoddata1__SplitListBySymbol(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SplitListBySymbol * soap_new_set__eoddata1__SplitListBySymbol(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol)
{	_eoddata1__SplitListBySymbol *_p = soap_new__eoddata1__SplitListBySymbol(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SplitListBySymbol::Token = Token;
		_p->_eoddata1__SplitListBySymbol::Exchange = Exchange;
		_p->_eoddata1__SplitListBySymbol::Symbol = Symbol;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SplitListBySymbol
#define soap_write__eoddata1__SplitListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SplitListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListBySymbol * SOAP_FMAC4 soap_get__eoddata1__SplitListBySymbol(struct soap*, _eoddata1__SplitListBySymbol *, const char*, const char*);

#ifndef soap_read__eoddata1__SplitListBySymbol
#define soap_read__eoddata1__SplitListBySymbol(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SplitListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SplitListByExchangeResponse
#define SOAP_TYPE_eoddata__eoddata1__SplitListByExchangeResponse (84)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SplitListByExchangeResponse(struct soap*, const char*, int, const _eoddata1__SplitListByExchangeResponse *, const char*);
SOAP_FMAC3 _eoddata1__SplitListByExchangeResponse * SOAP_FMAC4 soap_in__eoddata1__SplitListByExchangeResponse(struct soap*, const char*, _eoddata1__SplitListByExchangeResponse *, const char*);
SOAP_FMAC1 _eoddata1__SplitListByExchangeResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SplitListByExchangeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SplitListByExchangeResponse * soap_new__eoddata1__SplitListByExchangeResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SplitListByExchangeResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SplitListByExchangeResponse * soap_new_req__eoddata1__SplitListByExchangeResponse(
	struct soap *soap)
{	_eoddata1__SplitListByExchangeResponse *_p = soap_new__eoddata1__SplitListByExchangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SplitListByExchangeResponse * soap_new_set__eoddata1__SplitListByExchangeResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SplitListByExchangeResult)
{	_eoddata1__SplitListByExchangeResponse *_p = soap_new__eoddata1__SplitListByExchangeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SplitListByExchangeResponse::SplitListByExchangeResult = SplitListByExchangeResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SplitListByExchangeResponse
#define soap_write__eoddata1__SplitListByExchangeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SplitListByExchangeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListByExchangeResponse * SOAP_FMAC4 soap_get__eoddata1__SplitListByExchangeResponse(struct soap*, _eoddata1__SplitListByExchangeResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SplitListByExchangeResponse
#define soap_read__eoddata1__SplitListByExchangeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SplitListByExchangeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SplitListByExchange
#define SOAP_TYPE_eoddata__eoddata1__SplitListByExchange (83)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SplitListByExchange(struct soap*, const char*, int, const _eoddata1__SplitListByExchange *, const char*);
SOAP_FMAC3 _eoddata1__SplitListByExchange * SOAP_FMAC4 soap_in__eoddata1__SplitListByExchange(struct soap*, const char*, _eoddata1__SplitListByExchange *, const char*);
SOAP_FMAC1 _eoddata1__SplitListByExchange * SOAP_FMAC2 soap_instantiate__eoddata1__SplitListByExchange(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SplitListByExchange * soap_new__eoddata1__SplitListByExchange(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SplitListByExchange(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SplitListByExchange * soap_new_req__eoddata1__SplitListByExchange(
	struct soap *soap)
{	_eoddata1__SplitListByExchange *_p = soap_new__eoddata1__SplitListByExchange(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SplitListByExchange * soap_new_set__eoddata1__SplitListByExchange(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__SplitListByExchange *_p = soap_new__eoddata1__SplitListByExchange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SplitListByExchange::Token = Token;
		_p->_eoddata1__SplitListByExchange::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SplitListByExchange
#define soap_write__eoddata1__SplitListByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SplitListByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListByExchange * SOAP_FMAC4 soap_get__eoddata1__SplitListByExchange(struct soap*, _eoddata1__SplitListByExchange *, const char*, const char*);

#ifndef soap_read__eoddata1__SplitListByExchange
#define soap_read__eoddata1__SplitListByExchange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SplitListByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeMonthsResponse
#define SOAP_TYPE_eoddata__eoddata1__ExchangeMonthsResponse (82)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeMonthsResponse(struct soap*, const char*, int, const _eoddata1__ExchangeMonthsResponse *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeMonthsResponse * SOAP_FMAC4 soap_in__eoddata1__ExchangeMonthsResponse(struct soap*, const char*, _eoddata1__ExchangeMonthsResponse *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeMonthsResponse * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeMonthsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeMonthsResponse * soap_new__eoddata1__ExchangeMonthsResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeMonthsResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeMonthsResponse * soap_new_req__eoddata1__ExchangeMonthsResponse(
	struct soap *soap)
{	_eoddata1__ExchangeMonthsResponse *_p = soap_new__eoddata1__ExchangeMonthsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeMonthsResponse * soap_new_set__eoddata1__ExchangeMonthsResponse(
	struct soap *soap,
	eoddata1__RESPONSE *ExchangeMonthsResult)
{	_eoddata1__ExchangeMonthsResponse *_p = soap_new__eoddata1__ExchangeMonthsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeMonthsResponse::ExchangeMonthsResult = ExchangeMonthsResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeMonthsResponse
#define soap_write__eoddata1__ExchangeMonthsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeMonthsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeMonthsResponse * SOAP_FMAC4 soap_get__eoddata1__ExchangeMonthsResponse(struct soap*, _eoddata1__ExchangeMonthsResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeMonthsResponse
#define soap_read__eoddata1__ExchangeMonthsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeMonthsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeMonths
#define SOAP_TYPE_eoddata__eoddata1__ExchangeMonths (81)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeMonths(struct soap*, const char*, int, const _eoddata1__ExchangeMonths *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeMonths * SOAP_FMAC4 soap_in__eoddata1__ExchangeMonths(struct soap*, const char*, _eoddata1__ExchangeMonths *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeMonths * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeMonths(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeMonths * soap_new__eoddata1__ExchangeMonths(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeMonths(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeMonths * soap_new_req__eoddata1__ExchangeMonths(
	struct soap *soap)
{	_eoddata1__ExchangeMonths *_p = soap_new__eoddata1__ExchangeMonths(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeMonths * soap_new_set__eoddata1__ExchangeMonths(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__ExchangeMonths *_p = soap_new__eoddata1__ExchangeMonths(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeMonths::Token = Token;
		_p->_eoddata1__ExchangeMonths::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeMonths
#define soap_write__eoddata1__ExchangeMonths(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeMonths", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeMonths * SOAP_FMAC4 soap_get__eoddata1__ExchangeMonths(struct soap*, _eoddata1__ExchangeMonths *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeMonths
#define soap_read__eoddata1__ExchangeMonths(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeMonths(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolChartResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolChartResponse (80)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolChartResponse(struct soap*, const char*, int, const _eoddata1__SymbolChartResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolChartResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolChartResponse(struct soap*, const char*, _eoddata1__SymbolChartResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolChartResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolChartResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolChartResponse * soap_new__eoddata1__SymbolChartResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolChartResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolChartResponse * soap_new_req__eoddata1__SymbolChartResponse(
	struct soap *soap)
{	_eoddata1__SymbolChartResponse *_p = soap_new__eoddata1__SymbolChartResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolChartResponse * soap_new_set__eoddata1__SymbolChartResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolChartResult)
{	_eoddata1__SymbolChartResponse *_p = soap_new__eoddata1__SymbolChartResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolChartResponse::SymbolChartResult = SymbolChartResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolChartResponse
#define soap_write__eoddata1__SymbolChartResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolChartResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChartResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolChartResponse(struct soap*, _eoddata1__SymbolChartResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolChartResponse
#define soap_read__eoddata1__SymbolChartResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolChartResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolChart
#define SOAP_TYPE_eoddata__eoddata1__SymbolChart (79)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolChart(struct soap*, const char*, int, const _eoddata1__SymbolChart *, const char*);
SOAP_FMAC3 _eoddata1__SymbolChart * SOAP_FMAC4 soap_in__eoddata1__SymbolChart(struct soap*, const char*, _eoddata1__SymbolChart *, const char*);
SOAP_FMAC1 _eoddata1__SymbolChart * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolChart(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolChart * soap_new__eoddata1__SymbolChart(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolChart(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolChart * soap_new_req__eoddata1__SymbolChart(
	struct soap *soap)
{	_eoddata1__SymbolChart *_p = soap_new__eoddata1__SymbolChart(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolChart * soap_new_set__eoddata1__SymbolChart(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol)
{	_eoddata1__SymbolChart *_p = soap_new__eoddata1__SymbolChart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolChart::Token = Token;
		_p->_eoddata1__SymbolChart::Exchange = Exchange;
		_p->_eoddata1__SymbolChart::Symbol = Symbol;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolChart
#define soap_write__eoddata1__SymbolChart(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolChart", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChart * SOAP_FMAC4 soap_get__eoddata1__SymbolChart(struct soap*, _eoddata1__SymbolChart *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolChart
#define soap_read__eoddata1__SymbolChart(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolChart(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Top10LossesResponse
#define SOAP_TYPE_eoddata__eoddata1__Top10LossesResponse (78)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Top10LossesResponse(struct soap*, const char*, int, const _eoddata1__Top10LossesResponse *, const char*);
SOAP_FMAC3 _eoddata1__Top10LossesResponse * SOAP_FMAC4 soap_in__eoddata1__Top10LossesResponse(struct soap*, const char*, _eoddata1__Top10LossesResponse *, const char*);
SOAP_FMAC1 _eoddata1__Top10LossesResponse * SOAP_FMAC2 soap_instantiate__eoddata1__Top10LossesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Top10LossesResponse * soap_new__eoddata1__Top10LossesResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Top10LossesResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Top10LossesResponse * soap_new_req__eoddata1__Top10LossesResponse(
	struct soap *soap)
{	_eoddata1__Top10LossesResponse *_p = soap_new__eoddata1__Top10LossesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Top10LossesResponse * soap_new_set__eoddata1__Top10LossesResponse(
	struct soap *soap,
	eoddata1__RESPONSE *Top10LossesResult)
{	_eoddata1__Top10LossesResponse *_p = soap_new__eoddata1__Top10LossesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Top10LossesResponse::Top10LossesResult = Top10LossesResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Top10LossesResponse
#define soap_write__eoddata1__Top10LossesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Top10LossesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10LossesResponse * SOAP_FMAC4 soap_get__eoddata1__Top10LossesResponse(struct soap*, _eoddata1__Top10LossesResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__Top10LossesResponse
#define soap_read__eoddata1__Top10LossesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Top10LossesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Top10Losses
#define SOAP_TYPE_eoddata__eoddata1__Top10Losses (77)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Top10Losses(struct soap*, const char*, int, const _eoddata1__Top10Losses *, const char*);
SOAP_FMAC3 _eoddata1__Top10Losses * SOAP_FMAC4 soap_in__eoddata1__Top10Losses(struct soap*, const char*, _eoddata1__Top10Losses *, const char*);
SOAP_FMAC1 _eoddata1__Top10Losses * SOAP_FMAC2 soap_instantiate__eoddata1__Top10Losses(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Top10Losses * soap_new__eoddata1__Top10Losses(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Top10Losses(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Top10Losses * soap_new_req__eoddata1__Top10Losses(
	struct soap *soap)
{	_eoddata1__Top10Losses *_p = soap_new__eoddata1__Top10Losses(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Top10Losses * soap_new_set__eoddata1__Top10Losses(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__Top10Losses *_p = soap_new__eoddata1__Top10Losses(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Top10Losses::Token = Token;
		_p->_eoddata1__Top10Losses::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Top10Losses
#define soap_write__eoddata1__Top10Losses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Top10Losses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10Losses * SOAP_FMAC4 soap_get__eoddata1__Top10Losses(struct soap*, _eoddata1__Top10Losses *, const char*, const char*);

#ifndef soap_read__eoddata1__Top10Losses
#define soap_read__eoddata1__Top10Losses(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Top10Losses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Top10GainsResponse
#define SOAP_TYPE_eoddata__eoddata1__Top10GainsResponse (76)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Top10GainsResponse(struct soap*, const char*, int, const _eoddata1__Top10GainsResponse *, const char*);
SOAP_FMAC3 _eoddata1__Top10GainsResponse * SOAP_FMAC4 soap_in__eoddata1__Top10GainsResponse(struct soap*, const char*, _eoddata1__Top10GainsResponse *, const char*);
SOAP_FMAC1 _eoddata1__Top10GainsResponse * SOAP_FMAC2 soap_instantiate__eoddata1__Top10GainsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Top10GainsResponse * soap_new__eoddata1__Top10GainsResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Top10GainsResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Top10GainsResponse * soap_new_req__eoddata1__Top10GainsResponse(
	struct soap *soap)
{	_eoddata1__Top10GainsResponse *_p = soap_new__eoddata1__Top10GainsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Top10GainsResponse * soap_new_set__eoddata1__Top10GainsResponse(
	struct soap *soap,
	eoddata1__RESPONSE *Top10GainsResult)
{	_eoddata1__Top10GainsResponse *_p = soap_new__eoddata1__Top10GainsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Top10GainsResponse::Top10GainsResult = Top10GainsResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Top10GainsResponse
#define soap_write__eoddata1__Top10GainsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Top10GainsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10GainsResponse * SOAP_FMAC4 soap_get__eoddata1__Top10GainsResponse(struct soap*, _eoddata1__Top10GainsResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__Top10GainsResponse
#define soap_read__eoddata1__Top10GainsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Top10GainsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Top10Gains
#define SOAP_TYPE_eoddata__eoddata1__Top10Gains (75)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Top10Gains(struct soap*, const char*, int, const _eoddata1__Top10Gains *, const char*);
SOAP_FMAC3 _eoddata1__Top10Gains * SOAP_FMAC4 soap_in__eoddata1__Top10Gains(struct soap*, const char*, _eoddata1__Top10Gains *, const char*);
SOAP_FMAC1 _eoddata1__Top10Gains * SOAP_FMAC2 soap_instantiate__eoddata1__Top10Gains(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Top10Gains * soap_new__eoddata1__Top10Gains(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Top10Gains(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Top10Gains * soap_new_req__eoddata1__Top10Gains(
	struct soap *soap)
{	_eoddata1__Top10Gains *_p = soap_new__eoddata1__Top10Gains(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Top10Gains * soap_new_set__eoddata1__Top10Gains(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__Top10Gains *_p = soap_new__eoddata1__Top10Gains(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Top10Gains::Token = Token;
		_p->_eoddata1__Top10Gains::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Top10Gains
#define soap_write__eoddata1__Top10Gains(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Top10Gains", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10Gains * SOAP_FMAC4 soap_get__eoddata1__Top10Gains(struct soap*, _eoddata1__Top10Gains *, const char*, const char*);

#ifndef soap_read__eoddata1__Top10Gains
#define soap_read__eoddata1__Top10Gains(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Top10Gains(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistoryResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistoryResponse (74)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistoryResponse(struct soap*, const char*, int, const _eoddata1__SymbolHistoryResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistoryResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolHistoryResponse(struct soap*, const char*, _eoddata1__SymbolHistoryResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistoryResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistoryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistoryResponse * soap_new__eoddata1__SymbolHistoryResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistoryResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistoryResponse * soap_new_req__eoddata1__SymbolHistoryResponse(
	struct soap *soap)
{	_eoddata1__SymbolHistoryResponse *_p = soap_new__eoddata1__SymbolHistoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistoryResponse * soap_new_set__eoddata1__SymbolHistoryResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolHistoryResult)
{	_eoddata1__SymbolHistoryResponse *_p = soap_new__eoddata1__SymbolHistoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistoryResponse::SymbolHistoryResult = SymbolHistoryResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistoryResponse
#define soap_write__eoddata1__SymbolHistoryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistoryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolHistoryResponse(struct soap*, _eoddata1__SymbolHistoryResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistoryResponse
#define soap_read__eoddata1__SymbolHistoryResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistoryResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolHistory
#define SOAP_TYPE_eoddata__eoddata1__SymbolHistory (73)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolHistory(struct soap*, const char*, int, const _eoddata1__SymbolHistory *, const char*);
SOAP_FMAC3 _eoddata1__SymbolHistory * SOAP_FMAC4 soap_in__eoddata1__SymbolHistory(struct soap*, const char*, _eoddata1__SymbolHistory *, const char*);
SOAP_FMAC1 _eoddata1__SymbolHistory * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolHistory(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolHistory * soap_new__eoddata1__SymbolHistory(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolHistory(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolHistory * soap_new_req__eoddata1__SymbolHistory(
	struct soap *soap)
{	_eoddata1__SymbolHistory *_p = soap_new__eoddata1__SymbolHistory(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolHistory * soap_new_set__eoddata1__SymbolHistory(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol,
	std::string *StartDate)
{	_eoddata1__SymbolHistory *_p = soap_new__eoddata1__SymbolHistory(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolHistory::Token = Token;
		_p->_eoddata1__SymbolHistory::Exchange = Exchange;
		_p->_eoddata1__SymbolHistory::Symbol = Symbol;
		_p->_eoddata1__SymbolHistory::StartDate = StartDate;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolHistory
#define soap_write__eoddata1__SymbolHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistory * SOAP_FMAC4 soap_get__eoddata1__SymbolHistory(struct soap*, _eoddata1__SymbolHistory *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolHistory
#define soap_read__eoddata1__SymbolHistory(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolHistory(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDate2Response
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDate2Response (72)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDate2Response(struct soap*, const char*, int, const _eoddata1__QuoteListByDate2Response *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDate2Response * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDate2Response(struct soap*, const char*, _eoddata1__QuoteListByDate2Response *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDate2Response * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDate2Response(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDate2Response * soap_new__eoddata1__QuoteListByDate2Response(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDate2Response(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDate2Response * soap_new_req__eoddata1__QuoteListByDate2Response(
	struct soap *soap)
{	_eoddata1__QuoteListByDate2Response *_p = soap_new__eoddata1__QuoteListByDate2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDate2Response * soap_new_set__eoddata1__QuoteListByDate2Response(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteListByDate2Result)
{	_eoddata1__QuoteListByDate2Response *_p = soap_new__eoddata1__QuoteListByDate2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDate2Response::QuoteListByDate2Result = QuoteListByDate2Result;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDate2Response
#define soap_write__eoddata1__QuoteListByDate2Response(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDate2Response", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDate2Response * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDate2Response(struct soap*, _eoddata1__QuoteListByDate2Response *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDate2Response
#define soap_read__eoddata1__QuoteListByDate2Response(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDate2Response(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDate2
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDate2 (71)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDate2(struct soap*, const char*, int, const _eoddata1__QuoteListByDate2 *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDate2 * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDate2(struct soap*, const char*, _eoddata1__QuoteListByDate2 *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDate2 * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDate2(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDate2 * soap_new__eoddata1__QuoteListByDate2(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDate2(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDate2 * soap_new_req__eoddata1__QuoteListByDate2(
	struct soap *soap)
{	_eoddata1__QuoteListByDate2 *_p = soap_new__eoddata1__QuoteListByDate2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDate2 * soap_new_set__eoddata1__QuoteListByDate2(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *QuoteDate)
{	_eoddata1__QuoteListByDate2 *_p = soap_new__eoddata1__QuoteListByDate2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDate2::Token = Token;
		_p->_eoddata1__QuoteListByDate2::Exchange = Exchange;
		_p->_eoddata1__QuoteListByDate2::QuoteDate = QuoteDate;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDate2
#define soap_write__eoddata1__QuoteListByDate2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDate2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDate2 * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDate2(struct soap*, _eoddata1__QuoteListByDate2 *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDate2
#define soap_read__eoddata1__QuoteListByDate2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDate2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDateResponse
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDateResponse (70)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDateResponse(struct soap*, const char*, int, const _eoddata1__QuoteListByDateResponse *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDateResponse * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDateResponse(struct soap*, const char*, _eoddata1__QuoteListByDateResponse *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDateResponse * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDateResponse * soap_new__eoddata1__QuoteListByDateResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDateResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDateResponse * soap_new_req__eoddata1__QuoteListByDateResponse(
	struct soap *soap)
{	_eoddata1__QuoteListByDateResponse *_p = soap_new__eoddata1__QuoteListByDateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDateResponse * soap_new_set__eoddata1__QuoteListByDateResponse(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteListByDateResult)
{	_eoddata1__QuoteListByDateResponse *_p = soap_new__eoddata1__QuoteListByDateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDateResponse::QuoteListByDateResult = QuoteListByDateResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDateResponse
#define soap_write__eoddata1__QuoteListByDateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDateResponse * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDateResponse(struct soap*, _eoddata1__QuoteListByDateResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDateResponse
#define soap_read__eoddata1__QuoteListByDateResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDateResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListByDate
#define SOAP_TYPE_eoddata__eoddata1__QuoteListByDate (69)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListByDate(struct soap*, const char*, int, const _eoddata1__QuoteListByDate *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListByDate * SOAP_FMAC4 soap_in__eoddata1__QuoteListByDate(struct soap*, const char*, _eoddata1__QuoteListByDate *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListByDate * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListByDate(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListByDate * soap_new__eoddata1__QuoteListByDate(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListByDate(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListByDate * soap_new_req__eoddata1__QuoteListByDate(
	struct soap *soap)
{	_eoddata1__QuoteListByDate *_p = soap_new__eoddata1__QuoteListByDate(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListByDate * soap_new_set__eoddata1__QuoteListByDate(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *QuoteDate)
{	_eoddata1__QuoteListByDate *_p = soap_new__eoddata1__QuoteListByDate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListByDate::Token = Token;
		_p->_eoddata1__QuoteListByDate::Exchange = Exchange;
		_p->_eoddata1__QuoteListByDate::QuoteDate = QuoteDate;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListByDate
#define soap_write__eoddata1__QuoteListByDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListByDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDate * SOAP_FMAC4 soap_get__eoddata1__QuoteListByDate(struct soap*, _eoddata1__QuoteListByDate *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListByDate
#define soap_read__eoddata1__QuoteListByDate(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListByDate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__TechnicalListResponse
#define SOAP_TYPE_eoddata__eoddata1__TechnicalListResponse (68)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__TechnicalListResponse(struct soap*, const char*, int, const _eoddata1__TechnicalListResponse *, const char*);
SOAP_FMAC3 _eoddata1__TechnicalListResponse * SOAP_FMAC4 soap_in__eoddata1__TechnicalListResponse(struct soap*, const char*, _eoddata1__TechnicalListResponse *, const char*);
SOAP_FMAC1 _eoddata1__TechnicalListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__TechnicalListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__TechnicalListResponse * soap_new__eoddata1__TechnicalListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__TechnicalListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__TechnicalListResponse * soap_new_req__eoddata1__TechnicalListResponse(
	struct soap *soap)
{	_eoddata1__TechnicalListResponse *_p = soap_new__eoddata1__TechnicalListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__TechnicalListResponse * soap_new_set__eoddata1__TechnicalListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *TechnicalListResult)
{	_eoddata1__TechnicalListResponse *_p = soap_new__eoddata1__TechnicalListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__TechnicalListResponse::TechnicalListResult = TechnicalListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__TechnicalListResponse
#define soap_write__eoddata1__TechnicalListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:TechnicalListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__TechnicalListResponse * SOAP_FMAC4 soap_get__eoddata1__TechnicalListResponse(struct soap*, _eoddata1__TechnicalListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__TechnicalListResponse
#define soap_read__eoddata1__TechnicalListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__TechnicalListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__TechnicalList
#define SOAP_TYPE_eoddata__eoddata1__TechnicalList (67)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__TechnicalList(struct soap*, const char*, int, const _eoddata1__TechnicalList *, const char*);
SOAP_FMAC3 _eoddata1__TechnicalList * SOAP_FMAC4 soap_in__eoddata1__TechnicalList(struct soap*, const char*, _eoddata1__TechnicalList *, const char*);
SOAP_FMAC1 _eoddata1__TechnicalList * SOAP_FMAC2 soap_instantiate__eoddata1__TechnicalList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__TechnicalList * soap_new__eoddata1__TechnicalList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__TechnicalList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__TechnicalList * soap_new_req__eoddata1__TechnicalList(
	struct soap *soap)
{	_eoddata1__TechnicalList *_p = soap_new__eoddata1__TechnicalList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__TechnicalList * soap_new_set__eoddata1__TechnicalList(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__TechnicalList *_p = soap_new__eoddata1__TechnicalList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__TechnicalList::Token = Token;
		_p->_eoddata1__TechnicalList::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__TechnicalList
#define soap_write__eoddata1__TechnicalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:TechnicalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__TechnicalList * SOAP_FMAC4 soap_get__eoddata1__TechnicalList(struct soap*, _eoddata1__TechnicalList *, const char*, const char*);

#ifndef soap_read__eoddata1__TechnicalList
#define soap_read__eoddata1__TechnicalList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__TechnicalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__FundamentalListResponse
#define SOAP_TYPE_eoddata__eoddata1__FundamentalListResponse (66)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__FundamentalListResponse(struct soap*, const char*, int, const _eoddata1__FundamentalListResponse *, const char*);
SOAP_FMAC3 _eoddata1__FundamentalListResponse * SOAP_FMAC4 soap_in__eoddata1__FundamentalListResponse(struct soap*, const char*, _eoddata1__FundamentalListResponse *, const char*);
SOAP_FMAC1 _eoddata1__FundamentalListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__FundamentalListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__FundamentalListResponse * soap_new__eoddata1__FundamentalListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__FundamentalListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__FundamentalListResponse * soap_new_req__eoddata1__FundamentalListResponse(
	struct soap *soap)
{	_eoddata1__FundamentalListResponse *_p = soap_new__eoddata1__FundamentalListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__FundamentalListResponse * soap_new_set__eoddata1__FundamentalListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *FundamentalListResult)
{	_eoddata1__FundamentalListResponse *_p = soap_new__eoddata1__FundamentalListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__FundamentalListResponse::FundamentalListResult = FundamentalListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__FundamentalListResponse
#define soap_write__eoddata1__FundamentalListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:FundamentalListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__FundamentalListResponse * SOAP_FMAC4 soap_get__eoddata1__FundamentalListResponse(struct soap*, _eoddata1__FundamentalListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__FundamentalListResponse
#define soap_read__eoddata1__FundamentalListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__FundamentalListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__FundamentalList
#define SOAP_TYPE_eoddata__eoddata1__FundamentalList (65)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__FundamentalList(struct soap*, const char*, int, const _eoddata1__FundamentalList *, const char*);
SOAP_FMAC3 _eoddata1__FundamentalList * SOAP_FMAC4 soap_in__eoddata1__FundamentalList(struct soap*, const char*, _eoddata1__FundamentalList *, const char*);
SOAP_FMAC1 _eoddata1__FundamentalList * SOAP_FMAC2 soap_instantiate__eoddata1__FundamentalList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__FundamentalList * soap_new__eoddata1__FundamentalList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__FundamentalList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__FundamentalList * soap_new_req__eoddata1__FundamentalList(
	struct soap *soap)
{	_eoddata1__FundamentalList *_p = soap_new__eoddata1__FundamentalList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__FundamentalList * soap_new_set__eoddata1__FundamentalList(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__FundamentalList *_p = soap_new__eoddata1__FundamentalList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__FundamentalList::Token = Token;
		_p->_eoddata1__FundamentalList::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__FundamentalList
#define soap_write__eoddata1__FundamentalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:FundamentalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__FundamentalList * SOAP_FMAC4 soap_get__eoddata1__FundamentalList(struct soap*, _eoddata1__FundamentalList *, const char*, const char*);

#ifndef soap_read__eoddata1__FundamentalList
#define soap_read__eoddata1__FundamentalList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__FundamentalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__NewsListBySymbolResponse
#define SOAP_TYPE_eoddata__eoddata1__NewsListBySymbolResponse (64)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__NewsListBySymbolResponse(struct soap*, const char*, int, const _eoddata1__NewsListBySymbolResponse *, const char*);
SOAP_FMAC3 _eoddata1__NewsListBySymbolResponse * SOAP_FMAC4 soap_in__eoddata1__NewsListBySymbolResponse(struct soap*, const char*, _eoddata1__NewsListBySymbolResponse *, const char*);
SOAP_FMAC1 _eoddata1__NewsListBySymbolResponse * SOAP_FMAC2 soap_instantiate__eoddata1__NewsListBySymbolResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__NewsListBySymbolResponse * soap_new__eoddata1__NewsListBySymbolResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__NewsListBySymbolResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__NewsListBySymbolResponse * soap_new_req__eoddata1__NewsListBySymbolResponse(
	struct soap *soap)
{	_eoddata1__NewsListBySymbolResponse *_p = soap_new__eoddata1__NewsListBySymbolResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__NewsListBySymbolResponse * soap_new_set__eoddata1__NewsListBySymbolResponse(
	struct soap *soap,
	eoddata1__RESPONSE *NewsListBySymbolResult)
{	_eoddata1__NewsListBySymbolResponse *_p = soap_new__eoddata1__NewsListBySymbolResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__NewsListBySymbolResponse::NewsListBySymbolResult = NewsListBySymbolResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__NewsListBySymbolResponse
#define soap_write__eoddata1__NewsListBySymbolResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:NewsListBySymbolResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsListBySymbolResponse * SOAP_FMAC4 soap_get__eoddata1__NewsListBySymbolResponse(struct soap*, _eoddata1__NewsListBySymbolResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__NewsListBySymbolResponse
#define soap_read__eoddata1__NewsListBySymbolResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__NewsListBySymbolResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__NewsListBySymbol
#define SOAP_TYPE_eoddata__eoddata1__NewsListBySymbol (63)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__NewsListBySymbol(struct soap*, const char*, int, const _eoddata1__NewsListBySymbol *, const char*);
SOAP_FMAC3 _eoddata1__NewsListBySymbol * SOAP_FMAC4 soap_in__eoddata1__NewsListBySymbol(struct soap*, const char*, _eoddata1__NewsListBySymbol *, const char*);
SOAP_FMAC1 _eoddata1__NewsListBySymbol * SOAP_FMAC2 soap_instantiate__eoddata1__NewsListBySymbol(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__NewsListBySymbol * soap_new__eoddata1__NewsListBySymbol(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__NewsListBySymbol(soap, n, NULL, NULL, NULL); }

inline _eoddata1__NewsListBySymbol * soap_new_req__eoddata1__NewsListBySymbol(
	struct soap *soap)
{	_eoddata1__NewsListBySymbol *_p = soap_new__eoddata1__NewsListBySymbol(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__NewsListBySymbol * soap_new_set__eoddata1__NewsListBySymbol(
	struct soap *soap,
	std::string *token,
	std::string *Exchange,
	std::string *symbol)
{	_eoddata1__NewsListBySymbol *_p = soap_new__eoddata1__NewsListBySymbol(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__NewsListBySymbol::token = token;
		_p->_eoddata1__NewsListBySymbol::Exchange = Exchange;
		_p->_eoddata1__NewsListBySymbol::symbol = symbol;
	}
	return _p;
}

#ifndef soap_write__eoddata1__NewsListBySymbol
#define soap_write__eoddata1__NewsListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:NewsListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsListBySymbol * SOAP_FMAC4 soap_get__eoddata1__NewsListBySymbol(struct soap*, _eoddata1__NewsListBySymbol *, const char*, const char*);

#ifndef soap_read__eoddata1__NewsListBySymbol
#define soap_read__eoddata1__NewsListBySymbol(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__NewsListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__NewsListResponse
#define SOAP_TYPE_eoddata__eoddata1__NewsListResponse (62)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__NewsListResponse(struct soap*, const char*, int, const _eoddata1__NewsListResponse *, const char*);
SOAP_FMAC3 _eoddata1__NewsListResponse * SOAP_FMAC4 soap_in__eoddata1__NewsListResponse(struct soap*, const char*, _eoddata1__NewsListResponse *, const char*);
SOAP_FMAC1 _eoddata1__NewsListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__NewsListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__NewsListResponse * soap_new__eoddata1__NewsListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__NewsListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__NewsListResponse * soap_new_req__eoddata1__NewsListResponse(
	struct soap *soap)
{	_eoddata1__NewsListResponse *_p = soap_new__eoddata1__NewsListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__NewsListResponse * soap_new_set__eoddata1__NewsListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *NewsListResult)
{	_eoddata1__NewsListResponse *_p = soap_new__eoddata1__NewsListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__NewsListResponse::NewsListResult = NewsListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__NewsListResponse
#define soap_write__eoddata1__NewsListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:NewsListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsListResponse * SOAP_FMAC4 soap_get__eoddata1__NewsListResponse(struct soap*, _eoddata1__NewsListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__NewsListResponse
#define soap_read__eoddata1__NewsListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__NewsListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__NewsList
#define SOAP_TYPE_eoddata__eoddata1__NewsList (61)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__NewsList(struct soap*, const char*, int, const _eoddata1__NewsList *, const char*);
SOAP_FMAC3 _eoddata1__NewsList * SOAP_FMAC4 soap_in__eoddata1__NewsList(struct soap*, const char*, _eoddata1__NewsList *, const char*);
SOAP_FMAC1 _eoddata1__NewsList * SOAP_FMAC2 soap_instantiate__eoddata1__NewsList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__NewsList * soap_new__eoddata1__NewsList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__NewsList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__NewsList * soap_new_req__eoddata1__NewsList(
	struct soap *soap)
{	_eoddata1__NewsList *_p = soap_new__eoddata1__NewsList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__NewsList * soap_new_set__eoddata1__NewsList(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__NewsList *_p = soap_new__eoddata1__NewsList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__NewsList::Token = Token;
		_p->_eoddata1__NewsList::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__NewsList
#define soap_write__eoddata1__NewsList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:NewsList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsList * SOAP_FMAC4 soap_get__eoddata1__NewsList(struct soap*, _eoddata1__NewsList *, const char*, const char*);

#ifndef soap_read__eoddata1__NewsList
#define soap_read__eoddata1__NewsList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__NewsList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteListResponse
#define SOAP_TYPE_eoddata__eoddata1__QuoteListResponse (60)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteListResponse(struct soap*, const char*, int, const _eoddata1__QuoteListResponse *, const char*);
SOAP_FMAC3 _eoddata1__QuoteListResponse * SOAP_FMAC4 soap_in__eoddata1__QuoteListResponse(struct soap*, const char*, _eoddata1__QuoteListResponse *, const char*);
SOAP_FMAC1 _eoddata1__QuoteListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteListResponse * soap_new__eoddata1__QuoteListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteListResponse * soap_new_req__eoddata1__QuoteListResponse(
	struct soap *soap)
{	_eoddata1__QuoteListResponse *_p = soap_new__eoddata1__QuoteListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteListResponse * soap_new_set__eoddata1__QuoteListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteListResult)
{	_eoddata1__QuoteListResponse *_p = soap_new__eoddata1__QuoteListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteListResponse::QuoteListResult = QuoteListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteListResponse
#define soap_write__eoddata1__QuoteListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListResponse * SOAP_FMAC4 soap_get__eoddata1__QuoteListResponse(struct soap*, _eoddata1__QuoteListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteListResponse
#define soap_read__eoddata1__QuoteListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteList
#define SOAP_TYPE_eoddata__eoddata1__QuoteList (59)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteList(struct soap*, const char*, int, const _eoddata1__QuoteList *, const char*);
SOAP_FMAC3 _eoddata1__QuoteList * SOAP_FMAC4 soap_in__eoddata1__QuoteList(struct soap*, const char*, _eoddata1__QuoteList *, const char*);
SOAP_FMAC1 _eoddata1__QuoteList * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteList * soap_new__eoddata1__QuoteList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteList * soap_new_req__eoddata1__QuoteList(
	struct soap *soap)
{	_eoddata1__QuoteList *_p = soap_new__eoddata1__QuoteList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteList * soap_new_set__eoddata1__QuoteList(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__QuoteList *_p = soap_new__eoddata1__QuoteList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteList::Token = Token;
		_p->_eoddata1__QuoteList::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteList
#define soap_write__eoddata1__QuoteList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteList * SOAP_FMAC4 soap_get__eoddata1__QuoteList(struct soap*, _eoddata1__QuoteList *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteList
#define soap_read__eoddata1__QuoteList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolGetResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolGetResponse (58)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolGetResponse(struct soap*, const char*, int, const _eoddata1__SymbolGetResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolGetResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolGetResponse(struct soap*, const char*, _eoddata1__SymbolGetResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolGetResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolGetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolGetResponse * soap_new__eoddata1__SymbolGetResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolGetResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolGetResponse * soap_new_req__eoddata1__SymbolGetResponse(
	struct soap *soap)
{	_eoddata1__SymbolGetResponse *_p = soap_new__eoddata1__SymbolGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolGetResponse * soap_new_set__eoddata1__SymbolGetResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolGetResult)
{	_eoddata1__SymbolGetResponse *_p = soap_new__eoddata1__SymbolGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolGetResponse::SymbolGetResult = SymbolGetResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolGetResponse
#define soap_write__eoddata1__SymbolGetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolGetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolGetResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolGetResponse(struct soap*, _eoddata1__SymbolGetResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolGetResponse
#define soap_read__eoddata1__SymbolGetResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolGetResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolGet
#define SOAP_TYPE_eoddata__eoddata1__SymbolGet (57)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolGet(struct soap*, const char*, int, const _eoddata1__SymbolGet *, const char*);
SOAP_FMAC3 _eoddata1__SymbolGet * SOAP_FMAC4 soap_in__eoddata1__SymbolGet(struct soap*, const char*, _eoddata1__SymbolGet *, const char*);
SOAP_FMAC1 _eoddata1__SymbolGet * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolGet(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolGet * soap_new__eoddata1__SymbolGet(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolGet(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolGet * soap_new_req__eoddata1__SymbolGet(
	struct soap *soap)
{	_eoddata1__SymbolGet *_p = soap_new__eoddata1__SymbolGet(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolGet * soap_new_set__eoddata1__SymbolGet(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol)
{	_eoddata1__SymbolGet *_p = soap_new__eoddata1__SymbolGet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolGet::Token = Token;
		_p->_eoddata1__SymbolGet::Exchange = Exchange;
		_p->_eoddata1__SymbolGet::Symbol = Symbol;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolGet
#define soap_write__eoddata1__SymbolGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolGet * SOAP_FMAC4 soap_get__eoddata1__SymbolGet(struct soap*, _eoddata1__SymbolGet *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolGet
#define soap_read__eoddata1__SymbolGet(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteList2Response
#define SOAP_TYPE_eoddata__eoddata1__QuoteList2Response (56)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteList2Response(struct soap*, const char*, int, const _eoddata1__QuoteList2Response *, const char*);
SOAP_FMAC3 _eoddata1__QuoteList2Response * SOAP_FMAC4 soap_in__eoddata1__QuoteList2Response(struct soap*, const char*, _eoddata1__QuoteList2Response *, const char*);
SOAP_FMAC1 _eoddata1__QuoteList2Response * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteList2Response(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteList2Response * soap_new__eoddata1__QuoteList2Response(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteList2Response(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteList2Response * soap_new_req__eoddata1__QuoteList2Response(
	struct soap *soap)
{	_eoddata1__QuoteList2Response *_p = soap_new__eoddata1__QuoteList2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteList2Response * soap_new_set__eoddata1__QuoteList2Response(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteList2Result)
{	_eoddata1__QuoteList2Response *_p = soap_new__eoddata1__QuoteList2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteList2Response::QuoteList2Result = QuoteList2Result;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteList2Response
#define soap_write__eoddata1__QuoteList2Response(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteList2Response", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteList2Response * SOAP_FMAC4 soap_get__eoddata1__QuoteList2Response(struct soap*, _eoddata1__QuoteList2Response *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteList2Response
#define soap_read__eoddata1__QuoteList2Response(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteList2Response(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteList2
#define SOAP_TYPE_eoddata__eoddata1__QuoteList2 (55)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteList2(struct soap*, const char*, int, const _eoddata1__QuoteList2 *, const char*);
SOAP_FMAC3 _eoddata1__QuoteList2 * SOAP_FMAC4 soap_in__eoddata1__QuoteList2(struct soap*, const char*, _eoddata1__QuoteList2 *, const char*);
SOAP_FMAC1 _eoddata1__QuoteList2 * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteList2(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteList2 * soap_new__eoddata1__QuoteList2(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteList2(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteList2 * soap_new_req__eoddata1__QuoteList2(
	struct soap *soap)
{	_eoddata1__QuoteList2 *_p = soap_new__eoddata1__QuoteList2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteList2 * soap_new_set__eoddata1__QuoteList2(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbols)
{	_eoddata1__QuoteList2 *_p = soap_new__eoddata1__QuoteList2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteList2::Token = Token;
		_p->_eoddata1__QuoteList2::Exchange = Exchange;
		_p->_eoddata1__QuoteList2::Symbols = Symbols;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteList2
#define soap_write__eoddata1__QuoteList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteList2 * SOAP_FMAC4 soap_get__eoddata1__QuoteList2(struct soap*, _eoddata1__QuoteList2 *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteList2
#define soap_read__eoddata1__QuoteList2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteGetResponse
#define SOAP_TYPE_eoddata__eoddata1__QuoteGetResponse (54)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteGetResponse(struct soap*, const char*, int, const _eoddata1__QuoteGetResponse *, const char*);
SOAP_FMAC3 _eoddata1__QuoteGetResponse * SOAP_FMAC4 soap_in__eoddata1__QuoteGetResponse(struct soap*, const char*, _eoddata1__QuoteGetResponse *, const char*);
SOAP_FMAC1 _eoddata1__QuoteGetResponse * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteGetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteGetResponse * soap_new__eoddata1__QuoteGetResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteGetResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteGetResponse * soap_new_req__eoddata1__QuoteGetResponse(
	struct soap *soap)
{	_eoddata1__QuoteGetResponse *_p = soap_new__eoddata1__QuoteGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteGetResponse * soap_new_set__eoddata1__QuoteGetResponse(
	struct soap *soap,
	eoddata1__RESPONSE *QuoteGetResult)
{	_eoddata1__QuoteGetResponse *_p = soap_new__eoddata1__QuoteGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteGetResponse::QuoteGetResult = QuoteGetResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteGetResponse
#define soap_write__eoddata1__QuoteGetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteGetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteGetResponse * SOAP_FMAC4 soap_get__eoddata1__QuoteGetResponse(struct soap*, _eoddata1__QuoteGetResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteGetResponse
#define soap_read__eoddata1__QuoteGetResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteGetResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__QuoteGet
#define SOAP_TYPE_eoddata__eoddata1__QuoteGet (53)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__QuoteGet(struct soap*, const char*, int, const _eoddata1__QuoteGet *, const char*);
SOAP_FMAC3 _eoddata1__QuoteGet * SOAP_FMAC4 soap_in__eoddata1__QuoteGet(struct soap*, const char*, _eoddata1__QuoteGet *, const char*);
SOAP_FMAC1 _eoddata1__QuoteGet * SOAP_FMAC2 soap_instantiate__eoddata1__QuoteGet(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__QuoteGet * soap_new__eoddata1__QuoteGet(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__QuoteGet(soap, n, NULL, NULL, NULL); }

inline _eoddata1__QuoteGet * soap_new_req__eoddata1__QuoteGet(
	struct soap *soap)
{	_eoddata1__QuoteGet *_p = soap_new__eoddata1__QuoteGet(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__QuoteGet * soap_new_set__eoddata1__QuoteGet(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange,
	std::string *Symbol)
{	_eoddata1__QuoteGet *_p = soap_new__eoddata1__QuoteGet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__QuoteGet::Token = Token;
		_p->_eoddata1__QuoteGet::Exchange = Exchange;
		_p->_eoddata1__QuoteGet::Symbol = Symbol;
	}
	return _p;
}

#ifndef soap_write__eoddata1__QuoteGet
#define soap_write__eoddata1__QuoteGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QuoteGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteGet * SOAP_FMAC4 soap_get__eoddata1__QuoteGet(struct soap*, _eoddata1__QuoteGet *, const char*, const char*);

#ifndef soap_read__eoddata1__QuoteGet
#define soap_read__eoddata1__QuoteGet(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__QuoteGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolList2Response
#define SOAP_TYPE_eoddata__eoddata1__SymbolList2Response (52)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolList2Response(struct soap*, const char*, int, const _eoddata1__SymbolList2Response *, const char*);
SOAP_FMAC3 _eoddata1__SymbolList2Response * SOAP_FMAC4 soap_in__eoddata1__SymbolList2Response(struct soap*, const char*, _eoddata1__SymbolList2Response *, const char*);
SOAP_FMAC1 _eoddata1__SymbolList2Response * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolList2Response(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolList2Response * soap_new__eoddata1__SymbolList2Response(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolList2Response(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolList2Response * soap_new_req__eoddata1__SymbolList2Response(
	struct soap *soap)
{	_eoddata1__SymbolList2Response *_p = soap_new__eoddata1__SymbolList2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolList2Response * soap_new_set__eoddata1__SymbolList2Response(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolList2Result)
{	_eoddata1__SymbolList2Response *_p = soap_new__eoddata1__SymbolList2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolList2Response::SymbolList2Result = SymbolList2Result;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolList2Response
#define soap_write__eoddata1__SymbolList2Response(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolList2Response", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolList2Response * SOAP_FMAC4 soap_get__eoddata1__SymbolList2Response(struct soap*, _eoddata1__SymbolList2Response *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolList2Response
#define soap_read__eoddata1__SymbolList2Response(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolList2Response(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolList2
#define SOAP_TYPE_eoddata__eoddata1__SymbolList2 (51)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolList2(struct soap*, const char*, int, const _eoddata1__SymbolList2 *, const char*);
SOAP_FMAC3 _eoddata1__SymbolList2 * SOAP_FMAC4 soap_in__eoddata1__SymbolList2(struct soap*, const char*, _eoddata1__SymbolList2 *, const char*);
SOAP_FMAC1 _eoddata1__SymbolList2 * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolList2(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolList2 * soap_new__eoddata1__SymbolList2(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolList2(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolList2 * soap_new_req__eoddata1__SymbolList2(
	struct soap *soap)
{	_eoddata1__SymbolList2 *_p = soap_new__eoddata1__SymbolList2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolList2 * soap_new_set__eoddata1__SymbolList2(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__SymbolList2 *_p = soap_new__eoddata1__SymbolList2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolList2::Token = Token;
		_p->_eoddata1__SymbolList2::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolList2
#define soap_write__eoddata1__SymbolList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolList2 * SOAP_FMAC4 soap_get__eoddata1__SymbolList2(struct soap*, _eoddata1__SymbolList2 *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolList2
#define soap_read__eoddata1__SymbolList2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolListResponse
#define SOAP_TYPE_eoddata__eoddata1__SymbolListResponse (50)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolListResponse(struct soap*, const char*, int, const _eoddata1__SymbolListResponse *, const char*);
SOAP_FMAC3 _eoddata1__SymbolListResponse * SOAP_FMAC4 soap_in__eoddata1__SymbolListResponse(struct soap*, const char*, _eoddata1__SymbolListResponse *, const char*);
SOAP_FMAC1 _eoddata1__SymbolListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolListResponse * soap_new__eoddata1__SymbolListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolListResponse * soap_new_req__eoddata1__SymbolListResponse(
	struct soap *soap)
{	_eoddata1__SymbolListResponse *_p = soap_new__eoddata1__SymbolListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolListResponse * soap_new_set__eoddata1__SymbolListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *SymbolListResult)
{	_eoddata1__SymbolListResponse *_p = soap_new__eoddata1__SymbolListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolListResponse::SymbolListResult = SymbolListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolListResponse
#define soap_write__eoddata1__SymbolListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolListResponse * SOAP_FMAC4 soap_get__eoddata1__SymbolListResponse(struct soap*, _eoddata1__SymbolListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolListResponse
#define soap_read__eoddata1__SymbolListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__SymbolList
#define SOAP_TYPE_eoddata__eoddata1__SymbolList (49)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__SymbolList(struct soap*, const char*, int, const _eoddata1__SymbolList *, const char*);
SOAP_FMAC3 _eoddata1__SymbolList * SOAP_FMAC4 soap_in__eoddata1__SymbolList(struct soap*, const char*, _eoddata1__SymbolList *, const char*);
SOAP_FMAC1 _eoddata1__SymbolList * SOAP_FMAC2 soap_instantiate__eoddata1__SymbolList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__SymbolList * soap_new__eoddata1__SymbolList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__SymbolList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__SymbolList * soap_new_req__eoddata1__SymbolList(
	struct soap *soap)
{	_eoddata1__SymbolList *_p = soap_new__eoddata1__SymbolList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__SymbolList * soap_new_set__eoddata1__SymbolList(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__SymbolList *_p = soap_new__eoddata1__SymbolList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__SymbolList::Token = Token;
		_p->_eoddata1__SymbolList::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__SymbolList
#define soap_write__eoddata1__SymbolList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SymbolList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolList * SOAP_FMAC4 soap_get__eoddata1__SymbolList(struct soap*, _eoddata1__SymbolList *, const char*, const char*);

#ifndef soap_read__eoddata1__SymbolList
#define soap_read__eoddata1__SymbolList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__SymbolList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeGetResponse
#define SOAP_TYPE_eoddata__eoddata1__ExchangeGetResponse (48)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeGetResponse(struct soap*, const char*, int, const _eoddata1__ExchangeGetResponse *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeGetResponse * SOAP_FMAC4 soap_in__eoddata1__ExchangeGetResponse(struct soap*, const char*, _eoddata1__ExchangeGetResponse *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeGetResponse * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeGetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeGetResponse * soap_new__eoddata1__ExchangeGetResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeGetResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeGetResponse * soap_new_req__eoddata1__ExchangeGetResponse(
	struct soap *soap)
{	_eoddata1__ExchangeGetResponse *_p = soap_new__eoddata1__ExchangeGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeGetResponse * soap_new_set__eoddata1__ExchangeGetResponse(
	struct soap *soap,
	eoddata1__RESPONSE *ExchangeGetResult)
{	_eoddata1__ExchangeGetResponse *_p = soap_new__eoddata1__ExchangeGetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeGetResponse::ExchangeGetResult = ExchangeGetResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeGetResponse
#define soap_write__eoddata1__ExchangeGetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeGetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeGetResponse * SOAP_FMAC4 soap_get__eoddata1__ExchangeGetResponse(struct soap*, _eoddata1__ExchangeGetResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeGetResponse
#define soap_read__eoddata1__ExchangeGetResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeGetResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeGet
#define SOAP_TYPE_eoddata__eoddata1__ExchangeGet (47)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeGet(struct soap*, const char*, int, const _eoddata1__ExchangeGet *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeGet * SOAP_FMAC4 soap_in__eoddata1__ExchangeGet(struct soap*, const char*, _eoddata1__ExchangeGet *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeGet * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeGet(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeGet * soap_new__eoddata1__ExchangeGet(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeGet(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeGet * soap_new_req__eoddata1__ExchangeGet(
	struct soap *soap)
{	_eoddata1__ExchangeGet *_p = soap_new__eoddata1__ExchangeGet(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeGet * soap_new_set__eoddata1__ExchangeGet(
	struct soap *soap,
	std::string *Token,
	std::string *Exchange)
{	_eoddata1__ExchangeGet *_p = soap_new__eoddata1__ExchangeGet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeGet::Token = Token;
		_p->_eoddata1__ExchangeGet::Exchange = Exchange;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeGet
#define soap_write__eoddata1__ExchangeGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeGet * SOAP_FMAC4 soap_get__eoddata1__ExchangeGet(struct soap*, _eoddata1__ExchangeGet *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeGet
#define soap_read__eoddata1__ExchangeGet(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeListResponse
#define SOAP_TYPE_eoddata__eoddata1__ExchangeListResponse (46)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeListResponse(struct soap*, const char*, int, const _eoddata1__ExchangeListResponse *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeListResponse * SOAP_FMAC4 soap_in__eoddata1__ExchangeListResponse(struct soap*, const char*, _eoddata1__ExchangeListResponse *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeListResponse * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeListResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeListResponse * soap_new__eoddata1__ExchangeListResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeListResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeListResponse * soap_new_req__eoddata1__ExchangeListResponse(
	struct soap *soap)
{	_eoddata1__ExchangeListResponse *_p = soap_new__eoddata1__ExchangeListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeListResponse * soap_new_set__eoddata1__ExchangeListResponse(
	struct soap *soap,
	eoddata1__RESPONSE *ExchangeListResult)
{	_eoddata1__ExchangeListResponse *_p = soap_new__eoddata1__ExchangeListResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeListResponse::ExchangeListResult = ExchangeListResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeListResponse
#define soap_write__eoddata1__ExchangeListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeListResponse * SOAP_FMAC4 soap_get__eoddata1__ExchangeListResponse(struct soap*, _eoddata1__ExchangeListResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeListResponse
#define soap_read__eoddata1__ExchangeListResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeListResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__ExchangeList
#define SOAP_TYPE_eoddata__eoddata1__ExchangeList (45)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__ExchangeList(struct soap*, const char*, int, const _eoddata1__ExchangeList *, const char*);
SOAP_FMAC3 _eoddata1__ExchangeList * SOAP_FMAC4 soap_in__eoddata1__ExchangeList(struct soap*, const char*, _eoddata1__ExchangeList *, const char*);
SOAP_FMAC1 _eoddata1__ExchangeList * SOAP_FMAC2 soap_instantiate__eoddata1__ExchangeList(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__ExchangeList * soap_new__eoddata1__ExchangeList(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__ExchangeList(soap, n, NULL, NULL, NULL); }

inline _eoddata1__ExchangeList * soap_new_req__eoddata1__ExchangeList(
	struct soap *soap)
{	_eoddata1__ExchangeList *_p = soap_new__eoddata1__ExchangeList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__ExchangeList * soap_new_set__eoddata1__ExchangeList(
	struct soap *soap,
	std::string *Token)
{	_eoddata1__ExchangeList *_p = soap_new__eoddata1__ExchangeList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__ExchangeList::Token = Token;
	}
	return _p;
}

#ifndef soap_write__eoddata1__ExchangeList
#define soap_write__eoddata1__ExchangeList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ExchangeList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeList * SOAP_FMAC4 soap_get__eoddata1__ExchangeList(struct soap*, _eoddata1__ExchangeList *, const char*, const char*);

#ifndef soap_read__eoddata1__ExchangeList
#define soap_read__eoddata1__ExchangeList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__ExchangeList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__MembershipResponse
#define SOAP_TYPE_eoddata__eoddata1__MembershipResponse (44)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__MembershipResponse(struct soap*, const char*, int, const _eoddata1__MembershipResponse *, const char*);
SOAP_FMAC3 _eoddata1__MembershipResponse * SOAP_FMAC4 soap_in__eoddata1__MembershipResponse(struct soap*, const char*, _eoddata1__MembershipResponse *, const char*);
SOAP_FMAC1 _eoddata1__MembershipResponse * SOAP_FMAC2 soap_instantiate__eoddata1__MembershipResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__MembershipResponse * soap_new__eoddata1__MembershipResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__MembershipResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__MembershipResponse * soap_new_req__eoddata1__MembershipResponse(
	struct soap *soap)
{	_eoddata1__MembershipResponse *_p = soap_new__eoddata1__MembershipResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__MembershipResponse * soap_new_set__eoddata1__MembershipResponse(
	struct soap *soap,
	eoddata1__RESPONSE *MembershipResult)
{	_eoddata1__MembershipResponse *_p = soap_new__eoddata1__MembershipResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__MembershipResponse::MembershipResult = MembershipResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__MembershipResponse
#define soap_write__eoddata1__MembershipResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:MembershipResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__MembershipResponse * SOAP_FMAC4 soap_get__eoddata1__MembershipResponse(struct soap*, _eoddata1__MembershipResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__MembershipResponse
#define soap_read__eoddata1__MembershipResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__MembershipResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Membership
#define SOAP_TYPE_eoddata__eoddata1__Membership (43)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Membership(struct soap*, const char*, int, const _eoddata1__Membership *, const char*);
SOAP_FMAC3 _eoddata1__Membership * SOAP_FMAC4 soap_in__eoddata1__Membership(struct soap*, const char*, _eoddata1__Membership *, const char*);
SOAP_FMAC1 _eoddata1__Membership * SOAP_FMAC2 soap_instantiate__eoddata1__Membership(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Membership * soap_new__eoddata1__Membership(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Membership(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Membership * soap_new_req__eoddata1__Membership(
	struct soap *soap)
{	_eoddata1__Membership *_p = soap_new__eoddata1__Membership(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Membership * soap_new_set__eoddata1__Membership(
	struct soap *soap,
	std::string *Token)
{	_eoddata1__Membership *_p = soap_new__eoddata1__Membership(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Membership::Token = Token;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Membership
#define soap_write__eoddata1__Membership(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Membership", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Membership * SOAP_FMAC4 soap_get__eoddata1__Membership(struct soap*, _eoddata1__Membership *, const char*, const char*);

#ifndef soap_read__eoddata1__Membership
#define soap_read__eoddata1__Membership(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Membership(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Login2Response
#define SOAP_TYPE_eoddata__eoddata1__Login2Response (42)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Login2Response(struct soap*, const char*, int, const _eoddata1__Login2Response *, const char*);
SOAP_FMAC3 _eoddata1__Login2Response * SOAP_FMAC4 soap_in__eoddata1__Login2Response(struct soap*, const char*, _eoddata1__Login2Response *, const char*);
SOAP_FMAC1 _eoddata1__Login2Response * SOAP_FMAC2 soap_instantiate__eoddata1__Login2Response(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Login2Response * soap_new__eoddata1__Login2Response(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Login2Response(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Login2Response * soap_new_req__eoddata1__Login2Response(
	struct soap *soap)
{	_eoddata1__Login2Response *_p = soap_new__eoddata1__Login2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Login2Response * soap_new_set__eoddata1__Login2Response(
	struct soap *soap,
	eoddata1__LOGINRESPONSE *Login2Result)
{	_eoddata1__Login2Response *_p = soap_new__eoddata1__Login2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Login2Response::Login2Result = Login2Result;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Login2Response
#define soap_write__eoddata1__Login2Response(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Login2Response", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Login2Response * SOAP_FMAC4 soap_get__eoddata1__Login2Response(struct soap*, _eoddata1__Login2Response *, const char*, const char*);

#ifndef soap_read__eoddata1__Login2Response
#define soap_read__eoddata1__Login2Response(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Login2Response(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Login2
#define SOAP_TYPE_eoddata__eoddata1__Login2 (41)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Login2(struct soap*, const char*, int, const _eoddata1__Login2 *, const char*);
SOAP_FMAC3 _eoddata1__Login2 * SOAP_FMAC4 soap_in__eoddata1__Login2(struct soap*, const char*, _eoddata1__Login2 *, const char*);
SOAP_FMAC1 _eoddata1__Login2 * SOAP_FMAC2 soap_instantiate__eoddata1__Login2(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Login2 * soap_new__eoddata1__Login2(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Login2(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Login2 * soap_new_req__eoddata1__Login2(
	struct soap *soap)
{	_eoddata1__Login2 *_p = soap_new__eoddata1__Login2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Login2 * soap_new_set__eoddata1__Login2(
	struct soap *soap,
	std::string *Username,
	std::string *Password,
	std::string *Version)
{	_eoddata1__Login2 *_p = soap_new__eoddata1__Login2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Login2::Username = Username;
		_p->_eoddata1__Login2::Password = Password;
		_p->_eoddata1__Login2::Version = Version;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Login2
#define soap_write__eoddata1__Login2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Login2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Login2 * SOAP_FMAC4 soap_get__eoddata1__Login2(struct soap*, _eoddata1__Login2 *, const char*, const char*);

#ifndef soap_read__eoddata1__Login2
#define soap_read__eoddata1__Login2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Login2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__LoginResponse
#define SOAP_TYPE_eoddata__eoddata1__LoginResponse (40)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__LoginResponse(struct soap*, const char*, int, const _eoddata1__LoginResponse *, const char*);
SOAP_FMAC3 _eoddata1__LoginResponse * SOAP_FMAC4 soap_in__eoddata1__LoginResponse(struct soap*, const char*, _eoddata1__LoginResponse *, const char*);
SOAP_FMAC1 _eoddata1__LoginResponse * SOAP_FMAC2 soap_instantiate__eoddata1__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__LoginResponse * soap_new__eoddata1__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _eoddata1__LoginResponse * soap_new_req__eoddata1__LoginResponse(
	struct soap *soap)
{	_eoddata1__LoginResponse *_p = soap_new__eoddata1__LoginResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__LoginResponse * soap_new_set__eoddata1__LoginResponse(
	struct soap *soap,
	eoddata1__LOGINRESPONSE *LoginResult)
{	_eoddata1__LoginResponse *_p = soap_new__eoddata1__LoginResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__LoginResponse::LoginResult = LoginResult;
	}
	return _p;
}

#ifndef soap_write__eoddata1__LoginResponse
#define soap_write__eoddata1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__LoginResponse * SOAP_FMAC4 soap_get__eoddata1__LoginResponse(struct soap*, _eoddata1__LoginResponse *, const char*, const char*);

#ifndef soap_read__eoddata1__LoginResponse
#define soap_read__eoddata1__LoginResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__LoginResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__eoddata1__Login
#define SOAP_TYPE_eoddata__eoddata1__Login (39)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__eoddata1__Login(struct soap*, const char*, int, const _eoddata1__Login *, const char*);
SOAP_FMAC3 _eoddata1__Login * SOAP_FMAC4 soap_in__eoddata1__Login(struct soap*, const char*, _eoddata1__Login *, const char*);
SOAP_FMAC1 _eoddata1__Login * SOAP_FMAC2 soap_instantiate__eoddata1__Login(struct soap*, int, const char*, const char*, size_t*);

inline _eoddata1__Login * soap_new__eoddata1__Login(struct soap *soap, int n = -1) { return soap_instantiate__eoddata1__Login(soap, n, NULL, NULL, NULL); }

inline _eoddata1__Login * soap_new_req__eoddata1__Login(
	struct soap *soap)
{	_eoddata1__Login *_p = soap_new__eoddata1__Login(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _eoddata1__Login * soap_new_set__eoddata1__Login(
	struct soap *soap,
	std::string *Username,
	std::string *Password)
{	_eoddata1__Login *_p = soap_new__eoddata1__Login(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_eoddata1__Login::Username = Username;
		_p->_eoddata1__Login::Password = Password;
	}
	return _p;
}

#ifndef soap_write__eoddata1__Login
#define soap_write__eoddata1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Login * SOAP_FMAC4 soap_get__eoddata1__Login(struct soap*, _eoddata1__Login *, const char*, const char*);

#ifndef soap_read__eoddata1__Login
#define soap_read__eoddata1__Login(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__eoddata1__Login(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__DATAFORMAT_USCORECOLUMN
#define SOAP_TYPE_eoddata_eoddata1__DATAFORMAT_USCORECOLUMN (38)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char*, int, const eoddata1__DATAFORMAT_USCORECOLUMN *, const char*);
SOAP_FMAC3 eoddata1__DATAFORMAT_USCORECOLUMN * SOAP_FMAC4 soap_in_eoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char*, eoddata1__DATAFORMAT_USCORECOLUMN *, const char*);
SOAP_FMAC1 eoddata1__DATAFORMAT_USCORECOLUMN * SOAP_FMAC2 soap_instantiate_eoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__DATAFORMAT_USCORECOLUMN * soap_new_eoddata1__DATAFORMAT_USCORECOLUMN(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__DATAFORMAT_USCORECOLUMN(soap, n, NULL, NULL, NULL); }

inline eoddata1__DATAFORMAT_USCORECOLUMN * soap_new_req_eoddata1__DATAFORMAT_USCORECOLUMN(
	struct soap *soap,
	int SortOrder,
	int ColumnTypeId)
{	eoddata1__DATAFORMAT_USCORECOLUMN *_p = soap_new_eoddata1__DATAFORMAT_USCORECOLUMN(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::SortOrder = SortOrder;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::ColumnTypeId = ColumnTypeId;
	}
	return _p;
}

inline eoddata1__DATAFORMAT_USCORECOLUMN * soap_new_set_eoddata1__DATAFORMAT_USCORECOLUMN(
	struct soap *soap,
	int SortOrder,
	std::string *Code,
	std::string *DataFormat,
	std::string *ColumnCode,
	std::string *ColumnName,
	int ColumnTypeId,
	std::string *ColumnType,
	std::string *Header)
{	eoddata1__DATAFORMAT_USCORECOLUMN *_p = soap_new_eoddata1__DATAFORMAT_USCORECOLUMN(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::SortOrder = SortOrder;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::Code = Code;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::DataFormat = DataFormat;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::ColumnCode = ColumnCode;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::ColumnName = ColumnName;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::ColumnTypeId = ColumnTypeId;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::ColumnType = ColumnType;
		_p->eoddata1__DATAFORMAT_USCORECOLUMN::Header = Header;
	}
	return _p;
}

#ifndef soap_write_eoddata1__DATAFORMAT_USCORECOLUMN
#define soap_write_eoddata1__DATAFORMAT_USCORECOLUMN(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DATAFORMAT_COLUMN", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__DATAFORMAT_USCORECOLUMN * SOAP_FMAC4 soap_get_eoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__DATAFORMAT_USCORECOLUMN *, const char*, const char*);

#ifndef soap_read_eoddata1__DATAFORMAT_USCORECOLUMN
#define soap_read_eoddata1__DATAFORMAT_USCORECOLUMN(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__DATAFORMAT_USCORECOLUMN(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN (37)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, const char*, int, const eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * SOAP_FMAC4 soap_in_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, const char*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * soap_new_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * soap_new_req_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(
	struct soap *soap)
{	eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *_p = soap_new_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * soap_new_set_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(
	struct soap *soap,
	const std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> & DATAFORMAT_USCORECOLUMN)
{	eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *_p = soap_new_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN::DATAFORMAT_USCORECOLUMN = DATAFORMAT_USCORECOLUMN;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define soap_write_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfDATAFORMAT_COLUMN", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN * SOAP_FMAC4 soap_get_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define soap_read_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__DATAFORMAT
#define SOAP_TYPE_eoddata_eoddata1__DATAFORMAT (36)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__DATAFORMAT(struct soap*, const char*, int, const eoddata1__DATAFORMAT *, const char*);
SOAP_FMAC3 eoddata1__DATAFORMAT * SOAP_FMAC4 soap_in_eoddata1__DATAFORMAT(struct soap*, const char*, eoddata1__DATAFORMAT *, const char*);
SOAP_FMAC1 eoddata1__DATAFORMAT * SOAP_FMAC2 soap_instantiate_eoddata1__DATAFORMAT(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__DATAFORMAT * soap_new_eoddata1__DATAFORMAT(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__DATAFORMAT(soap, n, NULL, NULL, NULL); }

inline eoddata1__DATAFORMAT * soap_new_req_eoddata1__DATAFORMAT(
	struct soap *soap,
	bool IncludeSuffix,
	bool TabColumnSeperator,
	bool FilenameExchangeCode,
	bool FilenameDate,
	bool IncludeHeaderRow)
{	eoddata1__DATAFORMAT *_p = soap_new_eoddata1__DATAFORMAT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__DATAFORMAT::IncludeSuffix = IncludeSuffix;
		_p->eoddata1__DATAFORMAT::TabColumnSeperator = TabColumnSeperator;
		_p->eoddata1__DATAFORMAT::FilenameExchangeCode = FilenameExchangeCode;
		_p->eoddata1__DATAFORMAT::FilenameDate = FilenameDate;
		_p->eoddata1__DATAFORMAT::IncludeHeaderRow = IncludeHeaderRow;
	}
	return _p;
}

inline eoddata1__DATAFORMAT * soap_new_set_eoddata1__DATAFORMAT(
	struct soap *soap,
	eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *COLUMNS,
	std::string *Code,
	std::string *Name,
	std::string *Header,
	std::string *DateFormat,
	std::string *Extension,
	bool IncludeSuffix,
	bool TabColumnSeperator,
	std::string *ColumnSeperator,
	std::string *TextQualifier,
	std::string *FilenamePrefix,
	bool FilenameExchangeCode,
	bool FilenameDate,
	bool IncludeHeaderRow,
	std::string *HourFormat,
	std::string *DateTimeSeperator,
	std::string *ExchangeFilenameFormatDate,
	std::string *ExchangeFilenameFormatDateRange,
	std::string *SymbolFilenameFormatDate,
	std::string *SymbolFilenameFormatDateRange)
{	eoddata1__DATAFORMAT *_p = soap_new_eoddata1__DATAFORMAT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__DATAFORMAT::COLUMNS = COLUMNS;
		_p->eoddata1__DATAFORMAT::Code = Code;
		_p->eoddata1__DATAFORMAT::Name = Name;
		_p->eoddata1__DATAFORMAT::Header = Header;
		_p->eoddata1__DATAFORMAT::DateFormat = DateFormat;
		_p->eoddata1__DATAFORMAT::Extension = Extension;
		_p->eoddata1__DATAFORMAT::IncludeSuffix = IncludeSuffix;
		_p->eoddata1__DATAFORMAT::TabColumnSeperator = TabColumnSeperator;
		_p->eoddata1__DATAFORMAT::ColumnSeperator = ColumnSeperator;
		_p->eoddata1__DATAFORMAT::TextQualifier = TextQualifier;
		_p->eoddata1__DATAFORMAT::FilenamePrefix = FilenamePrefix;
		_p->eoddata1__DATAFORMAT::FilenameExchangeCode = FilenameExchangeCode;
		_p->eoddata1__DATAFORMAT::FilenameDate = FilenameDate;
		_p->eoddata1__DATAFORMAT::IncludeHeaderRow = IncludeHeaderRow;
		_p->eoddata1__DATAFORMAT::HourFormat = HourFormat;
		_p->eoddata1__DATAFORMAT::DateTimeSeperator = DateTimeSeperator;
		_p->eoddata1__DATAFORMAT::ExchangeFilenameFormatDate = ExchangeFilenameFormatDate;
		_p->eoddata1__DATAFORMAT::ExchangeFilenameFormatDateRange = ExchangeFilenameFormatDateRange;
		_p->eoddata1__DATAFORMAT::SymbolFilenameFormatDate = SymbolFilenameFormatDate;
		_p->eoddata1__DATAFORMAT::SymbolFilenameFormatDateRange = SymbolFilenameFormatDateRange;
	}
	return _p;
}

#ifndef soap_write_eoddata1__DATAFORMAT
#define soap_write_eoddata1__DATAFORMAT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:DATAFORMAT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__DATAFORMAT * SOAP_FMAC4 soap_get_eoddata1__DATAFORMAT(struct soap*, eoddata1__DATAFORMAT *, const char*, const char*);

#ifndef soap_read_eoddata1__DATAFORMAT
#define soap_read_eoddata1__DATAFORMAT(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__DATAFORMAT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfDATAFORMAT
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfDATAFORMAT (35)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfDATAFORMAT(struct soap*, const char*, int, const eoddata1__ArrayOfDATAFORMAT *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT * SOAP_FMAC4 soap_in_eoddata1__ArrayOfDATAFORMAT(struct soap*, const char*, eoddata1__ArrayOfDATAFORMAT *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfDATAFORMAT * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfDATAFORMAT(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfDATAFORMAT * soap_new_eoddata1__ArrayOfDATAFORMAT(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfDATAFORMAT(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfDATAFORMAT * soap_new_req_eoddata1__ArrayOfDATAFORMAT(
	struct soap *soap)
{	eoddata1__ArrayOfDATAFORMAT *_p = soap_new_eoddata1__ArrayOfDATAFORMAT(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfDATAFORMAT * soap_new_set_eoddata1__ArrayOfDATAFORMAT(
	struct soap *soap,
	const std::vector<eoddata1__DATAFORMAT *> & DATAFORMAT)
{	eoddata1__ArrayOfDATAFORMAT *_p = soap_new_eoddata1__ArrayOfDATAFORMAT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfDATAFORMAT::DATAFORMAT = DATAFORMAT;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfDATAFORMAT
#define soap_write_eoddata1__ArrayOfDATAFORMAT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfDATAFORMAT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT * SOAP_FMAC4 soap_get_eoddata1__ArrayOfDATAFORMAT(struct soap*, eoddata1__ArrayOfDATAFORMAT *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfDATAFORMAT
#define soap_read_eoddata1__ArrayOfDATAFORMAT(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfDATAFORMAT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__NEWS
#define SOAP_TYPE_eoddata_eoddata1__NEWS (34)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__NEWS(struct soap*, const char*, int, const eoddata1__NEWS *, const char*);
SOAP_FMAC3 eoddata1__NEWS * SOAP_FMAC4 soap_in_eoddata1__NEWS(struct soap*, const char*, eoddata1__NEWS *, const char*);
SOAP_FMAC1 eoddata1__NEWS * SOAP_FMAC2 soap_instantiate_eoddata1__NEWS(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__NEWS * soap_new_eoddata1__NEWS(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__NEWS(soap, n, NULL, NULL, NULL); }

inline eoddata1__NEWS * soap_new_req_eoddata1__NEWS(
	struct soap *soap,
	LONG64 Id,
	time_t DateTime,
	int Views)
{	eoddata1__NEWS *_p = soap_new_eoddata1__NEWS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__NEWS::Id = Id;
		_p->eoddata1__NEWS::DateTime = DateTime;
		_p->eoddata1__NEWS::Views = Views;
	}
	return _p;
}

inline eoddata1__NEWS * soap_new_set_eoddata1__NEWS(
	struct soap *soap,
	std::string *Exchange,
	std::string *Symbol,
	LONG64 Id,
	std::string *SourceKey,
	time_t DateTime,
	std::string *Headline,
	std::string *Introduction,
	std::string *Story,
	std::string *Caption,
	int Views)
{	eoddata1__NEWS *_p = soap_new_eoddata1__NEWS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__NEWS::Exchange = Exchange;
		_p->eoddata1__NEWS::Symbol = Symbol;
		_p->eoddata1__NEWS::Id = Id;
		_p->eoddata1__NEWS::SourceKey = SourceKey;
		_p->eoddata1__NEWS::DateTime = DateTime;
		_p->eoddata1__NEWS::Headline = Headline;
		_p->eoddata1__NEWS::Introduction = Introduction;
		_p->eoddata1__NEWS::Story = Story;
		_p->eoddata1__NEWS::Caption = Caption;
		_p->eoddata1__NEWS::Views = Views;
	}
	return _p;
}

#ifndef soap_write_eoddata1__NEWS
#define soap_write_eoddata1__NEWS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:NEWS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__NEWS * SOAP_FMAC4 soap_get_eoddata1__NEWS(struct soap*, eoddata1__NEWS *, const char*, const char*);

#ifndef soap_read_eoddata1__NEWS
#define soap_read_eoddata1__NEWS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__NEWS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfNEWS
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfNEWS (33)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfNEWS(struct soap*, const char*, int, const eoddata1__ArrayOfNEWS *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfNEWS * SOAP_FMAC4 soap_in_eoddata1__ArrayOfNEWS(struct soap*, const char*, eoddata1__ArrayOfNEWS *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfNEWS * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfNEWS(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfNEWS * soap_new_eoddata1__ArrayOfNEWS(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfNEWS(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfNEWS * soap_new_req_eoddata1__ArrayOfNEWS(
	struct soap *soap)
{	eoddata1__ArrayOfNEWS *_p = soap_new_eoddata1__ArrayOfNEWS(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfNEWS * soap_new_set_eoddata1__ArrayOfNEWS(
	struct soap *soap,
	const std::vector<eoddata1__NEWS *> & NEWS)
{	eoddata1__ArrayOfNEWS *_p = soap_new_eoddata1__ArrayOfNEWS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfNEWS::NEWS = NEWS;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfNEWS
#define soap_write_eoddata1__ArrayOfNEWS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfNEWS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfNEWS * SOAP_FMAC4 soap_get_eoddata1__ArrayOfNEWS(struct soap*, eoddata1__ArrayOfNEWS *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfNEWS
#define soap_read_eoddata1__ArrayOfNEWS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfNEWS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__SYMBOLCHANGE
#define SOAP_TYPE_eoddata_eoddata1__SYMBOLCHANGE (32)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__SYMBOLCHANGE(struct soap*, const char*, int, const eoddata1__SYMBOLCHANGE *, const char*);
SOAP_FMAC3 eoddata1__SYMBOLCHANGE * SOAP_FMAC4 soap_in_eoddata1__SYMBOLCHANGE(struct soap*, const char*, eoddata1__SYMBOLCHANGE *, const char*);
SOAP_FMAC1 eoddata1__SYMBOLCHANGE * SOAP_FMAC2 soap_instantiate_eoddata1__SYMBOLCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__SYMBOLCHANGE * soap_new_eoddata1__SYMBOLCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__SYMBOLCHANGE(soap, n, NULL, NULL, NULL); }

inline eoddata1__SYMBOLCHANGE * soap_new_req_eoddata1__SYMBOLCHANGE(
	struct soap *soap,
	time_t DateTime)
{	eoddata1__SYMBOLCHANGE *_p = soap_new_eoddata1__SYMBOLCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SYMBOLCHANGE::DateTime = DateTime;
	}
	return _p;
}

inline eoddata1__SYMBOLCHANGE * soap_new_set_eoddata1__SYMBOLCHANGE(
	struct soap *soap,
	time_t DateTime,
	std::string *OldSymbol,
	std::string *NewSymbol,
	std::string *ExchangeCode,
	std::string *NewExchangeCode)
{	eoddata1__SYMBOLCHANGE *_p = soap_new_eoddata1__SYMBOLCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SYMBOLCHANGE::DateTime = DateTime;
		_p->eoddata1__SYMBOLCHANGE::OldSymbol = OldSymbol;
		_p->eoddata1__SYMBOLCHANGE::NewSymbol = NewSymbol;
		_p->eoddata1__SYMBOLCHANGE::ExchangeCode = ExchangeCode;
		_p->eoddata1__SYMBOLCHANGE::NewExchangeCode = NewExchangeCode;
	}
	return _p;
}

#ifndef soap_write_eoddata1__SYMBOLCHANGE
#define soap_write_eoddata1__SYMBOLCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SYMBOLCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOLCHANGE * SOAP_FMAC4 soap_get_eoddata1__SYMBOLCHANGE(struct soap*, eoddata1__SYMBOLCHANGE *, const char*, const char*);

#ifndef soap_read_eoddata1__SYMBOLCHANGE
#define soap_read_eoddata1__SYMBOLCHANGE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__SYMBOLCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOLCHANGE
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOLCHANGE (31)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfSYMBOLCHANGE(struct soap*, const char*, int, const eoddata1__ArrayOfSYMBOLCHANGE *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOLCHANGE * SOAP_FMAC4 soap_in_eoddata1__ArrayOfSYMBOLCHANGE(struct soap*, const char*, eoddata1__ArrayOfSYMBOLCHANGE *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfSYMBOLCHANGE * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfSYMBOLCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfSYMBOLCHANGE * soap_new_eoddata1__ArrayOfSYMBOLCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfSYMBOLCHANGE(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfSYMBOLCHANGE * soap_new_req_eoddata1__ArrayOfSYMBOLCHANGE(
	struct soap *soap)
{	eoddata1__ArrayOfSYMBOLCHANGE *_p = soap_new_eoddata1__ArrayOfSYMBOLCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfSYMBOLCHANGE * soap_new_set_eoddata1__ArrayOfSYMBOLCHANGE(
	struct soap *soap,
	const std::vector<eoddata1__SYMBOLCHANGE *> & SYMBOLCHANGE)
{	eoddata1__ArrayOfSYMBOLCHANGE *_p = soap_new_eoddata1__ArrayOfSYMBOLCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfSYMBOLCHANGE::SYMBOLCHANGE = SYMBOLCHANGE;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfSYMBOLCHANGE
#define soap_write_eoddata1__ArrayOfSYMBOLCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfSYMBOLCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOLCHANGE * SOAP_FMAC4 soap_get_eoddata1__ArrayOfSYMBOLCHANGE(struct soap*, eoddata1__ArrayOfSYMBOLCHANGE *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfSYMBOLCHANGE
#define soap_read_eoddata1__ArrayOfSYMBOLCHANGE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfSYMBOLCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__TECHNICAL
#define SOAP_TYPE_eoddata_eoddata1__TECHNICAL (30)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__TECHNICAL(struct soap*, const char*, int, const eoddata1__TECHNICAL *, const char*);
SOAP_FMAC3 eoddata1__TECHNICAL * SOAP_FMAC4 soap_in_eoddata1__TECHNICAL(struct soap*, const char*, eoddata1__TECHNICAL *, const char*);
SOAP_FMAC1 eoddata1__TECHNICAL * SOAP_FMAC2 soap_instantiate_eoddata1__TECHNICAL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__TECHNICAL * soap_new_eoddata1__TECHNICAL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__TECHNICAL(soap, n, NULL, NULL, NULL); }

inline eoddata1__TECHNICAL * soap_new_req_eoddata1__TECHNICAL(
	struct soap *soap,
	time_t DateTime,
	double Previous,
	double Change,
	int MA1,
	int MA2,
	int MA5,
	int MA20,
	int MA50,
	int MA100,
	int MA200,
	double MAPercent,
	double MAReturn,
	LONG64 VolumeChange,
	double ThreeMonthChange,
	double SixMonthChange,
	double WeekHigh,
	double WeekLow,
	double WeekChange,
	double AvgWeekChange,
	double AvgWeekVolume,
	double WeekVolume,
	double MonthHigh,
	double MonthLow,
	double MonthChange,
	double AvgMonthChange,
	double AvgMonthVolume,
	double MonthVolume,
	double YearHigh,
	double YearLow,
	double YearChange,
	double AvgYearChange,
	double AvgYearVolume,
	double YTDChange,
	double RSI14,
	double STO9,
	double WPR14,
	double MTM14,
	double ROC14,
	LONG64 PTC,
	double SAR,
	double Volatility,
	double Liquidity)
{	eoddata1__TECHNICAL *_p = soap_new_eoddata1__TECHNICAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__TECHNICAL::DateTime = DateTime;
		_p->eoddata1__TECHNICAL::Previous = Previous;
		_p->eoddata1__TECHNICAL::Change = Change;
		_p->eoddata1__TECHNICAL::MA1 = MA1;
		_p->eoddata1__TECHNICAL::MA2 = MA2;
		_p->eoddata1__TECHNICAL::MA5 = MA5;
		_p->eoddata1__TECHNICAL::MA20 = MA20;
		_p->eoddata1__TECHNICAL::MA50 = MA50;
		_p->eoddata1__TECHNICAL::MA100 = MA100;
		_p->eoddata1__TECHNICAL::MA200 = MA200;
		_p->eoddata1__TECHNICAL::MAPercent = MAPercent;
		_p->eoddata1__TECHNICAL::MAReturn = MAReturn;
		_p->eoddata1__TECHNICAL::VolumeChange = VolumeChange;
		_p->eoddata1__TECHNICAL::ThreeMonthChange = ThreeMonthChange;
		_p->eoddata1__TECHNICAL::SixMonthChange = SixMonthChange;
		_p->eoddata1__TECHNICAL::WeekHigh = WeekHigh;
		_p->eoddata1__TECHNICAL::WeekLow = WeekLow;
		_p->eoddata1__TECHNICAL::WeekChange = WeekChange;
		_p->eoddata1__TECHNICAL::AvgWeekChange = AvgWeekChange;
		_p->eoddata1__TECHNICAL::AvgWeekVolume = AvgWeekVolume;
		_p->eoddata1__TECHNICAL::WeekVolume = WeekVolume;
		_p->eoddata1__TECHNICAL::MonthHigh = MonthHigh;
		_p->eoddata1__TECHNICAL::MonthLow = MonthLow;
		_p->eoddata1__TECHNICAL::MonthChange = MonthChange;
		_p->eoddata1__TECHNICAL::AvgMonthChange = AvgMonthChange;
		_p->eoddata1__TECHNICAL::AvgMonthVolume = AvgMonthVolume;
		_p->eoddata1__TECHNICAL::MonthVolume = MonthVolume;
		_p->eoddata1__TECHNICAL::YearHigh = YearHigh;
		_p->eoddata1__TECHNICAL::YearLow = YearLow;
		_p->eoddata1__TECHNICAL::YearChange = YearChange;
		_p->eoddata1__TECHNICAL::AvgYearChange = AvgYearChange;
		_p->eoddata1__TECHNICAL::AvgYearVolume = AvgYearVolume;
		_p->eoddata1__TECHNICAL::YTDChange = YTDChange;
		_p->eoddata1__TECHNICAL::RSI14 = RSI14;
		_p->eoddata1__TECHNICAL::STO9 = STO9;
		_p->eoddata1__TECHNICAL::WPR14 = WPR14;
		_p->eoddata1__TECHNICAL::MTM14 = MTM14;
		_p->eoddata1__TECHNICAL::ROC14 = ROC14;
		_p->eoddata1__TECHNICAL::PTC = PTC;
		_p->eoddata1__TECHNICAL::SAR = SAR;
		_p->eoddata1__TECHNICAL::Volatility = Volatility;
		_p->eoddata1__TECHNICAL::Liquidity = Liquidity;
	}
	return _p;
}

inline eoddata1__TECHNICAL * soap_new_set_eoddata1__TECHNICAL(
	struct soap *soap,
	std::string *Symbol,
	std::string *Name,
	std::string *Description,
	time_t DateTime,
	double Previous,
	double Change,
	int MA1,
	int MA2,
	int MA5,
	int MA20,
	int MA50,
	int MA100,
	int MA200,
	double MAPercent,
	double MAReturn,
	LONG64 VolumeChange,
	double ThreeMonthChange,
	double SixMonthChange,
	double WeekHigh,
	double WeekLow,
	double WeekChange,
	double AvgWeekChange,
	double AvgWeekVolume,
	double WeekVolume,
	double MonthHigh,
	double MonthLow,
	double MonthChange,
	double AvgMonthChange,
	double AvgMonthVolume,
	double MonthVolume,
	double YearHigh,
	double YearLow,
	double YearChange,
	double AvgYearChange,
	double AvgYearVolume,
	double YTDChange,
	double RSI14,
	double STO9,
	double WPR14,
	double MTM14,
	double ROC14,
	LONG64 PTC,
	double SAR,
	double Volatility,
	double Liquidity)
{	eoddata1__TECHNICAL *_p = soap_new_eoddata1__TECHNICAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__TECHNICAL::Symbol = Symbol;
		_p->eoddata1__TECHNICAL::Name = Name;
		_p->eoddata1__TECHNICAL::Description = Description;
		_p->eoddata1__TECHNICAL::DateTime = DateTime;
		_p->eoddata1__TECHNICAL::Previous = Previous;
		_p->eoddata1__TECHNICAL::Change = Change;
		_p->eoddata1__TECHNICAL::MA1 = MA1;
		_p->eoddata1__TECHNICAL::MA2 = MA2;
		_p->eoddata1__TECHNICAL::MA5 = MA5;
		_p->eoddata1__TECHNICAL::MA20 = MA20;
		_p->eoddata1__TECHNICAL::MA50 = MA50;
		_p->eoddata1__TECHNICAL::MA100 = MA100;
		_p->eoddata1__TECHNICAL::MA200 = MA200;
		_p->eoddata1__TECHNICAL::MAPercent = MAPercent;
		_p->eoddata1__TECHNICAL::MAReturn = MAReturn;
		_p->eoddata1__TECHNICAL::VolumeChange = VolumeChange;
		_p->eoddata1__TECHNICAL::ThreeMonthChange = ThreeMonthChange;
		_p->eoddata1__TECHNICAL::SixMonthChange = SixMonthChange;
		_p->eoddata1__TECHNICAL::WeekHigh = WeekHigh;
		_p->eoddata1__TECHNICAL::WeekLow = WeekLow;
		_p->eoddata1__TECHNICAL::WeekChange = WeekChange;
		_p->eoddata1__TECHNICAL::AvgWeekChange = AvgWeekChange;
		_p->eoddata1__TECHNICAL::AvgWeekVolume = AvgWeekVolume;
		_p->eoddata1__TECHNICAL::WeekVolume = WeekVolume;
		_p->eoddata1__TECHNICAL::MonthHigh = MonthHigh;
		_p->eoddata1__TECHNICAL::MonthLow = MonthLow;
		_p->eoddata1__TECHNICAL::MonthChange = MonthChange;
		_p->eoddata1__TECHNICAL::AvgMonthChange = AvgMonthChange;
		_p->eoddata1__TECHNICAL::AvgMonthVolume = AvgMonthVolume;
		_p->eoddata1__TECHNICAL::MonthVolume = MonthVolume;
		_p->eoddata1__TECHNICAL::YearHigh = YearHigh;
		_p->eoddata1__TECHNICAL::YearLow = YearLow;
		_p->eoddata1__TECHNICAL::YearChange = YearChange;
		_p->eoddata1__TECHNICAL::AvgYearChange = AvgYearChange;
		_p->eoddata1__TECHNICAL::AvgYearVolume = AvgYearVolume;
		_p->eoddata1__TECHNICAL::YTDChange = YTDChange;
		_p->eoddata1__TECHNICAL::RSI14 = RSI14;
		_p->eoddata1__TECHNICAL::STO9 = STO9;
		_p->eoddata1__TECHNICAL::WPR14 = WPR14;
		_p->eoddata1__TECHNICAL::MTM14 = MTM14;
		_p->eoddata1__TECHNICAL::ROC14 = ROC14;
		_p->eoddata1__TECHNICAL::PTC = PTC;
		_p->eoddata1__TECHNICAL::SAR = SAR;
		_p->eoddata1__TECHNICAL::Volatility = Volatility;
		_p->eoddata1__TECHNICAL::Liquidity = Liquidity;
	}
	return _p;
}

#ifndef soap_write_eoddata1__TECHNICAL
#define soap_write_eoddata1__TECHNICAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:TECHNICAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__TECHNICAL * SOAP_FMAC4 soap_get_eoddata1__TECHNICAL(struct soap*, eoddata1__TECHNICAL *, const char*, const char*);

#ifndef soap_read_eoddata1__TECHNICAL
#define soap_read_eoddata1__TECHNICAL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__TECHNICAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfTECHNICAL
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfTECHNICAL (29)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfTECHNICAL(struct soap*, const char*, int, const eoddata1__ArrayOfTECHNICAL *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfTECHNICAL * SOAP_FMAC4 soap_in_eoddata1__ArrayOfTECHNICAL(struct soap*, const char*, eoddata1__ArrayOfTECHNICAL *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfTECHNICAL * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfTECHNICAL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfTECHNICAL * soap_new_eoddata1__ArrayOfTECHNICAL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfTECHNICAL(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfTECHNICAL * soap_new_req_eoddata1__ArrayOfTECHNICAL(
	struct soap *soap)
{	eoddata1__ArrayOfTECHNICAL *_p = soap_new_eoddata1__ArrayOfTECHNICAL(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfTECHNICAL * soap_new_set_eoddata1__ArrayOfTECHNICAL(
	struct soap *soap,
	const std::vector<eoddata1__TECHNICAL *> & TECHNICAL)
{	eoddata1__ArrayOfTECHNICAL *_p = soap_new_eoddata1__ArrayOfTECHNICAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfTECHNICAL::TECHNICAL = TECHNICAL;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfTECHNICAL
#define soap_write_eoddata1__ArrayOfTECHNICAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfTECHNICAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfTECHNICAL * SOAP_FMAC4 soap_get_eoddata1__ArrayOfTECHNICAL(struct soap*, eoddata1__ArrayOfTECHNICAL *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfTECHNICAL
#define soap_read_eoddata1__ArrayOfTECHNICAL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfTECHNICAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__FUNDAMENTAL
#define SOAP_TYPE_eoddata_eoddata1__FUNDAMENTAL (28)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__FUNDAMENTAL(struct soap*, const char*, int, const eoddata1__FUNDAMENTAL *, const char*);
SOAP_FMAC3 eoddata1__FUNDAMENTAL * SOAP_FMAC4 soap_in_eoddata1__FUNDAMENTAL(struct soap*, const char*, eoddata1__FUNDAMENTAL *, const char*);
SOAP_FMAC1 eoddata1__FUNDAMENTAL * SOAP_FMAC2 soap_instantiate_eoddata1__FUNDAMENTAL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__FUNDAMENTAL * soap_new_eoddata1__FUNDAMENTAL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__FUNDAMENTAL(soap, n, NULL, NULL, NULL); }

inline eoddata1__FUNDAMENTAL * soap_new_req_eoddata1__FUNDAMENTAL(
	struct soap *soap,
	time_t DateTime,
	LONG64 Shares,
	LONG64 MarketCap,
	double PE,
	double EPS,
	double NTA,
	double DivYield,
	double Dividend,
	time_t DividendDate,
	double DPS,
	double ImputationCredits,
	double EBITDA,
	double PEG,
	double PtS,
	double PtB,
	double Yield)
{	eoddata1__FUNDAMENTAL *_p = soap_new_eoddata1__FUNDAMENTAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__FUNDAMENTAL::DateTime = DateTime;
		_p->eoddata1__FUNDAMENTAL::Shares = Shares;
		_p->eoddata1__FUNDAMENTAL::MarketCap = MarketCap;
		_p->eoddata1__FUNDAMENTAL::PE = PE;
		_p->eoddata1__FUNDAMENTAL::EPS = EPS;
		_p->eoddata1__FUNDAMENTAL::NTA = NTA;
		_p->eoddata1__FUNDAMENTAL::DivYield = DivYield;
		_p->eoddata1__FUNDAMENTAL::Dividend = Dividend;
		_p->eoddata1__FUNDAMENTAL::DividendDate = DividendDate;
		_p->eoddata1__FUNDAMENTAL::DPS = DPS;
		_p->eoddata1__FUNDAMENTAL::ImputationCredits = ImputationCredits;
		_p->eoddata1__FUNDAMENTAL::EBITDA = EBITDA;
		_p->eoddata1__FUNDAMENTAL::PEG = PEG;
		_p->eoddata1__FUNDAMENTAL::PtS = PtS;
		_p->eoddata1__FUNDAMENTAL::PtB = PtB;
		_p->eoddata1__FUNDAMENTAL::Yield = Yield;
	}
	return _p;
}

inline eoddata1__FUNDAMENTAL * soap_new_set_eoddata1__FUNDAMENTAL(
	struct soap *soap,
	std::string *Symbol,
	std::string *Name,
	std::string *Description,
	time_t DateTime,
	std::string *Industry,
	std::string *Sector,
	LONG64 Shares,
	LONG64 MarketCap,
	double PE,
	double EPS,
	double NTA,
	double DivYield,
	double Dividend,
	time_t DividendDate,
	double DPS,
	double ImputationCredits,
	double EBITDA,
	double PEG,
	double PtS,
	double PtB,
	double Yield)
{	eoddata1__FUNDAMENTAL *_p = soap_new_eoddata1__FUNDAMENTAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__FUNDAMENTAL::Symbol = Symbol;
		_p->eoddata1__FUNDAMENTAL::Name = Name;
		_p->eoddata1__FUNDAMENTAL::Description = Description;
		_p->eoddata1__FUNDAMENTAL::DateTime = DateTime;
		_p->eoddata1__FUNDAMENTAL::Industry = Industry;
		_p->eoddata1__FUNDAMENTAL::Sector = Sector;
		_p->eoddata1__FUNDAMENTAL::Shares = Shares;
		_p->eoddata1__FUNDAMENTAL::MarketCap = MarketCap;
		_p->eoddata1__FUNDAMENTAL::PE = PE;
		_p->eoddata1__FUNDAMENTAL::EPS = EPS;
		_p->eoddata1__FUNDAMENTAL::NTA = NTA;
		_p->eoddata1__FUNDAMENTAL::DivYield = DivYield;
		_p->eoddata1__FUNDAMENTAL::Dividend = Dividend;
		_p->eoddata1__FUNDAMENTAL::DividendDate = DividendDate;
		_p->eoddata1__FUNDAMENTAL::DPS = DPS;
		_p->eoddata1__FUNDAMENTAL::ImputationCredits = ImputationCredits;
		_p->eoddata1__FUNDAMENTAL::EBITDA = EBITDA;
		_p->eoddata1__FUNDAMENTAL::PEG = PEG;
		_p->eoddata1__FUNDAMENTAL::PtS = PtS;
		_p->eoddata1__FUNDAMENTAL::PtB = PtB;
		_p->eoddata1__FUNDAMENTAL::Yield = Yield;
	}
	return _p;
}

#ifndef soap_write_eoddata1__FUNDAMENTAL
#define soap_write_eoddata1__FUNDAMENTAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:FUNDAMENTAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__FUNDAMENTAL * SOAP_FMAC4 soap_get_eoddata1__FUNDAMENTAL(struct soap*, eoddata1__FUNDAMENTAL *, const char*, const char*);

#ifndef soap_read_eoddata1__FUNDAMENTAL
#define soap_read_eoddata1__FUNDAMENTAL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__FUNDAMENTAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfFUNDAMENTAL
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfFUNDAMENTAL (27)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfFUNDAMENTAL(struct soap*, const char*, int, const eoddata1__ArrayOfFUNDAMENTAL *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfFUNDAMENTAL * SOAP_FMAC4 soap_in_eoddata1__ArrayOfFUNDAMENTAL(struct soap*, const char*, eoddata1__ArrayOfFUNDAMENTAL *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfFUNDAMENTAL * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfFUNDAMENTAL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfFUNDAMENTAL * soap_new_eoddata1__ArrayOfFUNDAMENTAL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfFUNDAMENTAL(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfFUNDAMENTAL * soap_new_req_eoddata1__ArrayOfFUNDAMENTAL(
	struct soap *soap)
{	eoddata1__ArrayOfFUNDAMENTAL *_p = soap_new_eoddata1__ArrayOfFUNDAMENTAL(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfFUNDAMENTAL * soap_new_set_eoddata1__ArrayOfFUNDAMENTAL(
	struct soap *soap,
	const std::vector<eoddata1__FUNDAMENTAL *> & FUNDAMENTAL)
{	eoddata1__ArrayOfFUNDAMENTAL *_p = soap_new_eoddata1__ArrayOfFUNDAMENTAL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfFUNDAMENTAL::FUNDAMENTAL = FUNDAMENTAL;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfFUNDAMENTAL
#define soap_write_eoddata1__ArrayOfFUNDAMENTAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfFUNDAMENTAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfFUNDAMENTAL * SOAP_FMAC4 soap_get_eoddata1__ArrayOfFUNDAMENTAL(struct soap*, eoddata1__ArrayOfFUNDAMENTAL *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfFUNDAMENTAL
#define soap_read_eoddata1__ArrayOfFUNDAMENTAL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfFUNDAMENTAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__CountryBase
#define SOAP_TYPE_eoddata_eoddata1__CountryBase (26)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__CountryBase(struct soap*, const char*, int, const eoddata1__CountryBase *, const char*);
SOAP_FMAC3 eoddata1__CountryBase * SOAP_FMAC4 soap_in_eoddata1__CountryBase(struct soap*, const char*, eoddata1__CountryBase *, const char*);
SOAP_FMAC1 eoddata1__CountryBase * SOAP_FMAC2 soap_instantiate_eoddata1__CountryBase(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__CountryBase * soap_new_eoddata1__CountryBase(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__CountryBase(soap, n, NULL, NULL, NULL); }

inline eoddata1__CountryBase * soap_new_req_eoddata1__CountryBase(
	struct soap *soap)
{	eoddata1__CountryBase *_p = soap_new_eoddata1__CountryBase(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__CountryBase * soap_new_set_eoddata1__CountryBase(
	struct soap *soap,
	std::string *Code,
	std::string *Name)
{	eoddata1__CountryBase *_p = soap_new_eoddata1__CountryBase(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__CountryBase::Code = Code;
		_p->eoddata1__CountryBase::Name = Name;
	}
	return _p;
}

#ifndef soap_write_eoddata1__CountryBase
#define soap_write_eoddata1__CountryBase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:CountryBase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__CountryBase * SOAP_FMAC4 soap_get_eoddata1__CountryBase(struct soap*, eoddata1__CountryBase *, const char*, const char*);

#ifndef soap_read_eoddata1__CountryBase
#define soap_read_eoddata1__CountryBase(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__CountryBase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfCountryBase
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfCountryBase (25)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfCountryBase(struct soap*, const char*, int, const eoddata1__ArrayOfCountryBase *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfCountryBase * SOAP_FMAC4 soap_in_eoddata1__ArrayOfCountryBase(struct soap*, const char*, eoddata1__ArrayOfCountryBase *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfCountryBase * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfCountryBase(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfCountryBase * soap_new_eoddata1__ArrayOfCountryBase(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfCountryBase(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfCountryBase * soap_new_req_eoddata1__ArrayOfCountryBase(
	struct soap *soap)
{	eoddata1__ArrayOfCountryBase *_p = soap_new_eoddata1__ArrayOfCountryBase(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfCountryBase * soap_new_set_eoddata1__ArrayOfCountryBase(
	struct soap *soap,
	const std::vector<eoddata1__CountryBase *> & CountryBase)
{	eoddata1__ArrayOfCountryBase *_p = soap_new_eoddata1__ArrayOfCountryBase(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfCountryBase::CountryBase = CountryBase;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfCountryBase
#define soap_write_eoddata1__ArrayOfCountryBase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfCountryBase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfCountryBase * SOAP_FMAC4 soap_get_eoddata1__ArrayOfCountryBase(struct soap*, eoddata1__ArrayOfCountryBase *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfCountryBase
#define soap_read_eoddata1__ArrayOfCountryBase(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfCountryBase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__SPLIT
#define SOAP_TYPE_eoddata_eoddata1__SPLIT (24)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__SPLIT(struct soap*, const char*, int, const eoddata1__SPLIT *, const char*);
SOAP_FMAC3 eoddata1__SPLIT * SOAP_FMAC4 soap_in_eoddata1__SPLIT(struct soap*, const char*, eoddata1__SPLIT *, const char*);
SOAP_FMAC1 eoddata1__SPLIT * SOAP_FMAC2 soap_instantiate_eoddata1__SPLIT(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__SPLIT * soap_new_eoddata1__SPLIT(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__SPLIT(soap, n, NULL, NULL, NULL); }

inline eoddata1__SPLIT * soap_new_req_eoddata1__SPLIT(
	struct soap *soap,
	time_t DateTime)
{	eoddata1__SPLIT *_p = soap_new_eoddata1__SPLIT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SPLIT::DateTime = DateTime;
	}
	return _p;
}

inline eoddata1__SPLIT * soap_new_set_eoddata1__SPLIT(
	struct soap *soap,
	std::string *Exchange,
	std::string *Symbol,
	time_t DateTime,
	std::string *Ratio)
{	eoddata1__SPLIT *_p = soap_new_eoddata1__SPLIT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SPLIT::Exchange = Exchange;
		_p->eoddata1__SPLIT::Symbol = Symbol;
		_p->eoddata1__SPLIT::DateTime = DateTime;
		_p->eoddata1__SPLIT::Ratio = Ratio;
	}
	return _p;
}

#ifndef soap_write_eoddata1__SPLIT
#define soap_write_eoddata1__SPLIT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SPLIT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SPLIT * SOAP_FMAC4 soap_get_eoddata1__SPLIT(struct soap*, eoddata1__SPLIT *, const char*, const char*);

#ifndef soap_read_eoddata1__SPLIT
#define soap_read_eoddata1__SPLIT(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__SPLIT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfSPLIT
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfSPLIT (23)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfSPLIT(struct soap*, const char*, int, const eoddata1__ArrayOfSPLIT *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfSPLIT * SOAP_FMAC4 soap_in_eoddata1__ArrayOfSPLIT(struct soap*, const char*, eoddata1__ArrayOfSPLIT *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfSPLIT * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfSPLIT(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfSPLIT * soap_new_eoddata1__ArrayOfSPLIT(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfSPLIT(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfSPLIT * soap_new_req_eoddata1__ArrayOfSPLIT(
	struct soap *soap)
{	eoddata1__ArrayOfSPLIT *_p = soap_new_eoddata1__ArrayOfSPLIT(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfSPLIT * soap_new_set_eoddata1__ArrayOfSPLIT(
	struct soap *soap,
	const std::vector<eoddata1__SPLIT *> & SPLIT)
{	eoddata1__ArrayOfSPLIT *_p = soap_new_eoddata1__ArrayOfSPLIT(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfSPLIT::SPLIT = SPLIT;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfSPLIT
#define soap_write_eoddata1__ArrayOfSPLIT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfSPLIT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSPLIT * SOAP_FMAC4 soap_get_eoddata1__ArrayOfSPLIT(struct soap*, eoddata1__ArrayOfSPLIT *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfSPLIT
#define soap_read_eoddata1__ArrayOfSPLIT(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfSPLIT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__QUOTE2
#define SOAP_TYPE_eoddata_eoddata1__QUOTE2 (22)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__QUOTE2(struct soap*, const char*, int, const eoddata1__QUOTE2 *, const char*);
SOAP_FMAC3 eoddata1__QUOTE2 * SOAP_FMAC4 soap_in_eoddata1__QUOTE2(struct soap*, const char*, eoddata1__QUOTE2 *, const char*);
SOAP_FMAC1 eoddata1__QUOTE2 * SOAP_FMAC2 soap_instantiate_eoddata1__QUOTE2(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__QUOTE2 * soap_new_eoddata1__QUOTE2(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__QUOTE2(soap, n, NULL, NULL, NULL); }

inline eoddata1__QUOTE2 * soap_new_req_eoddata1__QUOTE2(
	struct soap *soap,
	time_t d,
	double o,
	double h,
	double l,
	double c,
	LONG64 v,
	LONG64 i,
	double b,
	double a)
{	eoddata1__QUOTE2 *_p = soap_new_eoddata1__QUOTE2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__QUOTE2::d = d;
		_p->eoddata1__QUOTE2::o = o;
		_p->eoddata1__QUOTE2::h = h;
		_p->eoddata1__QUOTE2::l = l;
		_p->eoddata1__QUOTE2::c = c;
		_p->eoddata1__QUOTE2::v = v;
		_p->eoddata1__QUOTE2::i = i;
		_p->eoddata1__QUOTE2::b = b;
		_p->eoddata1__QUOTE2::a = a;
	}
	return _p;
}

inline eoddata1__QUOTE2 * soap_new_set_eoddata1__QUOTE2(
	struct soap *soap,
	std::string *s,
	time_t d,
	double o,
	double h,
	double l,
	double c,
	LONG64 v,
	LONG64 i,
	double b,
	double a)
{	eoddata1__QUOTE2 *_p = soap_new_eoddata1__QUOTE2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__QUOTE2::s = s;
		_p->eoddata1__QUOTE2::d = d;
		_p->eoddata1__QUOTE2::o = o;
		_p->eoddata1__QUOTE2::h = h;
		_p->eoddata1__QUOTE2::l = l;
		_p->eoddata1__QUOTE2::c = c;
		_p->eoddata1__QUOTE2::v = v;
		_p->eoddata1__QUOTE2::i = i;
		_p->eoddata1__QUOTE2::b = b;
		_p->eoddata1__QUOTE2::a = a;
	}
	return _p;
}

#ifndef soap_write_eoddata1__QUOTE2
#define soap_write_eoddata1__QUOTE2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QUOTE2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__QUOTE2 * SOAP_FMAC4 soap_get_eoddata1__QUOTE2(struct soap*, eoddata1__QUOTE2 *, const char*, const char*);

#ifndef soap_read_eoddata1__QUOTE2
#define soap_read_eoddata1__QUOTE2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__QUOTE2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfQUOTE2
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfQUOTE2 (21)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfQUOTE2(struct soap*, const char*, int, const eoddata1__ArrayOfQUOTE2 *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfQUOTE2 * SOAP_FMAC4 soap_in_eoddata1__ArrayOfQUOTE2(struct soap*, const char*, eoddata1__ArrayOfQUOTE2 *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfQUOTE2 * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfQUOTE2(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfQUOTE2 * soap_new_eoddata1__ArrayOfQUOTE2(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfQUOTE2(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfQUOTE2 * soap_new_req_eoddata1__ArrayOfQUOTE2(
	struct soap *soap)
{	eoddata1__ArrayOfQUOTE2 *_p = soap_new_eoddata1__ArrayOfQUOTE2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfQUOTE2 * soap_new_set_eoddata1__ArrayOfQUOTE2(
	struct soap *soap,
	const std::vector<eoddata1__QUOTE2 *> & QUOTE2)
{	eoddata1__ArrayOfQUOTE2 *_p = soap_new_eoddata1__ArrayOfQUOTE2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfQUOTE2::QUOTE2 = QUOTE2;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfQUOTE2
#define soap_write_eoddata1__ArrayOfQUOTE2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfQUOTE2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfQUOTE2 * SOAP_FMAC4 soap_get_eoddata1__ArrayOfQUOTE2(struct soap*, eoddata1__ArrayOfQUOTE2 *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfQUOTE2
#define soap_read_eoddata1__ArrayOfQUOTE2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfQUOTE2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfQUOTE
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfQUOTE (20)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfQUOTE(struct soap*, const char*, int, const eoddata1__ArrayOfQUOTE *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfQUOTE * SOAP_FMAC4 soap_in_eoddata1__ArrayOfQUOTE(struct soap*, const char*, eoddata1__ArrayOfQUOTE *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfQUOTE * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfQUOTE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfQUOTE * soap_new_eoddata1__ArrayOfQUOTE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfQUOTE(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfQUOTE * soap_new_req_eoddata1__ArrayOfQUOTE(
	struct soap *soap)
{	eoddata1__ArrayOfQUOTE *_p = soap_new_eoddata1__ArrayOfQUOTE(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfQUOTE * soap_new_set_eoddata1__ArrayOfQUOTE(
	struct soap *soap,
	const std::vector<eoddata1__QUOTE *> & QUOTE)
{	eoddata1__ArrayOfQUOTE *_p = soap_new_eoddata1__ArrayOfQUOTE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfQUOTE::QUOTE = QUOTE;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfQUOTE
#define soap_write_eoddata1__ArrayOfQUOTE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfQUOTE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfQUOTE * SOAP_FMAC4 soap_get_eoddata1__ArrayOfQUOTE(struct soap*, eoddata1__ArrayOfQUOTE *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfQUOTE
#define soap_read_eoddata1__ArrayOfQUOTE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfQUOTE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__QUOTE
#define SOAP_TYPE_eoddata_eoddata1__QUOTE (19)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__QUOTE(struct soap*, const char*, int, const eoddata1__QUOTE *, const char*);
SOAP_FMAC3 eoddata1__QUOTE * SOAP_FMAC4 soap_in_eoddata1__QUOTE(struct soap*, const char*, eoddata1__QUOTE *, const char*);
SOAP_FMAC1 eoddata1__QUOTE * SOAP_FMAC2 soap_instantiate_eoddata1__QUOTE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__QUOTE * soap_new_eoddata1__QUOTE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__QUOTE(soap, n, NULL, NULL, NULL); }

inline eoddata1__QUOTE * soap_new_req_eoddata1__QUOTE(
	struct soap *soap,
	time_t DateTime,
	double Open,
	double High,
	double Low,
	double Close,
	LONG64 Volume,
	LONG64 OpenInterest,
	double Previous,
	double Change,
	double Bid,
	double Ask,
	double PreviousClose,
	double NextOpen,
	time_t Modified)
{	eoddata1__QUOTE *_p = soap_new_eoddata1__QUOTE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__QUOTE::DateTime = DateTime;
		_p->eoddata1__QUOTE::Open = Open;
		_p->eoddata1__QUOTE::High = High;
		_p->eoddata1__QUOTE::Low = Low;
		_p->eoddata1__QUOTE::Close = Close;
		_p->eoddata1__QUOTE::Volume = Volume;
		_p->eoddata1__QUOTE::OpenInterest = OpenInterest;
		_p->eoddata1__QUOTE::Previous = Previous;
		_p->eoddata1__QUOTE::Change = Change;
		_p->eoddata1__QUOTE::Bid = Bid;
		_p->eoddata1__QUOTE::Ask = Ask;
		_p->eoddata1__QUOTE::PreviousClose = PreviousClose;
		_p->eoddata1__QUOTE::NextOpen = NextOpen;
		_p->eoddata1__QUOTE::Modified = Modified;
	}
	return _p;
}

inline eoddata1__QUOTE * soap_new_set_eoddata1__QUOTE(
	struct soap *soap,
	std::string *Symbol,
	std::string *Description,
	std::string *Name,
	time_t DateTime,
	double Open,
	double High,
	double Low,
	double Close,
	LONG64 Volume,
	LONG64 OpenInterest,
	double Previous,
	double Change,
	double Bid,
	double Ask,
	double PreviousClose,
	double NextOpen,
	time_t Modified)
{	eoddata1__QUOTE *_p = soap_new_eoddata1__QUOTE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__QUOTE::Symbol = Symbol;
		_p->eoddata1__QUOTE::Description = Description;
		_p->eoddata1__QUOTE::Name = Name;
		_p->eoddata1__QUOTE::DateTime = DateTime;
		_p->eoddata1__QUOTE::Open = Open;
		_p->eoddata1__QUOTE::High = High;
		_p->eoddata1__QUOTE::Low = Low;
		_p->eoddata1__QUOTE::Close = Close;
		_p->eoddata1__QUOTE::Volume = Volume;
		_p->eoddata1__QUOTE::OpenInterest = OpenInterest;
		_p->eoddata1__QUOTE::Previous = Previous;
		_p->eoddata1__QUOTE::Change = Change;
		_p->eoddata1__QUOTE::Bid = Bid;
		_p->eoddata1__QUOTE::Ask = Ask;
		_p->eoddata1__QUOTE::PreviousClose = PreviousClose;
		_p->eoddata1__QUOTE::NextOpen = NextOpen;
		_p->eoddata1__QUOTE::Modified = Modified;
	}
	return _p;
}

#ifndef soap_write_eoddata1__QUOTE
#define soap_write_eoddata1__QUOTE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:QUOTE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__QUOTE * SOAP_FMAC4 soap_get_eoddata1__QUOTE(struct soap*, eoddata1__QUOTE *, const char*, const char*);

#ifndef soap_read_eoddata1__QUOTE
#define soap_read_eoddata1__QUOTE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__QUOTE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__SYMBOL2
#define SOAP_TYPE_eoddata_eoddata1__SYMBOL2 (18)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__SYMBOL2(struct soap*, const char*, int, const eoddata1__SYMBOL2 *, const char*);
SOAP_FMAC3 eoddata1__SYMBOL2 * SOAP_FMAC4 soap_in_eoddata1__SYMBOL2(struct soap*, const char*, eoddata1__SYMBOL2 *, const char*);
SOAP_FMAC1 eoddata1__SYMBOL2 * SOAP_FMAC2 soap_instantiate_eoddata1__SYMBOL2(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__SYMBOL2 * soap_new_eoddata1__SYMBOL2(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__SYMBOL2(soap, n, NULL, NULL, NULL); }

inline eoddata1__SYMBOL2 * soap_new_req_eoddata1__SYMBOL2(
	struct soap *soap)
{	eoddata1__SYMBOL2 *_p = soap_new_eoddata1__SYMBOL2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__SYMBOL2 * soap_new_set_eoddata1__SYMBOL2(
	struct soap *soap,
	std::string *c,
	std::string *n)
{	eoddata1__SYMBOL2 *_p = soap_new_eoddata1__SYMBOL2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SYMBOL2::c = c;
		_p->eoddata1__SYMBOL2::n = n;
	}
	return _p;
}

#ifndef soap_write_eoddata1__SYMBOL2
#define soap_write_eoddata1__SYMBOL2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SYMBOL2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOL2 * SOAP_FMAC4 soap_get_eoddata1__SYMBOL2(struct soap*, eoddata1__SYMBOL2 *, const char*, const char*);

#ifndef soap_read_eoddata1__SYMBOL2
#define soap_read_eoddata1__SYMBOL2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__SYMBOL2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOL2
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOL2 (17)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfSYMBOL2(struct soap*, const char*, int, const eoddata1__ArrayOfSYMBOL2 *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOL2 * SOAP_FMAC4 soap_in_eoddata1__ArrayOfSYMBOL2(struct soap*, const char*, eoddata1__ArrayOfSYMBOL2 *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfSYMBOL2 * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfSYMBOL2(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfSYMBOL2 * soap_new_eoddata1__ArrayOfSYMBOL2(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfSYMBOL2(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfSYMBOL2 * soap_new_req_eoddata1__ArrayOfSYMBOL2(
	struct soap *soap)
{	eoddata1__ArrayOfSYMBOL2 *_p = soap_new_eoddata1__ArrayOfSYMBOL2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfSYMBOL2 * soap_new_set_eoddata1__ArrayOfSYMBOL2(
	struct soap *soap,
	const std::vector<eoddata1__SYMBOL2 *> & SYMBOL2)
{	eoddata1__ArrayOfSYMBOL2 *_p = soap_new_eoddata1__ArrayOfSYMBOL2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfSYMBOL2::SYMBOL2 = SYMBOL2;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfSYMBOL2
#define soap_write_eoddata1__ArrayOfSYMBOL2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfSYMBOL2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOL2 * SOAP_FMAC4 soap_get_eoddata1__ArrayOfSYMBOL2(struct soap*, eoddata1__ArrayOfSYMBOL2 *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfSYMBOL2
#define soap_read_eoddata1__ArrayOfSYMBOL2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfSYMBOL2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOL
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfSYMBOL (16)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfSYMBOL(struct soap*, const char*, int, const eoddata1__ArrayOfSYMBOL *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOL * SOAP_FMAC4 soap_in_eoddata1__ArrayOfSYMBOL(struct soap*, const char*, eoddata1__ArrayOfSYMBOL *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfSYMBOL * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfSYMBOL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfSYMBOL * soap_new_eoddata1__ArrayOfSYMBOL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfSYMBOL(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfSYMBOL * soap_new_req_eoddata1__ArrayOfSYMBOL(
	struct soap *soap)
{	eoddata1__ArrayOfSYMBOL *_p = soap_new_eoddata1__ArrayOfSYMBOL(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfSYMBOL * soap_new_set_eoddata1__ArrayOfSYMBOL(
	struct soap *soap,
	const std::vector<eoddata1__SYMBOL *> & SYMBOL)
{	eoddata1__ArrayOfSYMBOL *_p = soap_new_eoddata1__ArrayOfSYMBOL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfSYMBOL::SYMBOL = SYMBOL;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfSYMBOL
#define soap_write_eoddata1__ArrayOfSYMBOL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfSYMBOL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOL * SOAP_FMAC4 soap_get_eoddata1__ArrayOfSYMBOL(struct soap*, eoddata1__ArrayOfSYMBOL *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfSYMBOL
#define soap_read_eoddata1__ArrayOfSYMBOL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfSYMBOL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__SYMBOL
#define SOAP_TYPE_eoddata_eoddata1__SYMBOL (15)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__SYMBOL(struct soap*, const char*, int, const eoddata1__SYMBOL *, const char*);
SOAP_FMAC3 eoddata1__SYMBOL * SOAP_FMAC4 soap_in_eoddata1__SYMBOL(struct soap*, const char*, eoddata1__SYMBOL *, const char*);
SOAP_FMAC1 eoddata1__SYMBOL * SOAP_FMAC2 soap_instantiate_eoddata1__SYMBOL(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__SYMBOL * soap_new_eoddata1__SYMBOL(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__SYMBOL(soap, n, NULL, NULL, NULL); }

inline eoddata1__SYMBOL * soap_new_req_eoddata1__SYMBOL(
	struct soap *soap,
	time_t DateTime)
{	eoddata1__SYMBOL *_p = soap_new_eoddata1__SYMBOL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SYMBOL::DateTime = DateTime;
	}
	return _p;
}

inline eoddata1__SYMBOL * soap_new_set_eoddata1__SYMBOL(
	struct soap *soap,
	std::string *Code,
	std::string *Name,
	std::string *LongName,
	time_t DateTime)
{	eoddata1__SYMBOL *_p = soap_new_eoddata1__SYMBOL(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__SYMBOL::Code = Code;
		_p->eoddata1__SYMBOL::Name = Name;
		_p->eoddata1__SYMBOL::LongName = LongName;
		_p->eoddata1__SYMBOL::DateTime = DateTime;
	}
	return _p;
}

#ifndef soap_write_eoddata1__SYMBOL
#define soap_write_eoddata1__SYMBOL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:SYMBOL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOL * SOAP_FMAC4 soap_get_eoddata1__SYMBOL(struct soap*, eoddata1__SYMBOL *, const char*, const char*);

#ifndef soap_read_eoddata1__SYMBOL
#define soap_read_eoddata1__SYMBOL(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__SYMBOL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__ArrayOfEXCHANGE
#define SOAP_TYPE_eoddata_eoddata1__ArrayOfEXCHANGE (14)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__ArrayOfEXCHANGE(struct soap*, const char*, int, const eoddata1__ArrayOfEXCHANGE *, const char*);
SOAP_FMAC3 eoddata1__ArrayOfEXCHANGE * SOAP_FMAC4 soap_in_eoddata1__ArrayOfEXCHANGE(struct soap*, const char*, eoddata1__ArrayOfEXCHANGE *, const char*);
SOAP_FMAC1 eoddata1__ArrayOfEXCHANGE * SOAP_FMAC2 soap_instantiate_eoddata1__ArrayOfEXCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__ArrayOfEXCHANGE * soap_new_eoddata1__ArrayOfEXCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__ArrayOfEXCHANGE(soap, n, NULL, NULL, NULL); }

inline eoddata1__ArrayOfEXCHANGE * soap_new_req_eoddata1__ArrayOfEXCHANGE(
	struct soap *soap)
{	eoddata1__ArrayOfEXCHANGE *_p = soap_new_eoddata1__ArrayOfEXCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eoddata1__ArrayOfEXCHANGE * soap_new_set_eoddata1__ArrayOfEXCHANGE(
	struct soap *soap,
	const std::vector<eoddata1__EXCHANGE *> & EXCHANGE)
{	eoddata1__ArrayOfEXCHANGE *_p = soap_new_eoddata1__ArrayOfEXCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__ArrayOfEXCHANGE::EXCHANGE = EXCHANGE;
	}
	return _p;
}

#ifndef soap_write_eoddata1__ArrayOfEXCHANGE
#define soap_write_eoddata1__ArrayOfEXCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:ArrayOfEXCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfEXCHANGE * SOAP_FMAC4 soap_get_eoddata1__ArrayOfEXCHANGE(struct soap*, eoddata1__ArrayOfEXCHANGE *, const char*, const char*);

#ifndef soap_read_eoddata1__ArrayOfEXCHANGE
#define soap_read_eoddata1__ArrayOfEXCHANGE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__ArrayOfEXCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__EXCHANGE
#define SOAP_TYPE_eoddata_eoddata1__EXCHANGE (13)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__EXCHANGE(struct soap*, const char*, int, const eoddata1__EXCHANGE *, const char*);
SOAP_FMAC3 eoddata1__EXCHANGE * SOAP_FMAC4 soap_in_eoddata1__EXCHANGE(struct soap*, const char*, eoddata1__EXCHANGE *, const char*);
SOAP_FMAC1 eoddata1__EXCHANGE * SOAP_FMAC2 soap_instantiate_eoddata1__EXCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__EXCHANGE * soap_new_eoddata1__EXCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__EXCHANGE(soap, n, NULL, NULL, NULL); }

inline eoddata1__EXCHANGE * soap_new_req_eoddata1__EXCHANGE(
	struct soap *soap,
	time_t LastTradeDateTime,
	int Advances,
	int Declines,
	bool IsIntraday,
	time_t IntradayStartDate,
	bool HasIntradayProduct)
{	eoddata1__EXCHANGE *_p = soap_new_eoddata1__EXCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__EXCHANGE::LastTradeDateTime = LastTradeDateTime;
		_p->eoddata1__EXCHANGE::Advances = Advances;
		_p->eoddata1__EXCHANGE::Declines = Declines;
		_p->eoddata1__EXCHANGE::IsIntraday = IsIntraday;
		_p->eoddata1__EXCHANGE::IntradayStartDate = IntradayStartDate;
		_p->eoddata1__EXCHANGE::HasIntradayProduct = HasIntradayProduct;
	}
	return _p;
}

inline eoddata1__EXCHANGE * soap_new_set_eoddata1__EXCHANGE(
	struct soap *soap,
	std::string *Code,
	std::string *Name,
	time_t LastTradeDateTime,
	std::string *Country,
	std::string *Currency,
	int Advances,
	int Declines,
	std::string *Suffix,
	std::string *TimeZone,
	bool IsIntraday,
	time_t IntradayStartDate,
	bool HasIntradayProduct)
{	eoddata1__EXCHANGE *_p = soap_new_eoddata1__EXCHANGE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__EXCHANGE::Code = Code;
		_p->eoddata1__EXCHANGE::Name = Name;
		_p->eoddata1__EXCHANGE::LastTradeDateTime = LastTradeDateTime;
		_p->eoddata1__EXCHANGE::Country = Country;
		_p->eoddata1__EXCHANGE::Currency = Currency;
		_p->eoddata1__EXCHANGE::Advances = Advances;
		_p->eoddata1__EXCHANGE::Declines = Declines;
		_p->eoddata1__EXCHANGE::Suffix = Suffix;
		_p->eoddata1__EXCHANGE::TimeZone = TimeZone;
		_p->eoddata1__EXCHANGE::IsIntraday = IsIntraday;
		_p->eoddata1__EXCHANGE::IntradayStartDate = IntradayStartDate;
		_p->eoddata1__EXCHANGE::HasIntradayProduct = HasIntradayProduct;
	}
	return _p;
}

#ifndef soap_write_eoddata1__EXCHANGE
#define soap_write_eoddata1__EXCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:EXCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__EXCHANGE * SOAP_FMAC4 soap_get_eoddata1__EXCHANGE(struct soap*, eoddata1__EXCHANGE *, const char*, const char*);

#ifndef soap_read_eoddata1__EXCHANGE
#define soap_read_eoddata1__EXCHANGE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__EXCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__RESPONSE
#define SOAP_TYPE_eoddata_eoddata1__RESPONSE (12)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__RESPONSE(struct soap*, const char*, int, const eoddata1__RESPONSE *, const char*);
SOAP_FMAC3 eoddata1__RESPONSE * SOAP_FMAC4 soap_in_eoddata1__RESPONSE(struct soap*, const char*, eoddata1__RESPONSE *, const char*);
SOAP_FMAC1 eoddata1__RESPONSE * SOAP_FMAC2 soap_instantiate_eoddata1__RESPONSE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__RESPONSE * soap_new_eoddata1__RESPONSE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__RESPONSE(soap, n, NULL, NULL, NULL); }

inline eoddata1__RESPONSE * soap_new_req_eoddata1__RESPONSE(
	struct soap *soap,
	time_t Date)
{	eoddata1__RESPONSE *_p = soap_new_eoddata1__RESPONSE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__RESPONSE::Date = Date;
	}
	return _p;
}

inline eoddata1__RESPONSE * soap_new_set_eoddata1__RESPONSE(
	struct soap *soap,
	eoddata1__EXCHANGE *EXCHANGE,
	eoddata1__ArrayOfEXCHANGE *EXCHANGES,
	eoddata1__SYMBOL *SYMBOL,
	eoddata1__ArrayOfSYMBOL *SYMBOLS,
	eoddata1__ArrayOfSYMBOL2 *SYMBOLS2,
	eoddata1__QUOTE *QUOTE,
	eoddata1__ArrayOfQUOTE *QUOTES,
	eoddata1__ArrayOfQUOTE2 *QUOTES2,
	eoddata1__ArrayOfSPLIT *SPLITS,
	eoddata1__ArrayOfCountryBase *COUNTRIES,
	eoddata1__ArrayOfFUNDAMENTAL *FUNDAMENTALS,
	eoddata1__ArrayOfTECHNICAL *TECHNICALS,
	eoddata1__ArrayOfSYMBOLCHANGE *SYMBOLCHANGES,
	eoddata1__ArrayOfNEWS *NEWSLIST,
	std::string *CHART,
	std::string *MEMBERSHIP,
	std::string *VERSION,
	std::string *MONTHS,
	eoddata1__ArrayOfDATAFORMAT *DATAFORMATS,
	std::string *Source,
	std::string *Message,
	time_t Date)
{	eoddata1__RESPONSE *_p = soap_new_eoddata1__RESPONSE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__RESPONSE::EXCHANGE = EXCHANGE;
		_p->eoddata1__RESPONSE::EXCHANGES = EXCHANGES;
		_p->eoddata1__RESPONSE::SYMBOL = SYMBOL;
		_p->eoddata1__RESPONSE::SYMBOLS = SYMBOLS;
		_p->eoddata1__RESPONSE::SYMBOLS2 = SYMBOLS2;
		_p->eoddata1__RESPONSE::QUOTE = QUOTE;
		_p->eoddata1__RESPONSE::QUOTES = QUOTES;
		_p->eoddata1__RESPONSE::QUOTES2 = QUOTES2;
		_p->eoddata1__RESPONSE::SPLITS = SPLITS;
		_p->eoddata1__RESPONSE::COUNTRIES = COUNTRIES;
		_p->eoddata1__RESPONSE::FUNDAMENTALS = FUNDAMENTALS;
		_p->eoddata1__RESPONSE::TECHNICALS = TECHNICALS;
		_p->eoddata1__RESPONSE::SYMBOLCHANGES = SYMBOLCHANGES;
		_p->eoddata1__RESPONSE::NEWSLIST = NEWSLIST;
		_p->eoddata1__RESPONSE::CHART = CHART;
		_p->eoddata1__RESPONSE::MEMBERSHIP = MEMBERSHIP;
		_p->eoddata1__RESPONSE::VERSION = VERSION;
		_p->eoddata1__RESPONSE::MONTHS = MONTHS;
		_p->eoddata1__RESPONSE::DATAFORMATS = DATAFORMATS;
		_p->eoddata1__RESPONSE::Source = Source;
		_p->eoddata1__RESPONSE::Message = Message;
		_p->eoddata1__RESPONSE::Date = Date;
	}
	return _p;
}

#ifndef soap_write_eoddata1__RESPONSE
#define soap_write_eoddata1__RESPONSE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:RESPONSE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__RESPONSE * SOAP_FMAC4 soap_get_eoddata1__RESPONSE(struct soap*, eoddata1__RESPONSE *, const char*, const char*);

#ifndef soap_read_eoddata1__RESPONSE
#define soap_read_eoddata1__RESPONSE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__RESPONSE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_eoddata1__LOGINRESPONSE
#define SOAP_TYPE_eoddata_eoddata1__LOGINRESPONSE (11)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eoddata1__LOGINRESPONSE(struct soap*, const char*, int, const eoddata1__LOGINRESPONSE *, const char*);
SOAP_FMAC3 eoddata1__LOGINRESPONSE * SOAP_FMAC4 soap_in_eoddata1__LOGINRESPONSE(struct soap*, const char*, eoddata1__LOGINRESPONSE *, const char*);
SOAP_FMAC1 eoddata1__LOGINRESPONSE * SOAP_FMAC2 soap_instantiate_eoddata1__LOGINRESPONSE(struct soap*, int, const char*, const char*, size_t*);

inline eoddata1__LOGINRESPONSE * soap_new_eoddata1__LOGINRESPONSE(struct soap *soap, int n = -1) { return soap_instantiate_eoddata1__LOGINRESPONSE(soap, n, NULL, NULL, NULL); }

inline eoddata1__LOGINRESPONSE * soap_new_req_eoddata1__LOGINRESPONSE(
	struct soap *soap,
	bool Header,
	bool Suffix)
{	eoddata1__LOGINRESPONSE *_p = soap_new_eoddata1__LOGINRESPONSE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__LOGINRESPONSE::Header = Header;
		_p->eoddata1__LOGINRESPONSE::Suffix = Suffix;
	}
	return _p;
}

inline eoddata1__LOGINRESPONSE * soap_new_set_eoddata1__LOGINRESPONSE(
	struct soap *soap,
	std::string *Message,
	std::string *Token,
	std::string *DataFormat,
	bool Header,
	bool Suffix)
{	eoddata1__LOGINRESPONSE *_p = soap_new_eoddata1__LOGINRESPONSE(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eoddata1__LOGINRESPONSE::Message = Message;
		_p->eoddata1__LOGINRESPONSE::Token = Token;
		_p->eoddata1__LOGINRESPONSE::DataFormat = DataFormat;
		_p->eoddata1__LOGINRESPONSE::Header = Header;
		_p->eoddata1__LOGINRESPONSE::Suffix = Suffix;
	}
	return _p;
}

#ifndef soap_write_eoddata1__LOGINRESPONSE
#define soap_write_eoddata1__LOGINRESPONSE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "eoddata1:LOGINRESPONSE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__LOGINRESPONSE * SOAP_FMAC4 soap_get_eoddata1__LOGINRESPONSE(struct soap*, eoddata1__LOGINRESPONSE *, const char*, const char*);

#ifndef soap_read_eoddata1__LOGINRESPONSE
#define soap_read_eoddata1__LOGINRESPONSE(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_eoddata1__LOGINRESPONSE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_SOAP_ENV__Fault
#define SOAP_TYPE_eoddata_SOAP_ENV__Fault (366)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_SOAP_ENV__Fault(soap, data), 0) || eoddata::soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (eoddata::soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_SOAP_ENV__Reason
#define SOAP_TYPE_eoddata_SOAP_ENV__Reason (365)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_SOAP_ENV__Reason(soap, data), 0) || eoddata::soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (eoddata::soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_SOAP_ENV__Detail
#define SOAP_TYPE_eoddata_SOAP_ENV__Detail (362)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_SOAP_ENV__Detail(soap, data), 0) || eoddata::soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (eoddata::soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_SOAP_ENV__Code
#define SOAP_TYPE_eoddata_SOAP_ENV__Code (360)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_SOAP_ENV__Code(soap, data), 0) || eoddata::soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (eoddata::soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_SOAP_ENV__Header
#define SOAP_TYPE_eoddata_SOAP_ENV__Header (359)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_SOAP_ENV__Header(soap, data), 0) || eoddata::soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (eoddata::soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_eoddata___eoddata1__ValidateAccess_
#define SOAP_TYPE_eoddata___eoddata1__ValidateAccess_ (358)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ValidateAccess_(struct soap*, struct __eoddata1__ValidateAccess_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ValidateAccess_(struct soap*, const struct __eoddata1__ValidateAccess_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ValidateAccess_(struct soap*, const char*, int, const struct __eoddata1__ValidateAccess_ *, const char*);
SOAP_FMAC3 struct __eoddata1__ValidateAccess_ * SOAP_FMAC4 soap_in___eoddata1__ValidateAccess_(struct soap*, const char*, struct __eoddata1__ValidateAccess_ *, const char*);
SOAP_FMAC1 struct __eoddata1__ValidateAccess_ * SOAP_FMAC2 soap_instantiate___eoddata1__ValidateAccess_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ValidateAccess_ * soap_new___eoddata1__ValidateAccess_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ValidateAccess_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ValidateAccess_ * soap_new_req___eoddata1__ValidateAccess_(
	struct soap *soap)
{	struct __eoddata1__ValidateAccess_ *_p = soap_new___eoddata1__ValidateAccess_(soap);
	if (_p)
	{	soap_default___eoddata1__ValidateAccess_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ValidateAccess_ * soap_new_set___eoddata1__ValidateAccess_(
	struct soap *soap,
	_eoddata1__ValidateAccess *eoddata1__ValidateAccess)
{	struct __eoddata1__ValidateAccess_ *_p = soap_new___eoddata1__ValidateAccess_(soap);
	if (_p)
	{	soap_default___eoddata1__ValidateAccess_(soap, _p);
		_p->eoddata1__ValidateAccess = eoddata1__ValidateAccess;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ValidateAccess_(struct soap*, const struct __eoddata1__ValidateAccess_ *, const char*, const char*);

#ifndef soap_write___eoddata1__ValidateAccess_
#define soap_write___eoddata1__ValidateAccess_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ValidateAccess_(soap, data), 0) || eoddata::soap_put___eoddata1__ValidateAccess_(soap, data, "-eoddata1:ValidateAccess", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ValidateAccess_ * SOAP_FMAC4 soap_get___eoddata1__ValidateAccess_(struct soap*, struct __eoddata1__ValidateAccess_ *, const char*, const char*);

#ifndef soap_read___eoddata1__ValidateAccess_
#define soap_read___eoddata1__ValidateAccess_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ValidateAccess_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ValidateAccess_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__UpdateDataFormat_
#define SOAP_TYPE_eoddata___eoddata1__UpdateDataFormat_ (356)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__UpdateDataFormat_(struct soap*, struct __eoddata1__UpdateDataFormat_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__UpdateDataFormat_(struct soap*, const struct __eoddata1__UpdateDataFormat_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__UpdateDataFormat_(struct soap*, const char*, int, const struct __eoddata1__UpdateDataFormat_ *, const char*);
SOAP_FMAC3 struct __eoddata1__UpdateDataFormat_ * SOAP_FMAC4 soap_in___eoddata1__UpdateDataFormat_(struct soap*, const char*, struct __eoddata1__UpdateDataFormat_ *, const char*);
SOAP_FMAC1 struct __eoddata1__UpdateDataFormat_ * SOAP_FMAC2 soap_instantiate___eoddata1__UpdateDataFormat_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__UpdateDataFormat_ * soap_new___eoddata1__UpdateDataFormat_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__UpdateDataFormat_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__UpdateDataFormat_ * soap_new_req___eoddata1__UpdateDataFormat_(
	struct soap *soap)
{	struct __eoddata1__UpdateDataFormat_ *_p = soap_new___eoddata1__UpdateDataFormat_(soap);
	if (_p)
	{	soap_default___eoddata1__UpdateDataFormat_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__UpdateDataFormat_ * soap_new_set___eoddata1__UpdateDataFormat_(
	struct soap *soap,
	_eoddata1__UpdateDataFormat *eoddata1__UpdateDataFormat)
{	struct __eoddata1__UpdateDataFormat_ *_p = soap_new___eoddata1__UpdateDataFormat_(soap);
	if (_p)
	{	soap_default___eoddata1__UpdateDataFormat_(soap, _p);
		_p->eoddata1__UpdateDataFormat = eoddata1__UpdateDataFormat;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__UpdateDataFormat_(struct soap*, const struct __eoddata1__UpdateDataFormat_ *, const char*, const char*);

#ifndef soap_write___eoddata1__UpdateDataFormat_
#define soap_write___eoddata1__UpdateDataFormat_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__UpdateDataFormat_(soap, data), 0) || eoddata::soap_put___eoddata1__UpdateDataFormat_(soap, data, "-eoddata1:UpdateDataFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__UpdateDataFormat_ * SOAP_FMAC4 soap_get___eoddata1__UpdateDataFormat_(struct soap*, struct __eoddata1__UpdateDataFormat_ *, const char*, const char*);

#ifndef soap_read___eoddata1__UpdateDataFormat_
#define soap_read___eoddata1__UpdateDataFormat_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__UpdateDataFormat_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__UpdateDataFormat_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__DataFormats_
#define SOAP_TYPE_eoddata___eoddata1__DataFormats_ (354)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__DataFormats_(struct soap*, struct __eoddata1__DataFormats_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__DataFormats_(struct soap*, const struct __eoddata1__DataFormats_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__DataFormats_(struct soap*, const char*, int, const struct __eoddata1__DataFormats_ *, const char*);
SOAP_FMAC3 struct __eoddata1__DataFormats_ * SOAP_FMAC4 soap_in___eoddata1__DataFormats_(struct soap*, const char*, struct __eoddata1__DataFormats_ *, const char*);
SOAP_FMAC1 struct __eoddata1__DataFormats_ * SOAP_FMAC2 soap_instantiate___eoddata1__DataFormats_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__DataFormats_ * soap_new___eoddata1__DataFormats_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__DataFormats_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__DataFormats_ * soap_new_req___eoddata1__DataFormats_(
	struct soap *soap)
{	struct __eoddata1__DataFormats_ *_p = soap_new___eoddata1__DataFormats_(soap);
	if (_p)
	{	soap_default___eoddata1__DataFormats_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__DataFormats_ * soap_new_set___eoddata1__DataFormats_(
	struct soap *soap,
	_eoddata1__DataFormats *eoddata1__DataFormats)
{	struct __eoddata1__DataFormats_ *_p = soap_new___eoddata1__DataFormats_(soap);
	if (_p)
	{	soap_default___eoddata1__DataFormats_(soap, _p);
		_p->eoddata1__DataFormats = eoddata1__DataFormats;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__DataFormats_(struct soap*, const struct __eoddata1__DataFormats_ *, const char*, const char*);

#ifndef soap_write___eoddata1__DataFormats_
#define soap_write___eoddata1__DataFormats_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__DataFormats_(soap, data), 0) || eoddata::soap_put___eoddata1__DataFormats_(soap, data, "-eoddata1:DataFormats", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__DataFormats_ * SOAP_FMAC4 soap_get___eoddata1__DataFormats_(struct soap*, struct __eoddata1__DataFormats_ *, const char*, const char*);

#ifndef soap_read___eoddata1__DataFormats_
#define soap_read___eoddata1__DataFormats_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__DataFormats_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__DataFormats_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__DataClientLatestVersion_
#define SOAP_TYPE_eoddata___eoddata1__DataClientLatestVersion_ (352)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__DataClientLatestVersion_(struct soap*, struct __eoddata1__DataClientLatestVersion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__DataClientLatestVersion_(struct soap*, const struct __eoddata1__DataClientLatestVersion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__DataClientLatestVersion_(struct soap*, const char*, int, const struct __eoddata1__DataClientLatestVersion_ *, const char*);
SOAP_FMAC3 struct __eoddata1__DataClientLatestVersion_ * SOAP_FMAC4 soap_in___eoddata1__DataClientLatestVersion_(struct soap*, const char*, struct __eoddata1__DataClientLatestVersion_ *, const char*);
SOAP_FMAC1 struct __eoddata1__DataClientLatestVersion_ * SOAP_FMAC2 soap_instantiate___eoddata1__DataClientLatestVersion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__DataClientLatestVersion_ * soap_new___eoddata1__DataClientLatestVersion_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__DataClientLatestVersion_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__DataClientLatestVersion_ * soap_new_req___eoddata1__DataClientLatestVersion_(
	struct soap *soap)
{	struct __eoddata1__DataClientLatestVersion_ *_p = soap_new___eoddata1__DataClientLatestVersion_(soap);
	if (_p)
	{	soap_default___eoddata1__DataClientLatestVersion_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__DataClientLatestVersion_ * soap_new_set___eoddata1__DataClientLatestVersion_(
	struct soap *soap,
	_eoddata1__DataClientLatestVersion *eoddata1__DataClientLatestVersion)
{	struct __eoddata1__DataClientLatestVersion_ *_p = soap_new___eoddata1__DataClientLatestVersion_(soap);
	if (_p)
	{	soap_default___eoddata1__DataClientLatestVersion_(soap, _p);
		_p->eoddata1__DataClientLatestVersion = eoddata1__DataClientLatestVersion;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__DataClientLatestVersion_(struct soap*, const struct __eoddata1__DataClientLatestVersion_ *, const char*, const char*);

#ifndef soap_write___eoddata1__DataClientLatestVersion_
#define soap_write___eoddata1__DataClientLatestVersion_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__DataClientLatestVersion_(soap, data), 0) || eoddata::soap_put___eoddata1__DataClientLatestVersion_(soap, data, "-eoddata1:DataClientLatestVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__DataClientLatestVersion_ * SOAP_FMAC4 soap_get___eoddata1__DataClientLatestVersion_(struct soap*, struct __eoddata1__DataClientLatestVersion_ *, const char*, const char*);

#ifndef soap_read___eoddata1__DataClientLatestVersion_
#define soap_read___eoddata1__DataClientLatestVersion_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__DataClientLatestVersion_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__DataClientLatestVersion_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolChangesByExchange_
#define SOAP_TYPE_eoddata___eoddata1__SymbolChangesByExchange_ (350)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolChangesByExchange_(struct soap*, struct __eoddata1__SymbolChangesByExchange_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolChangesByExchange_(struct soap*, const struct __eoddata1__SymbolChangesByExchange_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolChangesByExchange_(struct soap*, const char*, int, const struct __eoddata1__SymbolChangesByExchange_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolChangesByExchange_ * SOAP_FMAC4 soap_in___eoddata1__SymbolChangesByExchange_(struct soap*, const char*, struct __eoddata1__SymbolChangesByExchange_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolChangesByExchange_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolChangesByExchange_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolChangesByExchange_ * soap_new___eoddata1__SymbolChangesByExchange_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolChangesByExchange_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolChangesByExchange_ * soap_new_req___eoddata1__SymbolChangesByExchange_(
	struct soap *soap)
{	struct __eoddata1__SymbolChangesByExchange_ *_p = soap_new___eoddata1__SymbolChangesByExchange_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChangesByExchange_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolChangesByExchange_ * soap_new_set___eoddata1__SymbolChangesByExchange_(
	struct soap *soap,
	_eoddata1__SymbolChangesByExchange *eoddata1__SymbolChangesByExchange)
{	struct __eoddata1__SymbolChangesByExchange_ *_p = soap_new___eoddata1__SymbolChangesByExchange_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChangesByExchange_(soap, _p);
		_p->eoddata1__SymbolChangesByExchange = eoddata1__SymbolChangesByExchange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolChangesByExchange_(struct soap*, const struct __eoddata1__SymbolChangesByExchange_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolChangesByExchange_
#define soap_write___eoddata1__SymbolChangesByExchange_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolChangesByExchange_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolChangesByExchange_(soap, data, "-eoddata1:SymbolChangesByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolChangesByExchange_ * SOAP_FMAC4 soap_get___eoddata1__SymbolChangesByExchange_(struct soap*, struct __eoddata1__SymbolChangesByExchange_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolChangesByExchange_
#define soap_read___eoddata1__SymbolChangesByExchange_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolChangesByExchange_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolChangesByExchange_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod2_
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod2_ (348)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDatePeriod2_(struct soap*, struct __eoddata1__QuoteListByDatePeriod2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDatePeriod2_(struct soap*, const struct __eoddata1__QuoteListByDatePeriod2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDatePeriod2_(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDatePeriod2_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod2_ * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDatePeriod2_(struct soap*, const char*, struct __eoddata1__QuoteListByDatePeriod2_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDatePeriod2_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDatePeriod2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDatePeriod2_ * soap_new___eoddata1__QuoteListByDatePeriod2_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDatePeriod2_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDatePeriod2_ * soap_new_req___eoddata1__QuoteListByDatePeriod2_(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDatePeriod2_ *_p = soap_new___eoddata1__QuoteListByDatePeriod2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod2_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDatePeriod2_ * soap_new_set___eoddata1__QuoteListByDatePeriod2_(
	struct soap *soap,
	_eoddata1__QuoteListByDatePeriod2 *eoddata1__QuoteListByDatePeriod2)
{	struct __eoddata1__QuoteListByDatePeriod2_ *_p = soap_new___eoddata1__QuoteListByDatePeriod2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod2_(soap, _p);
		_p->eoddata1__QuoteListByDatePeriod2 = eoddata1__QuoteListByDatePeriod2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDatePeriod2_(struct soap*, const struct __eoddata1__QuoteListByDatePeriod2_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDatePeriod2_
#define soap_write___eoddata1__QuoteListByDatePeriod2_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDatePeriod2_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDatePeriod2_(soap, data, "-eoddata1:QuoteListByDatePeriod2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod2_ * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDatePeriod2_(struct soap*, struct __eoddata1__QuoteListByDatePeriod2_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDatePeriod2_
#define soap_read___eoddata1__QuoteListByDatePeriod2_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDatePeriod2_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDatePeriod2_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod_
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod_ (346)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDatePeriod_(struct soap*, struct __eoddata1__QuoteListByDatePeriod_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDatePeriod_(struct soap*, const struct __eoddata1__QuoteListByDatePeriod_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDatePeriod_(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDatePeriod_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod_ * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDatePeriod_(struct soap*, const char*, struct __eoddata1__QuoteListByDatePeriod_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDatePeriod_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDatePeriod_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDatePeriod_ * soap_new___eoddata1__QuoteListByDatePeriod_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDatePeriod_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDatePeriod_ * soap_new_req___eoddata1__QuoteListByDatePeriod_(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDatePeriod_ *_p = soap_new___eoddata1__QuoteListByDatePeriod_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDatePeriod_ * soap_new_set___eoddata1__QuoteListByDatePeriod_(
	struct soap *soap,
	_eoddata1__QuoteListByDatePeriod *eoddata1__QuoteListByDatePeriod)
{	struct __eoddata1__QuoteListByDatePeriod_ *_p = soap_new___eoddata1__QuoteListByDatePeriod_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod_(soap, _p);
		_p->eoddata1__QuoteListByDatePeriod = eoddata1__QuoteListByDatePeriod;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDatePeriod_(struct soap*, const struct __eoddata1__QuoteListByDatePeriod_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDatePeriod_
#define soap_write___eoddata1__QuoteListByDatePeriod_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDatePeriod_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDatePeriod_(soap, data, "-eoddata1:QuoteListByDatePeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod_ * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDatePeriod_(struct soap*, struct __eoddata1__QuoteListByDatePeriod_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDatePeriod_
#define soap_read___eoddata1__QuoteListByDatePeriod_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDatePeriod_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDatePeriod_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriodByDateRange_
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriodByDateRange_ (344)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, struct __eoddata1__SymbolHistoryPeriodByDateRange_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, const struct __eoddata1__SymbolHistoryPeriodByDateRange_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, const char*, int, const struct __eoddata1__SymbolHistoryPeriodByDateRange_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriodByDateRange_ * SOAP_FMAC4 soap_in___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, const char*, struct __eoddata1__SymbolHistoryPeriodByDateRange_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistoryPeriodByDateRange_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistoryPeriodByDateRange_ * soap_new___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistoryPeriodByDateRange_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistoryPeriodByDateRange_ * soap_new_req___eoddata1__SymbolHistoryPeriodByDateRange_(
	struct soap *soap)
{	struct __eoddata1__SymbolHistoryPeriodByDateRange_ *_p = soap_new___eoddata1__SymbolHistoryPeriodByDateRange_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriodByDateRange_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistoryPeriodByDateRange_ * soap_new_set___eoddata1__SymbolHistoryPeriodByDateRange_(
	struct soap *soap,
	_eoddata1__SymbolHistoryPeriodByDateRange *eoddata1__SymbolHistoryPeriodByDateRange)
{	struct __eoddata1__SymbolHistoryPeriodByDateRange_ *_p = soap_new___eoddata1__SymbolHistoryPeriodByDateRange_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriodByDateRange_(soap, _p);
		_p->eoddata1__SymbolHistoryPeriodByDateRange = eoddata1__SymbolHistoryPeriodByDateRange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, const struct __eoddata1__SymbolHistoryPeriodByDateRange_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistoryPeriodByDateRange_
#define soap_write___eoddata1__SymbolHistoryPeriodByDateRange_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistoryPeriodByDateRange_(soap, data, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriodByDateRange_ * SOAP_FMAC4 soap_get___eoddata1__SymbolHistoryPeriodByDateRange_(struct soap*, struct __eoddata1__SymbolHistoryPeriodByDateRange_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistoryPeriodByDateRange_
#define soap_read___eoddata1__SymbolHistoryPeriodByDateRange_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistoryPeriodByDateRange_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistoryPeriodByDateRange_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriod_
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriod_ (342)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistoryPeriod_(struct soap*, struct __eoddata1__SymbolHistoryPeriod_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistoryPeriod_(struct soap*, const struct __eoddata1__SymbolHistoryPeriod_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistoryPeriod_(struct soap*, const char*, int, const struct __eoddata1__SymbolHistoryPeriod_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriod_ * SOAP_FMAC4 soap_in___eoddata1__SymbolHistoryPeriod_(struct soap*, const char*, struct __eoddata1__SymbolHistoryPeriod_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistoryPeriod_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistoryPeriod_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistoryPeriod_ * soap_new___eoddata1__SymbolHistoryPeriod_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistoryPeriod_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistoryPeriod_ * soap_new_req___eoddata1__SymbolHistoryPeriod_(
	struct soap *soap)
{	struct __eoddata1__SymbolHistoryPeriod_ *_p = soap_new___eoddata1__SymbolHistoryPeriod_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriod_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistoryPeriod_ * soap_new_set___eoddata1__SymbolHistoryPeriod_(
	struct soap *soap,
	_eoddata1__SymbolHistoryPeriod *eoddata1__SymbolHistoryPeriod)
{	struct __eoddata1__SymbolHistoryPeriod_ *_p = soap_new___eoddata1__SymbolHistoryPeriod_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriod_(soap, _p);
		_p->eoddata1__SymbolHistoryPeriod = eoddata1__SymbolHistoryPeriod;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistoryPeriod_(struct soap*, const struct __eoddata1__SymbolHistoryPeriod_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistoryPeriod_
#define soap_write___eoddata1__SymbolHistoryPeriod_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistoryPeriod_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistoryPeriod_(soap, data, "-eoddata1:SymbolHistoryPeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriod_ * SOAP_FMAC4 soap_get___eoddata1__SymbolHistoryPeriod_(struct soap*, struct __eoddata1__SymbolHistoryPeriod_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistoryPeriod_
#define soap_read___eoddata1__SymbolHistoryPeriod_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistoryPeriod_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistoryPeriod_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__CountryList_
#define SOAP_TYPE_eoddata___eoddata1__CountryList_ (340)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__CountryList_(struct soap*, struct __eoddata1__CountryList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__CountryList_(struct soap*, const struct __eoddata1__CountryList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__CountryList_(struct soap*, const char*, int, const struct __eoddata1__CountryList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__CountryList_ * SOAP_FMAC4 soap_in___eoddata1__CountryList_(struct soap*, const char*, struct __eoddata1__CountryList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__CountryList_ * SOAP_FMAC2 soap_instantiate___eoddata1__CountryList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__CountryList_ * soap_new___eoddata1__CountryList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__CountryList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__CountryList_ * soap_new_req___eoddata1__CountryList_(
	struct soap *soap)
{	struct __eoddata1__CountryList_ *_p = soap_new___eoddata1__CountryList_(soap);
	if (_p)
	{	soap_default___eoddata1__CountryList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__CountryList_ * soap_new_set___eoddata1__CountryList_(
	struct soap *soap,
	_eoddata1__CountryList *eoddata1__CountryList)
{	struct __eoddata1__CountryList_ *_p = soap_new___eoddata1__CountryList_(soap);
	if (_p)
	{	soap_default___eoddata1__CountryList_(soap, _p);
		_p->eoddata1__CountryList = eoddata1__CountryList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__CountryList_(struct soap*, const struct __eoddata1__CountryList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__CountryList_
#define soap_write___eoddata1__CountryList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__CountryList_(soap, data), 0) || eoddata::soap_put___eoddata1__CountryList_(soap, data, "-eoddata1:CountryList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__CountryList_ * SOAP_FMAC4 soap_get___eoddata1__CountryList_(struct soap*, struct __eoddata1__CountryList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__CountryList_
#define soap_read___eoddata1__CountryList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__CountryList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__CountryList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SplitListBySymbol_
#define SOAP_TYPE_eoddata___eoddata1__SplitListBySymbol_ (338)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SplitListBySymbol_(struct soap*, struct __eoddata1__SplitListBySymbol_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SplitListBySymbol_(struct soap*, const struct __eoddata1__SplitListBySymbol_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SplitListBySymbol_(struct soap*, const char*, int, const struct __eoddata1__SplitListBySymbol_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SplitListBySymbol_ * SOAP_FMAC4 soap_in___eoddata1__SplitListBySymbol_(struct soap*, const char*, struct __eoddata1__SplitListBySymbol_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SplitListBySymbol_ * SOAP_FMAC2 soap_instantiate___eoddata1__SplitListBySymbol_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SplitListBySymbol_ * soap_new___eoddata1__SplitListBySymbol_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SplitListBySymbol_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SplitListBySymbol_ * soap_new_req___eoddata1__SplitListBySymbol_(
	struct soap *soap)
{	struct __eoddata1__SplitListBySymbol_ *_p = soap_new___eoddata1__SplitListBySymbol_(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListBySymbol_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SplitListBySymbol_ * soap_new_set___eoddata1__SplitListBySymbol_(
	struct soap *soap,
	_eoddata1__SplitListBySymbol *eoddata1__SplitListBySymbol)
{	struct __eoddata1__SplitListBySymbol_ *_p = soap_new___eoddata1__SplitListBySymbol_(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListBySymbol_(soap, _p);
		_p->eoddata1__SplitListBySymbol = eoddata1__SplitListBySymbol;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SplitListBySymbol_(struct soap*, const struct __eoddata1__SplitListBySymbol_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SplitListBySymbol_
#define soap_write___eoddata1__SplitListBySymbol_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SplitListBySymbol_(soap, data), 0) || eoddata::soap_put___eoddata1__SplitListBySymbol_(soap, data, "-eoddata1:SplitListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SplitListBySymbol_ * SOAP_FMAC4 soap_get___eoddata1__SplitListBySymbol_(struct soap*, struct __eoddata1__SplitListBySymbol_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SplitListBySymbol_
#define soap_read___eoddata1__SplitListBySymbol_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SplitListBySymbol_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SplitListBySymbol_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SplitListByExchange_
#define SOAP_TYPE_eoddata___eoddata1__SplitListByExchange_ (336)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SplitListByExchange_(struct soap*, struct __eoddata1__SplitListByExchange_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SplitListByExchange_(struct soap*, const struct __eoddata1__SplitListByExchange_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SplitListByExchange_(struct soap*, const char*, int, const struct __eoddata1__SplitListByExchange_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SplitListByExchange_ * SOAP_FMAC4 soap_in___eoddata1__SplitListByExchange_(struct soap*, const char*, struct __eoddata1__SplitListByExchange_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SplitListByExchange_ * SOAP_FMAC2 soap_instantiate___eoddata1__SplitListByExchange_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SplitListByExchange_ * soap_new___eoddata1__SplitListByExchange_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SplitListByExchange_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SplitListByExchange_ * soap_new_req___eoddata1__SplitListByExchange_(
	struct soap *soap)
{	struct __eoddata1__SplitListByExchange_ *_p = soap_new___eoddata1__SplitListByExchange_(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListByExchange_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SplitListByExchange_ * soap_new_set___eoddata1__SplitListByExchange_(
	struct soap *soap,
	_eoddata1__SplitListByExchange *eoddata1__SplitListByExchange)
{	struct __eoddata1__SplitListByExchange_ *_p = soap_new___eoddata1__SplitListByExchange_(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListByExchange_(soap, _p);
		_p->eoddata1__SplitListByExchange = eoddata1__SplitListByExchange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SplitListByExchange_(struct soap*, const struct __eoddata1__SplitListByExchange_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SplitListByExchange_
#define soap_write___eoddata1__SplitListByExchange_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SplitListByExchange_(soap, data), 0) || eoddata::soap_put___eoddata1__SplitListByExchange_(soap, data, "-eoddata1:SplitListByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SplitListByExchange_ * SOAP_FMAC4 soap_get___eoddata1__SplitListByExchange_(struct soap*, struct __eoddata1__SplitListByExchange_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SplitListByExchange_
#define soap_read___eoddata1__SplitListByExchange_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SplitListByExchange_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SplitListByExchange_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeMonths_
#define SOAP_TYPE_eoddata___eoddata1__ExchangeMonths_ (334)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeMonths_(struct soap*, struct __eoddata1__ExchangeMonths_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeMonths_(struct soap*, const struct __eoddata1__ExchangeMonths_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeMonths_(struct soap*, const char*, int, const struct __eoddata1__ExchangeMonths_ *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeMonths_ * SOAP_FMAC4 soap_in___eoddata1__ExchangeMonths_(struct soap*, const char*, struct __eoddata1__ExchangeMonths_ *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeMonths_ * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeMonths_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeMonths_ * soap_new___eoddata1__ExchangeMonths_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeMonths_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeMonths_ * soap_new_req___eoddata1__ExchangeMonths_(
	struct soap *soap)
{	struct __eoddata1__ExchangeMonths_ *_p = soap_new___eoddata1__ExchangeMonths_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeMonths_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeMonths_ * soap_new_set___eoddata1__ExchangeMonths_(
	struct soap *soap,
	_eoddata1__ExchangeMonths *eoddata1__ExchangeMonths)
{	struct __eoddata1__ExchangeMonths_ *_p = soap_new___eoddata1__ExchangeMonths_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeMonths_(soap, _p);
		_p->eoddata1__ExchangeMonths = eoddata1__ExchangeMonths;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeMonths_(struct soap*, const struct __eoddata1__ExchangeMonths_ *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeMonths_
#define soap_write___eoddata1__ExchangeMonths_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeMonths_(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeMonths_(soap, data, "-eoddata1:ExchangeMonths", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeMonths_ * SOAP_FMAC4 soap_get___eoddata1__ExchangeMonths_(struct soap*, struct __eoddata1__ExchangeMonths_ *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeMonths_
#define soap_read___eoddata1__ExchangeMonths_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeMonths_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeMonths_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolChart_
#define SOAP_TYPE_eoddata___eoddata1__SymbolChart_ (332)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolChart_(struct soap*, struct __eoddata1__SymbolChart_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolChart_(struct soap*, const struct __eoddata1__SymbolChart_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolChart_(struct soap*, const char*, int, const struct __eoddata1__SymbolChart_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolChart_ * SOAP_FMAC4 soap_in___eoddata1__SymbolChart_(struct soap*, const char*, struct __eoddata1__SymbolChart_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolChart_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolChart_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolChart_ * soap_new___eoddata1__SymbolChart_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolChart_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolChart_ * soap_new_req___eoddata1__SymbolChart_(
	struct soap *soap)
{	struct __eoddata1__SymbolChart_ *_p = soap_new___eoddata1__SymbolChart_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChart_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolChart_ * soap_new_set___eoddata1__SymbolChart_(
	struct soap *soap,
	_eoddata1__SymbolChart *eoddata1__SymbolChart)
{	struct __eoddata1__SymbolChart_ *_p = soap_new___eoddata1__SymbolChart_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChart_(soap, _p);
		_p->eoddata1__SymbolChart = eoddata1__SymbolChart;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolChart_(struct soap*, const struct __eoddata1__SymbolChart_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolChart_
#define soap_write___eoddata1__SymbolChart_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolChart_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolChart_(soap, data, "-eoddata1:SymbolChart", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolChart_ * SOAP_FMAC4 soap_get___eoddata1__SymbolChart_(struct soap*, struct __eoddata1__SymbolChart_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolChart_
#define soap_read___eoddata1__SymbolChart_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolChart_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolChart_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Top10Losses_
#define SOAP_TYPE_eoddata___eoddata1__Top10Losses_ (330)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Top10Losses_(struct soap*, struct __eoddata1__Top10Losses_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Top10Losses_(struct soap*, const struct __eoddata1__Top10Losses_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Top10Losses_(struct soap*, const char*, int, const struct __eoddata1__Top10Losses_ *, const char*);
SOAP_FMAC3 struct __eoddata1__Top10Losses_ * SOAP_FMAC4 soap_in___eoddata1__Top10Losses_(struct soap*, const char*, struct __eoddata1__Top10Losses_ *, const char*);
SOAP_FMAC1 struct __eoddata1__Top10Losses_ * SOAP_FMAC2 soap_instantiate___eoddata1__Top10Losses_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Top10Losses_ * soap_new___eoddata1__Top10Losses_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Top10Losses_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Top10Losses_ * soap_new_req___eoddata1__Top10Losses_(
	struct soap *soap)
{	struct __eoddata1__Top10Losses_ *_p = soap_new___eoddata1__Top10Losses_(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Losses_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Top10Losses_ * soap_new_set___eoddata1__Top10Losses_(
	struct soap *soap,
	_eoddata1__Top10Losses *eoddata1__Top10Losses)
{	struct __eoddata1__Top10Losses_ *_p = soap_new___eoddata1__Top10Losses_(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Losses_(soap, _p);
		_p->eoddata1__Top10Losses = eoddata1__Top10Losses;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Top10Losses_(struct soap*, const struct __eoddata1__Top10Losses_ *, const char*, const char*);

#ifndef soap_write___eoddata1__Top10Losses_
#define soap_write___eoddata1__Top10Losses_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Top10Losses_(soap, data), 0) || eoddata::soap_put___eoddata1__Top10Losses_(soap, data, "-eoddata1:Top10Losses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Top10Losses_ * SOAP_FMAC4 soap_get___eoddata1__Top10Losses_(struct soap*, struct __eoddata1__Top10Losses_ *, const char*, const char*);

#ifndef soap_read___eoddata1__Top10Losses_
#define soap_read___eoddata1__Top10Losses_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Top10Losses_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Top10Losses_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Top10Gains_
#define SOAP_TYPE_eoddata___eoddata1__Top10Gains_ (328)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Top10Gains_(struct soap*, struct __eoddata1__Top10Gains_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Top10Gains_(struct soap*, const struct __eoddata1__Top10Gains_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Top10Gains_(struct soap*, const char*, int, const struct __eoddata1__Top10Gains_ *, const char*);
SOAP_FMAC3 struct __eoddata1__Top10Gains_ * SOAP_FMAC4 soap_in___eoddata1__Top10Gains_(struct soap*, const char*, struct __eoddata1__Top10Gains_ *, const char*);
SOAP_FMAC1 struct __eoddata1__Top10Gains_ * SOAP_FMAC2 soap_instantiate___eoddata1__Top10Gains_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Top10Gains_ * soap_new___eoddata1__Top10Gains_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Top10Gains_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Top10Gains_ * soap_new_req___eoddata1__Top10Gains_(
	struct soap *soap)
{	struct __eoddata1__Top10Gains_ *_p = soap_new___eoddata1__Top10Gains_(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Gains_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Top10Gains_ * soap_new_set___eoddata1__Top10Gains_(
	struct soap *soap,
	_eoddata1__Top10Gains *eoddata1__Top10Gains)
{	struct __eoddata1__Top10Gains_ *_p = soap_new___eoddata1__Top10Gains_(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Gains_(soap, _p);
		_p->eoddata1__Top10Gains = eoddata1__Top10Gains;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Top10Gains_(struct soap*, const struct __eoddata1__Top10Gains_ *, const char*, const char*);

#ifndef soap_write___eoddata1__Top10Gains_
#define soap_write___eoddata1__Top10Gains_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Top10Gains_(soap, data), 0) || eoddata::soap_put___eoddata1__Top10Gains_(soap, data, "-eoddata1:Top10Gains", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Top10Gains_ * SOAP_FMAC4 soap_get___eoddata1__Top10Gains_(struct soap*, struct __eoddata1__Top10Gains_ *, const char*, const char*);

#ifndef soap_read___eoddata1__Top10Gains_
#define soap_read___eoddata1__Top10Gains_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Top10Gains_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Top10Gains_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistory_
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistory_ (326)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistory_(struct soap*, struct __eoddata1__SymbolHistory_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistory_(struct soap*, const struct __eoddata1__SymbolHistory_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistory_(struct soap*, const char*, int, const struct __eoddata1__SymbolHistory_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistory_ * SOAP_FMAC4 soap_in___eoddata1__SymbolHistory_(struct soap*, const char*, struct __eoddata1__SymbolHistory_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistory_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistory_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistory_ * soap_new___eoddata1__SymbolHistory_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistory_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistory_ * soap_new_req___eoddata1__SymbolHistory_(
	struct soap *soap)
{	struct __eoddata1__SymbolHistory_ *_p = soap_new___eoddata1__SymbolHistory_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistory_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistory_ * soap_new_set___eoddata1__SymbolHistory_(
	struct soap *soap,
	_eoddata1__SymbolHistory *eoddata1__SymbolHistory)
{	struct __eoddata1__SymbolHistory_ *_p = soap_new___eoddata1__SymbolHistory_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistory_(soap, _p);
		_p->eoddata1__SymbolHistory = eoddata1__SymbolHistory;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistory_(struct soap*, const struct __eoddata1__SymbolHistory_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistory_
#define soap_write___eoddata1__SymbolHistory_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistory_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistory_(soap, data, "-eoddata1:SymbolHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistory_ * SOAP_FMAC4 soap_get___eoddata1__SymbolHistory_(struct soap*, struct __eoddata1__SymbolHistory_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistory_
#define soap_read___eoddata1__SymbolHistory_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistory_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistory_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDate2_
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDate2_ (324)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDate2_(struct soap*, struct __eoddata1__QuoteListByDate2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDate2_(struct soap*, const struct __eoddata1__QuoteListByDate2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDate2_(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDate2_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDate2_ * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDate2_(struct soap*, const char*, struct __eoddata1__QuoteListByDate2_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDate2_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDate2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDate2_ * soap_new___eoddata1__QuoteListByDate2_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDate2_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDate2_ * soap_new_req___eoddata1__QuoteListByDate2_(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDate2_ *_p = soap_new___eoddata1__QuoteListByDate2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate2_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDate2_ * soap_new_set___eoddata1__QuoteListByDate2_(
	struct soap *soap,
	_eoddata1__QuoteListByDate2 *eoddata1__QuoteListByDate2)
{	struct __eoddata1__QuoteListByDate2_ *_p = soap_new___eoddata1__QuoteListByDate2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate2_(soap, _p);
		_p->eoddata1__QuoteListByDate2 = eoddata1__QuoteListByDate2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDate2_(struct soap*, const struct __eoddata1__QuoteListByDate2_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDate2_
#define soap_write___eoddata1__QuoteListByDate2_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDate2_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDate2_(soap, data, "-eoddata1:QuoteListByDate2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDate2_ * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDate2_(struct soap*, struct __eoddata1__QuoteListByDate2_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDate2_
#define soap_read___eoddata1__QuoteListByDate2_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDate2_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDate2_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDate_
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDate_ (322)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDate_(struct soap*, struct __eoddata1__QuoteListByDate_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDate_(struct soap*, const struct __eoddata1__QuoteListByDate_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDate_(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDate_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDate_ * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDate_(struct soap*, const char*, struct __eoddata1__QuoteListByDate_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDate_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDate_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDate_ * soap_new___eoddata1__QuoteListByDate_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDate_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDate_ * soap_new_req___eoddata1__QuoteListByDate_(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDate_ *_p = soap_new___eoddata1__QuoteListByDate_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDate_ * soap_new_set___eoddata1__QuoteListByDate_(
	struct soap *soap,
	_eoddata1__QuoteListByDate *eoddata1__QuoteListByDate)
{	struct __eoddata1__QuoteListByDate_ *_p = soap_new___eoddata1__QuoteListByDate_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate_(soap, _p);
		_p->eoddata1__QuoteListByDate = eoddata1__QuoteListByDate;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDate_(struct soap*, const struct __eoddata1__QuoteListByDate_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDate_
#define soap_write___eoddata1__QuoteListByDate_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDate_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDate_(soap, data, "-eoddata1:QuoteListByDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDate_ * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDate_(struct soap*, struct __eoddata1__QuoteListByDate_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDate_
#define soap_read___eoddata1__QuoteListByDate_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDate_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDate_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__TechnicalList_
#define SOAP_TYPE_eoddata___eoddata1__TechnicalList_ (320)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__TechnicalList_(struct soap*, struct __eoddata1__TechnicalList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__TechnicalList_(struct soap*, const struct __eoddata1__TechnicalList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__TechnicalList_(struct soap*, const char*, int, const struct __eoddata1__TechnicalList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__TechnicalList_ * SOAP_FMAC4 soap_in___eoddata1__TechnicalList_(struct soap*, const char*, struct __eoddata1__TechnicalList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__TechnicalList_ * SOAP_FMAC2 soap_instantiate___eoddata1__TechnicalList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__TechnicalList_ * soap_new___eoddata1__TechnicalList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__TechnicalList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__TechnicalList_ * soap_new_req___eoddata1__TechnicalList_(
	struct soap *soap)
{	struct __eoddata1__TechnicalList_ *_p = soap_new___eoddata1__TechnicalList_(soap);
	if (_p)
	{	soap_default___eoddata1__TechnicalList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__TechnicalList_ * soap_new_set___eoddata1__TechnicalList_(
	struct soap *soap,
	_eoddata1__TechnicalList *eoddata1__TechnicalList)
{	struct __eoddata1__TechnicalList_ *_p = soap_new___eoddata1__TechnicalList_(soap);
	if (_p)
	{	soap_default___eoddata1__TechnicalList_(soap, _p);
		_p->eoddata1__TechnicalList = eoddata1__TechnicalList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__TechnicalList_(struct soap*, const struct __eoddata1__TechnicalList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__TechnicalList_
#define soap_write___eoddata1__TechnicalList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__TechnicalList_(soap, data), 0) || eoddata::soap_put___eoddata1__TechnicalList_(soap, data, "-eoddata1:TechnicalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__TechnicalList_ * SOAP_FMAC4 soap_get___eoddata1__TechnicalList_(struct soap*, struct __eoddata1__TechnicalList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__TechnicalList_
#define soap_read___eoddata1__TechnicalList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__TechnicalList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__TechnicalList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__FundamentalList_
#define SOAP_TYPE_eoddata___eoddata1__FundamentalList_ (318)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__FundamentalList_(struct soap*, struct __eoddata1__FundamentalList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__FundamentalList_(struct soap*, const struct __eoddata1__FundamentalList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__FundamentalList_(struct soap*, const char*, int, const struct __eoddata1__FundamentalList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__FundamentalList_ * SOAP_FMAC4 soap_in___eoddata1__FundamentalList_(struct soap*, const char*, struct __eoddata1__FundamentalList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__FundamentalList_ * SOAP_FMAC2 soap_instantiate___eoddata1__FundamentalList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__FundamentalList_ * soap_new___eoddata1__FundamentalList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__FundamentalList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__FundamentalList_ * soap_new_req___eoddata1__FundamentalList_(
	struct soap *soap)
{	struct __eoddata1__FundamentalList_ *_p = soap_new___eoddata1__FundamentalList_(soap);
	if (_p)
	{	soap_default___eoddata1__FundamentalList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__FundamentalList_ * soap_new_set___eoddata1__FundamentalList_(
	struct soap *soap,
	_eoddata1__FundamentalList *eoddata1__FundamentalList)
{	struct __eoddata1__FundamentalList_ *_p = soap_new___eoddata1__FundamentalList_(soap);
	if (_p)
	{	soap_default___eoddata1__FundamentalList_(soap, _p);
		_p->eoddata1__FundamentalList = eoddata1__FundamentalList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__FundamentalList_(struct soap*, const struct __eoddata1__FundamentalList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__FundamentalList_
#define soap_write___eoddata1__FundamentalList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__FundamentalList_(soap, data), 0) || eoddata::soap_put___eoddata1__FundamentalList_(soap, data, "-eoddata1:FundamentalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__FundamentalList_ * SOAP_FMAC4 soap_get___eoddata1__FundamentalList_(struct soap*, struct __eoddata1__FundamentalList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__FundamentalList_
#define soap_read___eoddata1__FundamentalList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__FundamentalList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__FundamentalList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__NewsListBySymbol_
#define SOAP_TYPE_eoddata___eoddata1__NewsListBySymbol_ (316)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__NewsListBySymbol_(struct soap*, struct __eoddata1__NewsListBySymbol_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__NewsListBySymbol_(struct soap*, const struct __eoddata1__NewsListBySymbol_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__NewsListBySymbol_(struct soap*, const char*, int, const struct __eoddata1__NewsListBySymbol_ *, const char*);
SOAP_FMAC3 struct __eoddata1__NewsListBySymbol_ * SOAP_FMAC4 soap_in___eoddata1__NewsListBySymbol_(struct soap*, const char*, struct __eoddata1__NewsListBySymbol_ *, const char*);
SOAP_FMAC1 struct __eoddata1__NewsListBySymbol_ * SOAP_FMAC2 soap_instantiate___eoddata1__NewsListBySymbol_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__NewsListBySymbol_ * soap_new___eoddata1__NewsListBySymbol_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__NewsListBySymbol_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__NewsListBySymbol_ * soap_new_req___eoddata1__NewsListBySymbol_(
	struct soap *soap)
{	struct __eoddata1__NewsListBySymbol_ *_p = soap_new___eoddata1__NewsListBySymbol_(soap);
	if (_p)
	{	soap_default___eoddata1__NewsListBySymbol_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__NewsListBySymbol_ * soap_new_set___eoddata1__NewsListBySymbol_(
	struct soap *soap,
	_eoddata1__NewsListBySymbol *eoddata1__NewsListBySymbol)
{	struct __eoddata1__NewsListBySymbol_ *_p = soap_new___eoddata1__NewsListBySymbol_(soap);
	if (_p)
	{	soap_default___eoddata1__NewsListBySymbol_(soap, _p);
		_p->eoddata1__NewsListBySymbol = eoddata1__NewsListBySymbol;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__NewsListBySymbol_(struct soap*, const struct __eoddata1__NewsListBySymbol_ *, const char*, const char*);

#ifndef soap_write___eoddata1__NewsListBySymbol_
#define soap_write___eoddata1__NewsListBySymbol_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__NewsListBySymbol_(soap, data), 0) || eoddata::soap_put___eoddata1__NewsListBySymbol_(soap, data, "-eoddata1:NewsListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__NewsListBySymbol_ * SOAP_FMAC4 soap_get___eoddata1__NewsListBySymbol_(struct soap*, struct __eoddata1__NewsListBySymbol_ *, const char*, const char*);

#ifndef soap_read___eoddata1__NewsListBySymbol_
#define soap_read___eoddata1__NewsListBySymbol_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__NewsListBySymbol_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__NewsListBySymbol_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__NewsList_
#define SOAP_TYPE_eoddata___eoddata1__NewsList_ (314)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__NewsList_(struct soap*, struct __eoddata1__NewsList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__NewsList_(struct soap*, const struct __eoddata1__NewsList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__NewsList_(struct soap*, const char*, int, const struct __eoddata1__NewsList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__NewsList_ * SOAP_FMAC4 soap_in___eoddata1__NewsList_(struct soap*, const char*, struct __eoddata1__NewsList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__NewsList_ * SOAP_FMAC2 soap_instantiate___eoddata1__NewsList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__NewsList_ * soap_new___eoddata1__NewsList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__NewsList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__NewsList_ * soap_new_req___eoddata1__NewsList_(
	struct soap *soap)
{	struct __eoddata1__NewsList_ *_p = soap_new___eoddata1__NewsList_(soap);
	if (_p)
	{	soap_default___eoddata1__NewsList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__NewsList_ * soap_new_set___eoddata1__NewsList_(
	struct soap *soap,
	_eoddata1__NewsList *eoddata1__NewsList)
{	struct __eoddata1__NewsList_ *_p = soap_new___eoddata1__NewsList_(soap);
	if (_p)
	{	soap_default___eoddata1__NewsList_(soap, _p);
		_p->eoddata1__NewsList = eoddata1__NewsList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__NewsList_(struct soap*, const struct __eoddata1__NewsList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__NewsList_
#define soap_write___eoddata1__NewsList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__NewsList_(soap, data), 0) || eoddata::soap_put___eoddata1__NewsList_(soap, data, "-eoddata1:NewsList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__NewsList_ * SOAP_FMAC4 soap_get___eoddata1__NewsList_(struct soap*, struct __eoddata1__NewsList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__NewsList_
#define soap_read___eoddata1__NewsList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__NewsList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__NewsList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteList_
#define SOAP_TYPE_eoddata___eoddata1__QuoteList_ (312)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteList_(struct soap*, struct __eoddata1__QuoteList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteList_(struct soap*, const struct __eoddata1__QuoteList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteList_(struct soap*, const char*, int, const struct __eoddata1__QuoteList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteList_ * SOAP_FMAC4 soap_in___eoddata1__QuoteList_(struct soap*, const char*, struct __eoddata1__QuoteList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteList_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteList_ * soap_new___eoddata1__QuoteList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteList_ * soap_new_req___eoddata1__QuoteList_(
	struct soap *soap)
{	struct __eoddata1__QuoteList_ *_p = soap_new___eoddata1__QuoteList_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteList_ * soap_new_set___eoddata1__QuoteList_(
	struct soap *soap,
	_eoddata1__QuoteList *eoddata1__QuoteList)
{	struct __eoddata1__QuoteList_ *_p = soap_new___eoddata1__QuoteList_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList_(soap, _p);
		_p->eoddata1__QuoteList = eoddata1__QuoteList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteList_(struct soap*, const struct __eoddata1__QuoteList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteList_
#define soap_write___eoddata1__QuoteList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteList_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteList_(soap, data, "-eoddata1:QuoteList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteList_ * SOAP_FMAC4 soap_get___eoddata1__QuoteList_(struct soap*, struct __eoddata1__QuoteList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteList_
#define soap_read___eoddata1__QuoteList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolGet_
#define SOAP_TYPE_eoddata___eoddata1__SymbolGet_ (310)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolGet_(struct soap*, struct __eoddata1__SymbolGet_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolGet_(struct soap*, const struct __eoddata1__SymbolGet_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolGet_(struct soap*, const char*, int, const struct __eoddata1__SymbolGet_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolGet_ * SOAP_FMAC4 soap_in___eoddata1__SymbolGet_(struct soap*, const char*, struct __eoddata1__SymbolGet_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolGet_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolGet_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolGet_ * soap_new___eoddata1__SymbolGet_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolGet_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolGet_ * soap_new_req___eoddata1__SymbolGet_(
	struct soap *soap)
{	struct __eoddata1__SymbolGet_ *_p = soap_new___eoddata1__SymbolGet_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolGet_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolGet_ * soap_new_set___eoddata1__SymbolGet_(
	struct soap *soap,
	_eoddata1__SymbolGet *eoddata1__SymbolGet)
{	struct __eoddata1__SymbolGet_ *_p = soap_new___eoddata1__SymbolGet_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolGet_(soap, _p);
		_p->eoddata1__SymbolGet = eoddata1__SymbolGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolGet_(struct soap*, const struct __eoddata1__SymbolGet_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolGet_
#define soap_write___eoddata1__SymbolGet_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolGet_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolGet_(soap, data, "-eoddata1:SymbolGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolGet_ * SOAP_FMAC4 soap_get___eoddata1__SymbolGet_(struct soap*, struct __eoddata1__SymbolGet_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolGet_
#define soap_read___eoddata1__SymbolGet_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolGet_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolGet_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteList2_
#define SOAP_TYPE_eoddata___eoddata1__QuoteList2_ (308)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteList2_(struct soap*, struct __eoddata1__QuoteList2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteList2_(struct soap*, const struct __eoddata1__QuoteList2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteList2_(struct soap*, const char*, int, const struct __eoddata1__QuoteList2_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteList2_ * SOAP_FMAC4 soap_in___eoddata1__QuoteList2_(struct soap*, const char*, struct __eoddata1__QuoteList2_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteList2_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteList2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteList2_ * soap_new___eoddata1__QuoteList2_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteList2_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteList2_ * soap_new_req___eoddata1__QuoteList2_(
	struct soap *soap)
{	struct __eoddata1__QuoteList2_ *_p = soap_new___eoddata1__QuoteList2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList2_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteList2_ * soap_new_set___eoddata1__QuoteList2_(
	struct soap *soap,
	_eoddata1__QuoteList2 *eoddata1__QuoteList2)
{	struct __eoddata1__QuoteList2_ *_p = soap_new___eoddata1__QuoteList2_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList2_(soap, _p);
		_p->eoddata1__QuoteList2 = eoddata1__QuoteList2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteList2_(struct soap*, const struct __eoddata1__QuoteList2_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteList2_
#define soap_write___eoddata1__QuoteList2_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteList2_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteList2_(soap, data, "-eoddata1:QuoteList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteList2_ * SOAP_FMAC4 soap_get___eoddata1__QuoteList2_(struct soap*, struct __eoddata1__QuoteList2_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteList2_
#define soap_read___eoddata1__QuoteList2_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteList2_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteList2_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteGet_
#define SOAP_TYPE_eoddata___eoddata1__QuoteGet_ (306)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteGet_(struct soap*, struct __eoddata1__QuoteGet_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteGet_(struct soap*, const struct __eoddata1__QuoteGet_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteGet_(struct soap*, const char*, int, const struct __eoddata1__QuoteGet_ *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteGet_ * SOAP_FMAC4 soap_in___eoddata1__QuoteGet_(struct soap*, const char*, struct __eoddata1__QuoteGet_ *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteGet_ * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteGet_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteGet_ * soap_new___eoddata1__QuoteGet_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteGet_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteGet_ * soap_new_req___eoddata1__QuoteGet_(
	struct soap *soap)
{	struct __eoddata1__QuoteGet_ *_p = soap_new___eoddata1__QuoteGet_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteGet_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteGet_ * soap_new_set___eoddata1__QuoteGet_(
	struct soap *soap,
	_eoddata1__QuoteGet *eoddata1__QuoteGet)
{	struct __eoddata1__QuoteGet_ *_p = soap_new___eoddata1__QuoteGet_(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteGet_(soap, _p);
		_p->eoddata1__QuoteGet = eoddata1__QuoteGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteGet_(struct soap*, const struct __eoddata1__QuoteGet_ *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteGet_
#define soap_write___eoddata1__QuoteGet_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteGet_(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteGet_(soap, data, "-eoddata1:QuoteGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteGet_ * SOAP_FMAC4 soap_get___eoddata1__QuoteGet_(struct soap*, struct __eoddata1__QuoteGet_ *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteGet_
#define soap_read___eoddata1__QuoteGet_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteGet_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteGet_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolList2_
#define SOAP_TYPE_eoddata___eoddata1__SymbolList2_ (304)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolList2_(struct soap*, struct __eoddata1__SymbolList2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolList2_(struct soap*, const struct __eoddata1__SymbolList2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolList2_(struct soap*, const char*, int, const struct __eoddata1__SymbolList2_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolList2_ * SOAP_FMAC4 soap_in___eoddata1__SymbolList2_(struct soap*, const char*, struct __eoddata1__SymbolList2_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolList2_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolList2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolList2_ * soap_new___eoddata1__SymbolList2_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolList2_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolList2_ * soap_new_req___eoddata1__SymbolList2_(
	struct soap *soap)
{	struct __eoddata1__SymbolList2_ *_p = soap_new___eoddata1__SymbolList2_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList2_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolList2_ * soap_new_set___eoddata1__SymbolList2_(
	struct soap *soap,
	_eoddata1__SymbolList2 *eoddata1__SymbolList2)
{	struct __eoddata1__SymbolList2_ *_p = soap_new___eoddata1__SymbolList2_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList2_(soap, _p);
		_p->eoddata1__SymbolList2 = eoddata1__SymbolList2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolList2_(struct soap*, const struct __eoddata1__SymbolList2_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolList2_
#define soap_write___eoddata1__SymbolList2_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolList2_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolList2_(soap, data, "-eoddata1:SymbolList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolList2_ * SOAP_FMAC4 soap_get___eoddata1__SymbolList2_(struct soap*, struct __eoddata1__SymbolList2_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolList2_
#define soap_read___eoddata1__SymbolList2_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolList2_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolList2_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolList_
#define SOAP_TYPE_eoddata___eoddata1__SymbolList_ (302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolList_(struct soap*, struct __eoddata1__SymbolList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolList_(struct soap*, const struct __eoddata1__SymbolList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolList_(struct soap*, const char*, int, const struct __eoddata1__SymbolList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolList_ * SOAP_FMAC4 soap_in___eoddata1__SymbolList_(struct soap*, const char*, struct __eoddata1__SymbolList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolList_ * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolList_ * soap_new___eoddata1__SymbolList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolList_ * soap_new_req___eoddata1__SymbolList_(
	struct soap *soap)
{	struct __eoddata1__SymbolList_ *_p = soap_new___eoddata1__SymbolList_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolList_ * soap_new_set___eoddata1__SymbolList_(
	struct soap *soap,
	_eoddata1__SymbolList *eoddata1__SymbolList)
{	struct __eoddata1__SymbolList_ *_p = soap_new___eoddata1__SymbolList_(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList_(soap, _p);
		_p->eoddata1__SymbolList = eoddata1__SymbolList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolList_(struct soap*, const struct __eoddata1__SymbolList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolList_
#define soap_write___eoddata1__SymbolList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolList_(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolList_(soap, data, "-eoddata1:SymbolList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolList_ * SOAP_FMAC4 soap_get___eoddata1__SymbolList_(struct soap*, struct __eoddata1__SymbolList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolList_
#define soap_read___eoddata1__SymbolList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeGet_
#define SOAP_TYPE_eoddata___eoddata1__ExchangeGet_ (300)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeGet_(struct soap*, struct __eoddata1__ExchangeGet_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeGet_(struct soap*, const struct __eoddata1__ExchangeGet_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeGet_(struct soap*, const char*, int, const struct __eoddata1__ExchangeGet_ *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeGet_ * SOAP_FMAC4 soap_in___eoddata1__ExchangeGet_(struct soap*, const char*, struct __eoddata1__ExchangeGet_ *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeGet_ * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeGet_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeGet_ * soap_new___eoddata1__ExchangeGet_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeGet_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeGet_ * soap_new_req___eoddata1__ExchangeGet_(
	struct soap *soap)
{	struct __eoddata1__ExchangeGet_ *_p = soap_new___eoddata1__ExchangeGet_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeGet_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeGet_ * soap_new_set___eoddata1__ExchangeGet_(
	struct soap *soap,
	_eoddata1__ExchangeGet *eoddata1__ExchangeGet)
{	struct __eoddata1__ExchangeGet_ *_p = soap_new___eoddata1__ExchangeGet_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeGet_(soap, _p);
		_p->eoddata1__ExchangeGet = eoddata1__ExchangeGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeGet_(struct soap*, const struct __eoddata1__ExchangeGet_ *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeGet_
#define soap_write___eoddata1__ExchangeGet_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeGet_(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeGet_(soap, data, "-eoddata1:ExchangeGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeGet_ * SOAP_FMAC4 soap_get___eoddata1__ExchangeGet_(struct soap*, struct __eoddata1__ExchangeGet_ *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeGet_
#define soap_read___eoddata1__ExchangeGet_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeGet_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeGet_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeList_
#define SOAP_TYPE_eoddata___eoddata1__ExchangeList_ (298)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeList_(struct soap*, struct __eoddata1__ExchangeList_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeList_(struct soap*, const struct __eoddata1__ExchangeList_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeList_(struct soap*, const char*, int, const struct __eoddata1__ExchangeList_ *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeList_ * SOAP_FMAC4 soap_in___eoddata1__ExchangeList_(struct soap*, const char*, struct __eoddata1__ExchangeList_ *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeList_ * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeList_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeList_ * soap_new___eoddata1__ExchangeList_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeList_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeList_ * soap_new_req___eoddata1__ExchangeList_(
	struct soap *soap)
{	struct __eoddata1__ExchangeList_ *_p = soap_new___eoddata1__ExchangeList_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeList_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeList_ * soap_new_set___eoddata1__ExchangeList_(
	struct soap *soap,
	_eoddata1__ExchangeList *eoddata1__ExchangeList)
{	struct __eoddata1__ExchangeList_ *_p = soap_new___eoddata1__ExchangeList_(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeList_(soap, _p);
		_p->eoddata1__ExchangeList = eoddata1__ExchangeList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeList_(struct soap*, const struct __eoddata1__ExchangeList_ *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeList_
#define soap_write___eoddata1__ExchangeList_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeList_(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeList_(soap, data, "-eoddata1:ExchangeList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeList_ * SOAP_FMAC4 soap_get___eoddata1__ExchangeList_(struct soap*, struct __eoddata1__ExchangeList_ *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeList_
#define soap_read___eoddata1__ExchangeList_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeList_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeList_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Membership_
#define SOAP_TYPE_eoddata___eoddata1__Membership_ (296)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Membership_(struct soap*, struct __eoddata1__Membership_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Membership_(struct soap*, const struct __eoddata1__Membership_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Membership_(struct soap*, const char*, int, const struct __eoddata1__Membership_ *, const char*);
SOAP_FMAC3 struct __eoddata1__Membership_ * SOAP_FMAC4 soap_in___eoddata1__Membership_(struct soap*, const char*, struct __eoddata1__Membership_ *, const char*);
SOAP_FMAC1 struct __eoddata1__Membership_ * SOAP_FMAC2 soap_instantiate___eoddata1__Membership_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Membership_ * soap_new___eoddata1__Membership_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Membership_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Membership_ * soap_new_req___eoddata1__Membership_(
	struct soap *soap)
{	struct __eoddata1__Membership_ *_p = soap_new___eoddata1__Membership_(soap);
	if (_p)
	{	soap_default___eoddata1__Membership_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Membership_ * soap_new_set___eoddata1__Membership_(
	struct soap *soap,
	_eoddata1__Membership *eoddata1__Membership)
{	struct __eoddata1__Membership_ *_p = soap_new___eoddata1__Membership_(soap);
	if (_p)
	{	soap_default___eoddata1__Membership_(soap, _p);
		_p->eoddata1__Membership = eoddata1__Membership;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Membership_(struct soap*, const struct __eoddata1__Membership_ *, const char*, const char*);

#ifndef soap_write___eoddata1__Membership_
#define soap_write___eoddata1__Membership_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Membership_(soap, data), 0) || eoddata::soap_put___eoddata1__Membership_(soap, data, "-eoddata1:Membership", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Membership_ * SOAP_FMAC4 soap_get___eoddata1__Membership_(struct soap*, struct __eoddata1__Membership_ *, const char*, const char*);

#ifndef soap_read___eoddata1__Membership_
#define soap_read___eoddata1__Membership_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Membership_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Membership_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Login2_
#define SOAP_TYPE_eoddata___eoddata1__Login2_ (294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Login2_(struct soap*, struct __eoddata1__Login2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Login2_(struct soap*, const struct __eoddata1__Login2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Login2_(struct soap*, const char*, int, const struct __eoddata1__Login2_ *, const char*);
SOAP_FMAC3 struct __eoddata1__Login2_ * SOAP_FMAC4 soap_in___eoddata1__Login2_(struct soap*, const char*, struct __eoddata1__Login2_ *, const char*);
SOAP_FMAC1 struct __eoddata1__Login2_ * SOAP_FMAC2 soap_instantiate___eoddata1__Login2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Login2_ * soap_new___eoddata1__Login2_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Login2_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Login2_ * soap_new_req___eoddata1__Login2_(
	struct soap *soap)
{	struct __eoddata1__Login2_ *_p = soap_new___eoddata1__Login2_(soap);
	if (_p)
	{	soap_default___eoddata1__Login2_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Login2_ * soap_new_set___eoddata1__Login2_(
	struct soap *soap,
	_eoddata1__Login2 *eoddata1__Login2)
{	struct __eoddata1__Login2_ *_p = soap_new___eoddata1__Login2_(soap);
	if (_p)
	{	soap_default___eoddata1__Login2_(soap, _p);
		_p->eoddata1__Login2 = eoddata1__Login2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Login2_(struct soap*, const struct __eoddata1__Login2_ *, const char*, const char*);

#ifndef soap_write___eoddata1__Login2_
#define soap_write___eoddata1__Login2_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Login2_(soap, data), 0) || eoddata::soap_put___eoddata1__Login2_(soap, data, "-eoddata1:Login2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Login2_ * SOAP_FMAC4 soap_get___eoddata1__Login2_(struct soap*, struct __eoddata1__Login2_ *, const char*, const char*);

#ifndef soap_read___eoddata1__Login2_
#define soap_read___eoddata1__Login2_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Login2_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Login2_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Login_
#define SOAP_TYPE_eoddata___eoddata1__Login_ (292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Login_(struct soap*, struct __eoddata1__Login_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Login_(struct soap*, const struct __eoddata1__Login_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Login_(struct soap*, const char*, int, const struct __eoddata1__Login_ *, const char*);
SOAP_FMAC3 struct __eoddata1__Login_ * SOAP_FMAC4 soap_in___eoddata1__Login_(struct soap*, const char*, struct __eoddata1__Login_ *, const char*);
SOAP_FMAC1 struct __eoddata1__Login_ * SOAP_FMAC2 soap_instantiate___eoddata1__Login_(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Login_ * soap_new___eoddata1__Login_(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Login_(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Login_ * soap_new_req___eoddata1__Login_(
	struct soap *soap)
{	struct __eoddata1__Login_ *_p = soap_new___eoddata1__Login_(soap);
	if (_p)
	{	soap_default___eoddata1__Login_(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Login_ * soap_new_set___eoddata1__Login_(
	struct soap *soap,
	_eoddata1__Login *eoddata1__Login)
{	struct __eoddata1__Login_ *_p = soap_new___eoddata1__Login_(soap);
	if (_p)
	{	soap_default___eoddata1__Login_(soap, _p);
		_p->eoddata1__Login = eoddata1__Login;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Login_(struct soap*, const struct __eoddata1__Login_ *, const char*, const char*);

#ifndef soap_write___eoddata1__Login_
#define soap_write___eoddata1__Login_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Login_(soap, data), 0) || eoddata::soap_put___eoddata1__Login_(soap, data, "-eoddata1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Login_ * SOAP_FMAC4 soap_get___eoddata1__Login_(struct soap*, struct __eoddata1__Login_ *, const char*, const char*);

#ifndef soap_read___eoddata1__Login_
#define soap_read___eoddata1__Login_(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Login_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Login_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ValidateAccess
#define SOAP_TYPE_eoddata___eoddata1__ValidateAccess (290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ValidateAccess(struct soap*, struct __eoddata1__ValidateAccess *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ValidateAccess(struct soap*, const struct __eoddata1__ValidateAccess *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ValidateAccess(struct soap*, const char*, int, const struct __eoddata1__ValidateAccess *, const char*);
SOAP_FMAC3 struct __eoddata1__ValidateAccess * SOAP_FMAC4 soap_in___eoddata1__ValidateAccess(struct soap*, const char*, struct __eoddata1__ValidateAccess *, const char*);
SOAP_FMAC1 struct __eoddata1__ValidateAccess * SOAP_FMAC2 soap_instantiate___eoddata1__ValidateAccess(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ValidateAccess * soap_new___eoddata1__ValidateAccess(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ValidateAccess(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ValidateAccess * soap_new_req___eoddata1__ValidateAccess(
	struct soap *soap)
{	struct __eoddata1__ValidateAccess *_p = soap_new___eoddata1__ValidateAccess(soap);
	if (_p)
	{	soap_default___eoddata1__ValidateAccess(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ValidateAccess * soap_new_set___eoddata1__ValidateAccess(
	struct soap *soap,
	_eoddata1__ValidateAccess *eoddata1__ValidateAccess)
{	struct __eoddata1__ValidateAccess *_p = soap_new___eoddata1__ValidateAccess(soap);
	if (_p)
	{	soap_default___eoddata1__ValidateAccess(soap, _p);
		_p->eoddata1__ValidateAccess = eoddata1__ValidateAccess;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ValidateAccess(struct soap*, const struct __eoddata1__ValidateAccess *, const char*, const char*);

#ifndef soap_write___eoddata1__ValidateAccess
#define soap_write___eoddata1__ValidateAccess(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ValidateAccess(soap, data), 0) || eoddata::soap_put___eoddata1__ValidateAccess(soap, data, "-eoddata1:ValidateAccess", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ValidateAccess * SOAP_FMAC4 soap_get___eoddata1__ValidateAccess(struct soap*, struct __eoddata1__ValidateAccess *, const char*, const char*);

#ifndef soap_read___eoddata1__ValidateAccess
#define soap_read___eoddata1__ValidateAccess(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ValidateAccess(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ValidateAccess(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__UpdateDataFormat
#define SOAP_TYPE_eoddata___eoddata1__UpdateDataFormat (286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__UpdateDataFormat(struct soap*, struct __eoddata1__UpdateDataFormat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__UpdateDataFormat(struct soap*, const struct __eoddata1__UpdateDataFormat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__UpdateDataFormat(struct soap*, const char*, int, const struct __eoddata1__UpdateDataFormat *, const char*);
SOAP_FMAC3 struct __eoddata1__UpdateDataFormat * SOAP_FMAC4 soap_in___eoddata1__UpdateDataFormat(struct soap*, const char*, struct __eoddata1__UpdateDataFormat *, const char*);
SOAP_FMAC1 struct __eoddata1__UpdateDataFormat * SOAP_FMAC2 soap_instantiate___eoddata1__UpdateDataFormat(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__UpdateDataFormat * soap_new___eoddata1__UpdateDataFormat(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__UpdateDataFormat(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__UpdateDataFormat * soap_new_req___eoddata1__UpdateDataFormat(
	struct soap *soap)
{	struct __eoddata1__UpdateDataFormat *_p = soap_new___eoddata1__UpdateDataFormat(soap);
	if (_p)
	{	soap_default___eoddata1__UpdateDataFormat(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__UpdateDataFormat * soap_new_set___eoddata1__UpdateDataFormat(
	struct soap *soap,
	_eoddata1__UpdateDataFormat *eoddata1__UpdateDataFormat)
{	struct __eoddata1__UpdateDataFormat *_p = soap_new___eoddata1__UpdateDataFormat(soap);
	if (_p)
	{	soap_default___eoddata1__UpdateDataFormat(soap, _p);
		_p->eoddata1__UpdateDataFormat = eoddata1__UpdateDataFormat;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__UpdateDataFormat(struct soap*, const struct __eoddata1__UpdateDataFormat *, const char*, const char*);

#ifndef soap_write___eoddata1__UpdateDataFormat
#define soap_write___eoddata1__UpdateDataFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__UpdateDataFormat(soap, data), 0) || eoddata::soap_put___eoddata1__UpdateDataFormat(soap, data, "-eoddata1:UpdateDataFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__UpdateDataFormat * SOAP_FMAC4 soap_get___eoddata1__UpdateDataFormat(struct soap*, struct __eoddata1__UpdateDataFormat *, const char*, const char*);

#ifndef soap_read___eoddata1__UpdateDataFormat
#define soap_read___eoddata1__UpdateDataFormat(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__UpdateDataFormat(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__UpdateDataFormat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__DataFormats
#define SOAP_TYPE_eoddata___eoddata1__DataFormats (282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__DataFormats(struct soap*, struct __eoddata1__DataFormats *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__DataFormats(struct soap*, const struct __eoddata1__DataFormats *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__DataFormats(struct soap*, const char*, int, const struct __eoddata1__DataFormats *, const char*);
SOAP_FMAC3 struct __eoddata1__DataFormats * SOAP_FMAC4 soap_in___eoddata1__DataFormats(struct soap*, const char*, struct __eoddata1__DataFormats *, const char*);
SOAP_FMAC1 struct __eoddata1__DataFormats * SOAP_FMAC2 soap_instantiate___eoddata1__DataFormats(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__DataFormats * soap_new___eoddata1__DataFormats(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__DataFormats(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__DataFormats * soap_new_req___eoddata1__DataFormats(
	struct soap *soap)
{	struct __eoddata1__DataFormats *_p = soap_new___eoddata1__DataFormats(soap);
	if (_p)
	{	soap_default___eoddata1__DataFormats(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__DataFormats * soap_new_set___eoddata1__DataFormats(
	struct soap *soap,
	_eoddata1__DataFormats *eoddata1__DataFormats)
{	struct __eoddata1__DataFormats *_p = soap_new___eoddata1__DataFormats(soap);
	if (_p)
	{	soap_default___eoddata1__DataFormats(soap, _p);
		_p->eoddata1__DataFormats = eoddata1__DataFormats;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__DataFormats(struct soap*, const struct __eoddata1__DataFormats *, const char*, const char*);

#ifndef soap_write___eoddata1__DataFormats
#define soap_write___eoddata1__DataFormats(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__DataFormats(soap, data), 0) || eoddata::soap_put___eoddata1__DataFormats(soap, data, "-eoddata1:DataFormats", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__DataFormats * SOAP_FMAC4 soap_get___eoddata1__DataFormats(struct soap*, struct __eoddata1__DataFormats *, const char*, const char*);

#ifndef soap_read___eoddata1__DataFormats
#define soap_read___eoddata1__DataFormats(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__DataFormats(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__DataFormats(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__DataClientLatestVersion
#define SOAP_TYPE_eoddata___eoddata1__DataClientLatestVersion (278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__DataClientLatestVersion(struct soap*, struct __eoddata1__DataClientLatestVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__DataClientLatestVersion(struct soap*, const struct __eoddata1__DataClientLatestVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__DataClientLatestVersion(struct soap*, const char*, int, const struct __eoddata1__DataClientLatestVersion *, const char*);
SOAP_FMAC3 struct __eoddata1__DataClientLatestVersion * SOAP_FMAC4 soap_in___eoddata1__DataClientLatestVersion(struct soap*, const char*, struct __eoddata1__DataClientLatestVersion *, const char*);
SOAP_FMAC1 struct __eoddata1__DataClientLatestVersion * SOAP_FMAC2 soap_instantiate___eoddata1__DataClientLatestVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__DataClientLatestVersion * soap_new___eoddata1__DataClientLatestVersion(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__DataClientLatestVersion(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__DataClientLatestVersion * soap_new_req___eoddata1__DataClientLatestVersion(
	struct soap *soap)
{	struct __eoddata1__DataClientLatestVersion *_p = soap_new___eoddata1__DataClientLatestVersion(soap);
	if (_p)
	{	soap_default___eoddata1__DataClientLatestVersion(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__DataClientLatestVersion * soap_new_set___eoddata1__DataClientLatestVersion(
	struct soap *soap,
	_eoddata1__DataClientLatestVersion *eoddata1__DataClientLatestVersion)
{	struct __eoddata1__DataClientLatestVersion *_p = soap_new___eoddata1__DataClientLatestVersion(soap);
	if (_p)
	{	soap_default___eoddata1__DataClientLatestVersion(soap, _p);
		_p->eoddata1__DataClientLatestVersion = eoddata1__DataClientLatestVersion;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__DataClientLatestVersion(struct soap*, const struct __eoddata1__DataClientLatestVersion *, const char*, const char*);

#ifndef soap_write___eoddata1__DataClientLatestVersion
#define soap_write___eoddata1__DataClientLatestVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__DataClientLatestVersion(soap, data), 0) || eoddata::soap_put___eoddata1__DataClientLatestVersion(soap, data, "-eoddata1:DataClientLatestVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__DataClientLatestVersion * SOAP_FMAC4 soap_get___eoddata1__DataClientLatestVersion(struct soap*, struct __eoddata1__DataClientLatestVersion *, const char*, const char*);

#ifndef soap_read___eoddata1__DataClientLatestVersion
#define soap_read___eoddata1__DataClientLatestVersion(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__DataClientLatestVersion(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__DataClientLatestVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolChangesByExchange
#define SOAP_TYPE_eoddata___eoddata1__SymbolChangesByExchange (274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolChangesByExchange(struct soap*, struct __eoddata1__SymbolChangesByExchange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolChangesByExchange(struct soap*, const struct __eoddata1__SymbolChangesByExchange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolChangesByExchange(struct soap*, const char*, int, const struct __eoddata1__SymbolChangesByExchange *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolChangesByExchange * SOAP_FMAC4 soap_in___eoddata1__SymbolChangesByExchange(struct soap*, const char*, struct __eoddata1__SymbolChangesByExchange *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolChangesByExchange * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolChangesByExchange(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolChangesByExchange * soap_new___eoddata1__SymbolChangesByExchange(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolChangesByExchange(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolChangesByExchange * soap_new_req___eoddata1__SymbolChangesByExchange(
	struct soap *soap)
{	struct __eoddata1__SymbolChangesByExchange *_p = soap_new___eoddata1__SymbolChangesByExchange(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChangesByExchange(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolChangesByExchange * soap_new_set___eoddata1__SymbolChangesByExchange(
	struct soap *soap,
	_eoddata1__SymbolChangesByExchange *eoddata1__SymbolChangesByExchange)
{	struct __eoddata1__SymbolChangesByExchange *_p = soap_new___eoddata1__SymbolChangesByExchange(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChangesByExchange(soap, _p);
		_p->eoddata1__SymbolChangesByExchange = eoddata1__SymbolChangesByExchange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolChangesByExchange(struct soap*, const struct __eoddata1__SymbolChangesByExchange *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolChangesByExchange
#define soap_write___eoddata1__SymbolChangesByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolChangesByExchange(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolChangesByExchange(soap, data, "-eoddata1:SymbolChangesByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolChangesByExchange * SOAP_FMAC4 soap_get___eoddata1__SymbolChangesByExchange(struct soap*, struct __eoddata1__SymbolChangesByExchange *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolChangesByExchange
#define soap_read___eoddata1__SymbolChangesByExchange(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolChangesByExchange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolChangesByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod2
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod2 (270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDatePeriod2(struct soap*, struct __eoddata1__QuoteListByDatePeriod2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDatePeriod2(struct soap*, const struct __eoddata1__QuoteListByDatePeriod2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDatePeriod2(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDatePeriod2 *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDatePeriod2(struct soap*, const char*, struct __eoddata1__QuoteListByDatePeriod2 *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDatePeriod2(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDatePeriod2 * soap_new___eoddata1__QuoteListByDatePeriod2(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDatePeriod2(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDatePeriod2 * soap_new_req___eoddata1__QuoteListByDatePeriod2(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDatePeriod2 *_p = soap_new___eoddata1__QuoteListByDatePeriod2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod2(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDatePeriod2 * soap_new_set___eoddata1__QuoteListByDatePeriod2(
	struct soap *soap,
	_eoddata1__QuoteListByDatePeriod2 *eoddata1__QuoteListByDatePeriod2)
{	struct __eoddata1__QuoteListByDatePeriod2 *_p = soap_new___eoddata1__QuoteListByDatePeriod2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod2(soap, _p);
		_p->eoddata1__QuoteListByDatePeriod2 = eoddata1__QuoteListByDatePeriod2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDatePeriod2(struct soap*, const struct __eoddata1__QuoteListByDatePeriod2 *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDatePeriod2
#define soap_write___eoddata1__QuoteListByDatePeriod2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDatePeriod2(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDatePeriod2(soap, data, "-eoddata1:QuoteListByDatePeriod2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod2 * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDatePeriod2(struct soap*, struct __eoddata1__QuoteListByDatePeriod2 *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDatePeriod2
#define soap_read___eoddata1__QuoteListByDatePeriod2(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDatePeriod2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDatePeriod2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDatePeriod (266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDatePeriod(struct soap*, struct __eoddata1__QuoteListByDatePeriod *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDatePeriod(struct soap*, const struct __eoddata1__QuoteListByDatePeriod *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDatePeriod(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDatePeriod *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDatePeriod(struct soap*, const char*, struct __eoddata1__QuoteListByDatePeriod *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDatePeriod * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDatePeriod(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDatePeriod * soap_new___eoddata1__QuoteListByDatePeriod(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDatePeriod(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDatePeriod * soap_new_req___eoddata1__QuoteListByDatePeriod(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDatePeriod *_p = soap_new___eoddata1__QuoteListByDatePeriod(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDatePeriod * soap_new_set___eoddata1__QuoteListByDatePeriod(
	struct soap *soap,
	_eoddata1__QuoteListByDatePeriod *eoddata1__QuoteListByDatePeriod)
{	struct __eoddata1__QuoteListByDatePeriod *_p = soap_new___eoddata1__QuoteListByDatePeriod(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDatePeriod(soap, _p);
		_p->eoddata1__QuoteListByDatePeriod = eoddata1__QuoteListByDatePeriod;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDatePeriod(struct soap*, const struct __eoddata1__QuoteListByDatePeriod *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDatePeriod
#define soap_write___eoddata1__QuoteListByDatePeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDatePeriod(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDatePeriod(soap, data, "-eoddata1:QuoteListByDatePeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDatePeriod * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDatePeriod(struct soap*, struct __eoddata1__QuoteListByDatePeriod *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDatePeriod
#define soap_read___eoddata1__QuoteListByDatePeriod(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDatePeriod(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDatePeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriodByDateRange
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriodByDateRange (262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, struct __eoddata1__SymbolHistoryPeriodByDateRange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const struct __eoddata1__SymbolHistoryPeriodByDateRange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char*, int, const struct __eoddata1__SymbolHistoryPeriodByDateRange *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC4 soap_in___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char*, struct __eoddata1__SymbolHistoryPeriodByDateRange *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistoryPeriodByDateRange * soap_new___eoddata1__SymbolHistoryPeriodByDateRange(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistoryPeriodByDateRange(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistoryPeriodByDateRange * soap_new_req___eoddata1__SymbolHistoryPeriodByDateRange(
	struct soap *soap)
{	struct __eoddata1__SymbolHistoryPeriodByDateRange *_p = soap_new___eoddata1__SymbolHistoryPeriodByDateRange(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriodByDateRange(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistoryPeriodByDateRange * soap_new_set___eoddata1__SymbolHistoryPeriodByDateRange(
	struct soap *soap,
	_eoddata1__SymbolHistoryPeriodByDateRange *eoddata1__SymbolHistoryPeriodByDateRange)
{	struct __eoddata1__SymbolHistoryPeriodByDateRange *_p = soap_new___eoddata1__SymbolHistoryPeriodByDateRange(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriodByDateRange(soap, _p);
		_p->eoddata1__SymbolHistoryPeriodByDateRange = eoddata1__SymbolHistoryPeriodByDateRange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const struct __eoddata1__SymbolHistoryPeriodByDateRange *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistoryPeriodByDateRange
#define soap_write___eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistoryPeriodByDateRange(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistoryPeriodByDateRange(soap, data, "-eoddata1:SymbolHistoryPeriodByDateRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriodByDateRange * SOAP_FMAC4 soap_get___eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, struct __eoddata1__SymbolHistoryPeriodByDateRange *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistoryPeriodByDateRange
#define soap_read___eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistoryPeriodByDateRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistoryPeriodByDateRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriod
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistoryPeriod (258)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistoryPeriod(struct soap*, struct __eoddata1__SymbolHistoryPeriod *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistoryPeriod(struct soap*, const struct __eoddata1__SymbolHistoryPeriod *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistoryPeriod(struct soap*, const char*, int, const struct __eoddata1__SymbolHistoryPeriod *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriod * SOAP_FMAC4 soap_in___eoddata1__SymbolHistoryPeriod(struct soap*, const char*, struct __eoddata1__SymbolHistoryPeriod *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistoryPeriod * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistoryPeriod(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistoryPeriod * soap_new___eoddata1__SymbolHistoryPeriod(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistoryPeriod(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistoryPeriod * soap_new_req___eoddata1__SymbolHistoryPeriod(
	struct soap *soap)
{	struct __eoddata1__SymbolHistoryPeriod *_p = soap_new___eoddata1__SymbolHistoryPeriod(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriod(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistoryPeriod * soap_new_set___eoddata1__SymbolHistoryPeriod(
	struct soap *soap,
	_eoddata1__SymbolHistoryPeriod *eoddata1__SymbolHistoryPeriod)
{	struct __eoddata1__SymbolHistoryPeriod *_p = soap_new___eoddata1__SymbolHistoryPeriod(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistoryPeriod(soap, _p);
		_p->eoddata1__SymbolHistoryPeriod = eoddata1__SymbolHistoryPeriod;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistoryPeriod(struct soap*, const struct __eoddata1__SymbolHistoryPeriod *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistoryPeriod
#define soap_write___eoddata1__SymbolHistoryPeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistoryPeriod(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistoryPeriod(soap, data, "-eoddata1:SymbolHistoryPeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistoryPeriod * SOAP_FMAC4 soap_get___eoddata1__SymbolHistoryPeriod(struct soap*, struct __eoddata1__SymbolHistoryPeriod *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistoryPeriod
#define soap_read___eoddata1__SymbolHistoryPeriod(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistoryPeriod(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistoryPeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__CountryList
#define SOAP_TYPE_eoddata___eoddata1__CountryList (254)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__CountryList(struct soap*, struct __eoddata1__CountryList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__CountryList(struct soap*, const struct __eoddata1__CountryList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__CountryList(struct soap*, const char*, int, const struct __eoddata1__CountryList *, const char*);
SOAP_FMAC3 struct __eoddata1__CountryList * SOAP_FMAC4 soap_in___eoddata1__CountryList(struct soap*, const char*, struct __eoddata1__CountryList *, const char*);
SOAP_FMAC1 struct __eoddata1__CountryList * SOAP_FMAC2 soap_instantiate___eoddata1__CountryList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__CountryList * soap_new___eoddata1__CountryList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__CountryList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__CountryList * soap_new_req___eoddata1__CountryList(
	struct soap *soap)
{	struct __eoddata1__CountryList *_p = soap_new___eoddata1__CountryList(soap);
	if (_p)
	{	soap_default___eoddata1__CountryList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__CountryList * soap_new_set___eoddata1__CountryList(
	struct soap *soap,
	_eoddata1__CountryList *eoddata1__CountryList)
{	struct __eoddata1__CountryList *_p = soap_new___eoddata1__CountryList(soap);
	if (_p)
	{	soap_default___eoddata1__CountryList(soap, _p);
		_p->eoddata1__CountryList = eoddata1__CountryList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__CountryList(struct soap*, const struct __eoddata1__CountryList *, const char*, const char*);

#ifndef soap_write___eoddata1__CountryList
#define soap_write___eoddata1__CountryList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__CountryList(soap, data), 0) || eoddata::soap_put___eoddata1__CountryList(soap, data, "-eoddata1:CountryList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__CountryList * SOAP_FMAC4 soap_get___eoddata1__CountryList(struct soap*, struct __eoddata1__CountryList *, const char*, const char*);

#ifndef soap_read___eoddata1__CountryList
#define soap_read___eoddata1__CountryList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__CountryList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__CountryList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SplitListBySymbol
#define SOAP_TYPE_eoddata___eoddata1__SplitListBySymbol (250)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SplitListBySymbol(struct soap*, struct __eoddata1__SplitListBySymbol *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SplitListBySymbol(struct soap*, const struct __eoddata1__SplitListBySymbol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SplitListBySymbol(struct soap*, const char*, int, const struct __eoddata1__SplitListBySymbol *, const char*);
SOAP_FMAC3 struct __eoddata1__SplitListBySymbol * SOAP_FMAC4 soap_in___eoddata1__SplitListBySymbol(struct soap*, const char*, struct __eoddata1__SplitListBySymbol *, const char*);
SOAP_FMAC1 struct __eoddata1__SplitListBySymbol * SOAP_FMAC2 soap_instantiate___eoddata1__SplitListBySymbol(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SplitListBySymbol * soap_new___eoddata1__SplitListBySymbol(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SplitListBySymbol(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SplitListBySymbol * soap_new_req___eoddata1__SplitListBySymbol(
	struct soap *soap)
{	struct __eoddata1__SplitListBySymbol *_p = soap_new___eoddata1__SplitListBySymbol(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListBySymbol(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SplitListBySymbol * soap_new_set___eoddata1__SplitListBySymbol(
	struct soap *soap,
	_eoddata1__SplitListBySymbol *eoddata1__SplitListBySymbol)
{	struct __eoddata1__SplitListBySymbol *_p = soap_new___eoddata1__SplitListBySymbol(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListBySymbol(soap, _p);
		_p->eoddata1__SplitListBySymbol = eoddata1__SplitListBySymbol;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SplitListBySymbol(struct soap*, const struct __eoddata1__SplitListBySymbol *, const char*, const char*);

#ifndef soap_write___eoddata1__SplitListBySymbol
#define soap_write___eoddata1__SplitListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SplitListBySymbol(soap, data), 0) || eoddata::soap_put___eoddata1__SplitListBySymbol(soap, data, "-eoddata1:SplitListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SplitListBySymbol * SOAP_FMAC4 soap_get___eoddata1__SplitListBySymbol(struct soap*, struct __eoddata1__SplitListBySymbol *, const char*, const char*);

#ifndef soap_read___eoddata1__SplitListBySymbol
#define soap_read___eoddata1__SplitListBySymbol(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SplitListBySymbol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SplitListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SplitListByExchange
#define SOAP_TYPE_eoddata___eoddata1__SplitListByExchange (246)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SplitListByExchange(struct soap*, struct __eoddata1__SplitListByExchange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SplitListByExchange(struct soap*, const struct __eoddata1__SplitListByExchange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SplitListByExchange(struct soap*, const char*, int, const struct __eoddata1__SplitListByExchange *, const char*);
SOAP_FMAC3 struct __eoddata1__SplitListByExchange * SOAP_FMAC4 soap_in___eoddata1__SplitListByExchange(struct soap*, const char*, struct __eoddata1__SplitListByExchange *, const char*);
SOAP_FMAC1 struct __eoddata1__SplitListByExchange * SOAP_FMAC2 soap_instantiate___eoddata1__SplitListByExchange(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SplitListByExchange * soap_new___eoddata1__SplitListByExchange(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SplitListByExchange(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SplitListByExchange * soap_new_req___eoddata1__SplitListByExchange(
	struct soap *soap)
{	struct __eoddata1__SplitListByExchange *_p = soap_new___eoddata1__SplitListByExchange(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListByExchange(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SplitListByExchange * soap_new_set___eoddata1__SplitListByExchange(
	struct soap *soap,
	_eoddata1__SplitListByExchange *eoddata1__SplitListByExchange)
{	struct __eoddata1__SplitListByExchange *_p = soap_new___eoddata1__SplitListByExchange(soap);
	if (_p)
	{	soap_default___eoddata1__SplitListByExchange(soap, _p);
		_p->eoddata1__SplitListByExchange = eoddata1__SplitListByExchange;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SplitListByExchange(struct soap*, const struct __eoddata1__SplitListByExchange *, const char*, const char*);

#ifndef soap_write___eoddata1__SplitListByExchange
#define soap_write___eoddata1__SplitListByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SplitListByExchange(soap, data), 0) || eoddata::soap_put___eoddata1__SplitListByExchange(soap, data, "-eoddata1:SplitListByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SplitListByExchange * SOAP_FMAC4 soap_get___eoddata1__SplitListByExchange(struct soap*, struct __eoddata1__SplitListByExchange *, const char*, const char*);

#ifndef soap_read___eoddata1__SplitListByExchange
#define soap_read___eoddata1__SplitListByExchange(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SplitListByExchange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SplitListByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeMonths
#define SOAP_TYPE_eoddata___eoddata1__ExchangeMonths (242)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeMonths(struct soap*, struct __eoddata1__ExchangeMonths *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeMonths(struct soap*, const struct __eoddata1__ExchangeMonths *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeMonths(struct soap*, const char*, int, const struct __eoddata1__ExchangeMonths *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeMonths * SOAP_FMAC4 soap_in___eoddata1__ExchangeMonths(struct soap*, const char*, struct __eoddata1__ExchangeMonths *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeMonths * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeMonths(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeMonths * soap_new___eoddata1__ExchangeMonths(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeMonths(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeMonths * soap_new_req___eoddata1__ExchangeMonths(
	struct soap *soap)
{	struct __eoddata1__ExchangeMonths *_p = soap_new___eoddata1__ExchangeMonths(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeMonths(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeMonths * soap_new_set___eoddata1__ExchangeMonths(
	struct soap *soap,
	_eoddata1__ExchangeMonths *eoddata1__ExchangeMonths)
{	struct __eoddata1__ExchangeMonths *_p = soap_new___eoddata1__ExchangeMonths(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeMonths(soap, _p);
		_p->eoddata1__ExchangeMonths = eoddata1__ExchangeMonths;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeMonths(struct soap*, const struct __eoddata1__ExchangeMonths *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeMonths
#define soap_write___eoddata1__ExchangeMonths(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeMonths(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeMonths(soap, data, "-eoddata1:ExchangeMonths", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeMonths * SOAP_FMAC4 soap_get___eoddata1__ExchangeMonths(struct soap*, struct __eoddata1__ExchangeMonths *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeMonths
#define soap_read___eoddata1__ExchangeMonths(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeMonths(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeMonths(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolChart
#define SOAP_TYPE_eoddata___eoddata1__SymbolChart (238)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolChart(struct soap*, struct __eoddata1__SymbolChart *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolChart(struct soap*, const struct __eoddata1__SymbolChart *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolChart(struct soap*, const char*, int, const struct __eoddata1__SymbolChart *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolChart * SOAP_FMAC4 soap_in___eoddata1__SymbolChart(struct soap*, const char*, struct __eoddata1__SymbolChart *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolChart * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolChart(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolChart * soap_new___eoddata1__SymbolChart(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolChart(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolChart * soap_new_req___eoddata1__SymbolChart(
	struct soap *soap)
{	struct __eoddata1__SymbolChart *_p = soap_new___eoddata1__SymbolChart(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChart(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolChart * soap_new_set___eoddata1__SymbolChart(
	struct soap *soap,
	_eoddata1__SymbolChart *eoddata1__SymbolChart)
{	struct __eoddata1__SymbolChart *_p = soap_new___eoddata1__SymbolChart(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolChart(soap, _p);
		_p->eoddata1__SymbolChart = eoddata1__SymbolChart;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolChart(struct soap*, const struct __eoddata1__SymbolChart *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolChart
#define soap_write___eoddata1__SymbolChart(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolChart(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolChart(soap, data, "-eoddata1:SymbolChart", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolChart * SOAP_FMAC4 soap_get___eoddata1__SymbolChart(struct soap*, struct __eoddata1__SymbolChart *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolChart
#define soap_read___eoddata1__SymbolChart(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolChart(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolChart(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Top10Losses
#define SOAP_TYPE_eoddata___eoddata1__Top10Losses (234)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Top10Losses(struct soap*, struct __eoddata1__Top10Losses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Top10Losses(struct soap*, const struct __eoddata1__Top10Losses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Top10Losses(struct soap*, const char*, int, const struct __eoddata1__Top10Losses *, const char*);
SOAP_FMAC3 struct __eoddata1__Top10Losses * SOAP_FMAC4 soap_in___eoddata1__Top10Losses(struct soap*, const char*, struct __eoddata1__Top10Losses *, const char*);
SOAP_FMAC1 struct __eoddata1__Top10Losses * SOAP_FMAC2 soap_instantiate___eoddata1__Top10Losses(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Top10Losses * soap_new___eoddata1__Top10Losses(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Top10Losses(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Top10Losses * soap_new_req___eoddata1__Top10Losses(
	struct soap *soap)
{	struct __eoddata1__Top10Losses *_p = soap_new___eoddata1__Top10Losses(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Losses(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Top10Losses * soap_new_set___eoddata1__Top10Losses(
	struct soap *soap,
	_eoddata1__Top10Losses *eoddata1__Top10Losses)
{	struct __eoddata1__Top10Losses *_p = soap_new___eoddata1__Top10Losses(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Losses(soap, _p);
		_p->eoddata1__Top10Losses = eoddata1__Top10Losses;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Top10Losses(struct soap*, const struct __eoddata1__Top10Losses *, const char*, const char*);

#ifndef soap_write___eoddata1__Top10Losses
#define soap_write___eoddata1__Top10Losses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Top10Losses(soap, data), 0) || eoddata::soap_put___eoddata1__Top10Losses(soap, data, "-eoddata1:Top10Losses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Top10Losses * SOAP_FMAC4 soap_get___eoddata1__Top10Losses(struct soap*, struct __eoddata1__Top10Losses *, const char*, const char*);

#ifndef soap_read___eoddata1__Top10Losses
#define soap_read___eoddata1__Top10Losses(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Top10Losses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Top10Losses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Top10Gains
#define SOAP_TYPE_eoddata___eoddata1__Top10Gains (230)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Top10Gains(struct soap*, struct __eoddata1__Top10Gains *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Top10Gains(struct soap*, const struct __eoddata1__Top10Gains *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Top10Gains(struct soap*, const char*, int, const struct __eoddata1__Top10Gains *, const char*);
SOAP_FMAC3 struct __eoddata1__Top10Gains * SOAP_FMAC4 soap_in___eoddata1__Top10Gains(struct soap*, const char*, struct __eoddata1__Top10Gains *, const char*);
SOAP_FMAC1 struct __eoddata1__Top10Gains * SOAP_FMAC2 soap_instantiate___eoddata1__Top10Gains(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Top10Gains * soap_new___eoddata1__Top10Gains(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Top10Gains(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Top10Gains * soap_new_req___eoddata1__Top10Gains(
	struct soap *soap)
{	struct __eoddata1__Top10Gains *_p = soap_new___eoddata1__Top10Gains(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Gains(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Top10Gains * soap_new_set___eoddata1__Top10Gains(
	struct soap *soap,
	_eoddata1__Top10Gains *eoddata1__Top10Gains)
{	struct __eoddata1__Top10Gains *_p = soap_new___eoddata1__Top10Gains(soap);
	if (_p)
	{	soap_default___eoddata1__Top10Gains(soap, _p);
		_p->eoddata1__Top10Gains = eoddata1__Top10Gains;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Top10Gains(struct soap*, const struct __eoddata1__Top10Gains *, const char*, const char*);

#ifndef soap_write___eoddata1__Top10Gains
#define soap_write___eoddata1__Top10Gains(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Top10Gains(soap, data), 0) || eoddata::soap_put___eoddata1__Top10Gains(soap, data, "-eoddata1:Top10Gains", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Top10Gains * SOAP_FMAC4 soap_get___eoddata1__Top10Gains(struct soap*, struct __eoddata1__Top10Gains *, const char*, const char*);

#ifndef soap_read___eoddata1__Top10Gains
#define soap_read___eoddata1__Top10Gains(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Top10Gains(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Top10Gains(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolHistory
#define SOAP_TYPE_eoddata___eoddata1__SymbolHistory (226)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolHistory(struct soap*, struct __eoddata1__SymbolHistory *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolHistory(struct soap*, const struct __eoddata1__SymbolHistory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolHistory(struct soap*, const char*, int, const struct __eoddata1__SymbolHistory *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolHistory * SOAP_FMAC4 soap_in___eoddata1__SymbolHistory(struct soap*, const char*, struct __eoddata1__SymbolHistory *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolHistory * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolHistory(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolHistory * soap_new___eoddata1__SymbolHistory(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolHistory(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolHistory * soap_new_req___eoddata1__SymbolHistory(
	struct soap *soap)
{	struct __eoddata1__SymbolHistory *_p = soap_new___eoddata1__SymbolHistory(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistory(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolHistory * soap_new_set___eoddata1__SymbolHistory(
	struct soap *soap,
	_eoddata1__SymbolHistory *eoddata1__SymbolHistory)
{	struct __eoddata1__SymbolHistory *_p = soap_new___eoddata1__SymbolHistory(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolHistory(soap, _p);
		_p->eoddata1__SymbolHistory = eoddata1__SymbolHistory;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolHistory(struct soap*, const struct __eoddata1__SymbolHistory *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolHistory
#define soap_write___eoddata1__SymbolHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolHistory(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolHistory(soap, data, "-eoddata1:SymbolHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolHistory * SOAP_FMAC4 soap_get___eoddata1__SymbolHistory(struct soap*, struct __eoddata1__SymbolHistory *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolHistory
#define soap_read___eoddata1__SymbolHistory(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolHistory(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolHistory(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDate2
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDate2 (222)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDate2(struct soap*, struct __eoddata1__QuoteListByDate2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDate2(struct soap*, const struct __eoddata1__QuoteListByDate2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDate2(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDate2 *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDate2 * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDate2(struct soap*, const char*, struct __eoddata1__QuoteListByDate2 *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDate2 * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDate2(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDate2 * soap_new___eoddata1__QuoteListByDate2(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDate2(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDate2 * soap_new_req___eoddata1__QuoteListByDate2(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDate2 *_p = soap_new___eoddata1__QuoteListByDate2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate2(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDate2 * soap_new_set___eoddata1__QuoteListByDate2(
	struct soap *soap,
	_eoddata1__QuoteListByDate2 *eoddata1__QuoteListByDate2)
{	struct __eoddata1__QuoteListByDate2 *_p = soap_new___eoddata1__QuoteListByDate2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate2(soap, _p);
		_p->eoddata1__QuoteListByDate2 = eoddata1__QuoteListByDate2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDate2(struct soap*, const struct __eoddata1__QuoteListByDate2 *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDate2
#define soap_write___eoddata1__QuoteListByDate2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDate2(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDate2(soap, data, "-eoddata1:QuoteListByDate2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDate2 * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDate2(struct soap*, struct __eoddata1__QuoteListByDate2 *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDate2
#define soap_read___eoddata1__QuoteListByDate2(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDate2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDate2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteListByDate
#define SOAP_TYPE_eoddata___eoddata1__QuoteListByDate (218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteListByDate(struct soap*, struct __eoddata1__QuoteListByDate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteListByDate(struct soap*, const struct __eoddata1__QuoteListByDate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteListByDate(struct soap*, const char*, int, const struct __eoddata1__QuoteListByDate *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteListByDate * SOAP_FMAC4 soap_in___eoddata1__QuoteListByDate(struct soap*, const char*, struct __eoddata1__QuoteListByDate *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteListByDate * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteListByDate(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteListByDate * soap_new___eoddata1__QuoteListByDate(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteListByDate(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteListByDate * soap_new_req___eoddata1__QuoteListByDate(
	struct soap *soap)
{	struct __eoddata1__QuoteListByDate *_p = soap_new___eoddata1__QuoteListByDate(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteListByDate * soap_new_set___eoddata1__QuoteListByDate(
	struct soap *soap,
	_eoddata1__QuoteListByDate *eoddata1__QuoteListByDate)
{	struct __eoddata1__QuoteListByDate *_p = soap_new___eoddata1__QuoteListByDate(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteListByDate(soap, _p);
		_p->eoddata1__QuoteListByDate = eoddata1__QuoteListByDate;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteListByDate(struct soap*, const struct __eoddata1__QuoteListByDate *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteListByDate
#define soap_write___eoddata1__QuoteListByDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteListByDate(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteListByDate(soap, data, "-eoddata1:QuoteListByDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteListByDate * SOAP_FMAC4 soap_get___eoddata1__QuoteListByDate(struct soap*, struct __eoddata1__QuoteListByDate *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteListByDate
#define soap_read___eoddata1__QuoteListByDate(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteListByDate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteListByDate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__TechnicalList
#define SOAP_TYPE_eoddata___eoddata1__TechnicalList (214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__TechnicalList(struct soap*, struct __eoddata1__TechnicalList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__TechnicalList(struct soap*, const struct __eoddata1__TechnicalList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__TechnicalList(struct soap*, const char*, int, const struct __eoddata1__TechnicalList *, const char*);
SOAP_FMAC3 struct __eoddata1__TechnicalList * SOAP_FMAC4 soap_in___eoddata1__TechnicalList(struct soap*, const char*, struct __eoddata1__TechnicalList *, const char*);
SOAP_FMAC1 struct __eoddata1__TechnicalList * SOAP_FMAC2 soap_instantiate___eoddata1__TechnicalList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__TechnicalList * soap_new___eoddata1__TechnicalList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__TechnicalList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__TechnicalList * soap_new_req___eoddata1__TechnicalList(
	struct soap *soap)
{	struct __eoddata1__TechnicalList *_p = soap_new___eoddata1__TechnicalList(soap);
	if (_p)
	{	soap_default___eoddata1__TechnicalList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__TechnicalList * soap_new_set___eoddata1__TechnicalList(
	struct soap *soap,
	_eoddata1__TechnicalList *eoddata1__TechnicalList)
{	struct __eoddata1__TechnicalList *_p = soap_new___eoddata1__TechnicalList(soap);
	if (_p)
	{	soap_default___eoddata1__TechnicalList(soap, _p);
		_p->eoddata1__TechnicalList = eoddata1__TechnicalList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__TechnicalList(struct soap*, const struct __eoddata1__TechnicalList *, const char*, const char*);

#ifndef soap_write___eoddata1__TechnicalList
#define soap_write___eoddata1__TechnicalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__TechnicalList(soap, data), 0) || eoddata::soap_put___eoddata1__TechnicalList(soap, data, "-eoddata1:TechnicalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__TechnicalList * SOAP_FMAC4 soap_get___eoddata1__TechnicalList(struct soap*, struct __eoddata1__TechnicalList *, const char*, const char*);

#ifndef soap_read___eoddata1__TechnicalList
#define soap_read___eoddata1__TechnicalList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__TechnicalList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__TechnicalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__FundamentalList
#define SOAP_TYPE_eoddata___eoddata1__FundamentalList (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__FundamentalList(struct soap*, struct __eoddata1__FundamentalList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__FundamentalList(struct soap*, const struct __eoddata1__FundamentalList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__FundamentalList(struct soap*, const char*, int, const struct __eoddata1__FundamentalList *, const char*);
SOAP_FMAC3 struct __eoddata1__FundamentalList * SOAP_FMAC4 soap_in___eoddata1__FundamentalList(struct soap*, const char*, struct __eoddata1__FundamentalList *, const char*);
SOAP_FMAC1 struct __eoddata1__FundamentalList * SOAP_FMAC2 soap_instantiate___eoddata1__FundamentalList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__FundamentalList * soap_new___eoddata1__FundamentalList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__FundamentalList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__FundamentalList * soap_new_req___eoddata1__FundamentalList(
	struct soap *soap)
{	struct __eoddata1__FundamentalList *_p = soap_new___eoddata1__FundamentalList(soap);
	if (_p)
	{	soap_default___eoddata1__FundamentalList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__FundamentalList * soap_new_set___eoddata1__FundamentalList(
	struct soap *soap,
	_eoddata1__FundamentalList *eoddata1__FundamentalList)
{	struct __eoddata1__FundamentalList *_p = soap_new___eoddata1__FundamentalList(soap);
	if (_p)
	{	soap_default___eoddata1__FundamentalList(soap, _p);
		_p->eoddata1__FundamentalList = eoddata1__FundamentalList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__FundamentalList(struct soap*, const struct __eoddata1__FundamentalList *, const char*, const char*);

#ifndef soap_write___eoddata1__FundamentalList
#define soap_write___eoddata1__FundamentalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__FundamentalList(soap, data), 0) || eoddata::soap_put___eoddata1__FundamentalList(soap, data, "-eoddata1:FundamentalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__FundamentalList * SOAP_FMAC4 soap_get___eoddata1__FundamentalList(struct soap*, struct __eoddata1__FundamentalList *, const char*, const char*);

#ifndef soap_read___eoddata1__FundamentalList
#define soap_read___eoddata1__FundamentalList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__FundamentalList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__FundamentalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__NewsListBySymbol
#define SOAP_TYPE_eoddata___eoddata1__NewsListBySymbol (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__NewsListBySymbol(struct soap*, struct __eoddata1__NewsListBySymbol *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__NewsListBySymbol(struct soap*, const struct __eoddata1__NewsListBySymbol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__NewsListBySymbol(struct soap*, const char*, int, const struct __eoddata1__NewsListBySymbol *, const char*);
SOAP_FMAC3 struct __eoddata1__NewsListBySymbol * SOAP_FMAC4 soap_in___eoddata1__NewsListBySymbol(struct soap*, const char*, struct __eoddata1__NewsListBySymbol *, const char*);
SOAP_FMAC1 struct __eoddata1__NewsListBySymbol * SOAP_FMAC2 soap_instantiate___eoddata1__NewsListBySymbol(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__NewsListBySymbol * soap_new___eoddata1__NewsListBySymbol(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__NewsListBySymbol(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__NewsListBySymbol * soap_new_req___eoddata1__NewsListBySymbol(
	struct soap *soap)
{	struct __eoddata1__NewsListBySymbol *_p = soap_new___eoddata1__NewsListBySymbol(soap);
	if (_p)
	{	soap_default___eoddata1__NewsListBySymbol(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__NewsListBySymbol * soap_new_set___eoddata1__NewsListBySymbol(
	struct soap *soap,
	_eoddata1__NewsListBySymbol *eoddata1__NewsListBySymbol)
{	struct __eoddata1__NewsListBySymbol *_p = soap_new___eoddata1__NewsListBySymbol(soap);
	if (_p)
	{	soap_default___eoddata1__NewsListBySymbol(soap, _p);
		_p->eoddata1__NewsListBySymbol = eoddata1__NewsListBySymbol;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__NewsListBySymbol(struct soap*, const struct __eoddata1__NewsListBySymbol *, const char*, const char*);

#ifndef soap_write___eoddata1__NewsListBySymbol
#define soap_write___eoddata1__NewsListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__NewsListBySymbol(soap, data), 0) || eoddata::soap_put___eoddata1__NewsListBySymbol(soap, data, "-eoddata1:NewsListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__NewsListBySymbol * SOAP_FMAC4 soap_get___eoddata1__NewsListBySymbol(struct soap*, struct __eoddata1__NewsListBySymbol *, const char*, const char*);

#ifndef soap_read___eoddata1__NewsListBySymbol
#define soap_read___eoddata1__NewsListBySymbol(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__NewsListBySymbol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__NewsListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__NewsList
#define SOAP_TYPE_eoddata___eoddata1__NewsList (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__NewsList(struct soap*, struct __eoddata1__NewsList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__NewsList(struct soap*, const struct __eoddata1__NewsList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__NewsList(struct soap*, const char*, int, const struct __eoddata1__NewsList *, const char*);
SOAP_FMAC3 struct __eoddata1__NewsList * SOAP_FMAC4 soap_in___eoddata1__NewsList(struct soap*, const char*, struct __eoddata1__NewsList *, const char*);
SOAP_FMAC1 struct __eoddata1__NewsList * SOAP_FMAC2 soap_instantiate___eoddata1__NewsList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__NewsList * soap_new___eoddata1__NewsList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__NewsList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__NewsList * soap_new_req___eoddata1__NewsList(
	struct soap *soap)
{	struct __eoddata1__NewsList *_p = soap_new___eoddata1__NewsList(soap);
	if (_p)
	{	soap_default___eoddata1__NewsList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__NewsList * soap_new_set___eoddata1__NewsList(
	struct soap *soap,
	_eoddata1__NewsList *eoddata1__NewsList)
{	struct __eoddata1__NewsList *_p = soap_new___eoddata1__NewsList(soap);
	if (_p)
	{	soap_default___eoddata1__NewsList(soap, _p);
		_p->eoddata1__NewsList = eoddata1__NewsList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__NewsList(struct soap*, const struct __eoddata1__NewsList *, const char*, const char*);

#ifndef soap_write___eoddata1__NewsList
#define soap_write___eoddata1__NewsList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__NewsList(soap, data), 0) || eoddata::soap_put___eoddata1__NewsList(soap, data, "-eoddata1:NewsList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__NewsList * SOAP_FMAC4 soap_get___eoddata1__NewsList(struct soap*, struct __eoddata1__NewsList *, const char*, const char*);

#ifndef soap_read___eoddata1__NewsList
#define soap_read___eoddata1__NewsList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__NewsList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__NewsList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteList
#define SOAP_TYPE_eoddata___eoddata1__QuoteList (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteList(struct soap*, struct __eoddata1__QuoteList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteList(struct soap*, const struct __eoddata1__QuoteList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteList(struct soap*, const char*, int, const struct __eoddata1__QuoteList *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteList * SOAP_FMAC4 soap_in___eoddata1__QuoteList(struct soap*, const char*, struct __eoddata1__QuoteList *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteList * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteList * soap_new___eoddata1__QuoteList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteList * soap_new_req___eoddata1__QuoteList(
	struct soap *soap)
{	struct __eoddata1__QuoteList *_p = soap_new___eoddata1__QuoteList(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteList * soap_new_set___eoddata1__QuoteList(
	struct soap *soap,
	_eoddata1__QuoteList *eoddata1__QuoteList)
{	struct __eoddata1__QuoteList *_p = soap_new___eoddata1__QuoteList(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList(soap, _p);
		_p->eoddata1__QuoteList = eoddata1__QuoteList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteList(struct soap*, const struct __eoddata1__QuoteList *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteList
#define soap_write___eoddata1__QuoteList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteList(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteList(soap, data, "-eoddata1:QuoteList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteList * SOAP_FMAC4 soap_get___eoddata1__QuoteList(struct soap*, struct __eoddata1__QuoteList *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteList
#define soap_read___eoddata1__QuoteList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolGet
#define SOAP_TYPE_eoddata___eoddata1__SymbolGet (194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolGet(struct soap*, struct __eoddata1__SymbolGet *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolGet(struct soap*, const struct __eoddata1__SymbolGet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolGet(struct soap*, const char*, int, const struct __eoddata1__SymbolGet *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolGet * SOAP_FMAC4 soap_in___eoddata1__SymbolGet(struct soap*, const char*, struct __eoddata1__SymbolGet *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolGet * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolGet(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolGet * soap_new___eoddata1__SymbolGet(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolGet(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolGet * soap_new_req___eoddata1__SymbolGet(
	struct soap *soap)
{	struct __eoddata1__SymbolGet *_p = soap_new___eoddata1__SymbolGet(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolGet(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolGet * soap_new_set___eoddata1__SymbolGet(
	struct soap *soap,
	_eoddata1__SymbolGet *eoddata1__SymbolGet)
{	struct __eoddata1__SymbolGet *_p = soap_new___eoddata1__SymbolGet(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolGet(soap, _p);
		_p->eoddata1__SymbolGet = eoddata1__SymbolGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolGet(struct soap*, const struct __eoddata1__SymbolGet *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolGet
#define soap_write___eoddata1__SymbolGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolGet(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolGet(soap, data, "-eoddata1:SymbolGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolGet * SOAP_FMAC4 soap_get___eoddata1__SymbolGet(struct soap*, struct __eoddata1__SymbolGet *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolGet
#define soap_read___eoddata1__SymbolGet(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteList2
#define SOAP_TYPE_eoddata___eoddata1__QuoteList2 (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteList2(struct soap*, struct __eoddata1__QuoteList2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteList2(struct soap*, const struct __eoddata1__QuoteList2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteList2(struct soap*, const char*, int, const struct __eoddata1__QuoteList2 *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteList2 * SOAP_FMAC4 soap_in___eoddata1__QuoteList2(struct soap*, const char*, struct __eoddata1__QuoteList2 *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteList2 * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteList2(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteList2 * soap_new___eoddata1__QuoteList2(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteList2(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteList2 * soap_new_req___eoddata1__QuoteList2(
	struct soap *soap)
{	struct __eoddata1__QuoteList2 *_p = soap_new___eoddata1__QuoteList2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList2(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteList2 * soap_new_set___eoddata1__QuoteList2(
	struct soap *soap,
	_eoddata1__QuoteList2 *eoddata1__QuoteList2)
{	struct __eoddata1__QuoteList2 *_p = soap_new___eoddata1__QuoteList2(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteList2(soap, _p);
		_p->eoddata1__QuoteList2 = eoddata1__QuoteList2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteList2(struct soap*, const struct __eoddata1__QuoteList2 *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteList2
#define soap_write___eoddata1__QuoteList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteList2(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteList2(soap, data, "-eoddata1:QuoteList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteList2 * SOAP_FMAC4 soap_get___eoddata1__QuoteList2(struct soap*, struct __eoddata1__QuoteList2 *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteList2
#define soap_read___eoddata1__QuoteList2(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteList2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__QuoteGet
#define SOAP_TYPE_eoddata___eoddata1__QuoteGet (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__QuoteGet(struct soap*, struct __eoddata1__QuoteGet *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__QuoteGet(struct soap*, const struct __eoddata1__QuoteGet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__QuoteGet(struct soap*, const char*, int, const struct __eoddata1__QuoteGet *, const char*);
SOAP_FMAC3 struct __eoddata1__QuoteGet * SOAP_FMAC4 soap_in___eoddata1__QuoteGet(struct soap*, const char*, struct __eoddata1__QuoteGet *, const char*);
SOAP_FMAC1 struct __eoddata1__QuoteGet * SOAP_FMAC2 soap_instantiate___eoddata1__QuoteGet(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__QuoteGet * soap_new___eoddata1__QuoteGet(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__QuoteGet(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__QuoteGet * soap_new_req___eoddata1__QuoteGet(
	struct soap *soap)
{	struct __eoddata1__QuoteGet *_p = soap_new___eoddata1__QuoteGet(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteGet(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__QuoteGet * soap_new_set___eoddata1__QuoteGet(
	struct soap *soap,
	_eoddata1__QuoteGet *eoddata1__QuoteGet)
{	struct __eoddata1__QuoteGet *_p = soap_new___eoddata1__QuoteGet(soap);
	if (_p)
	{	soap_default___eoddata1__QuoteGet(soap, _p);
		_p->eoddata1__QuoteGet = eoddata1__QuoteGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__QuoteGet(struct soap*, const struct __eoddata1__QuoteGet *, const char*, const char*);

#ifndef soap_write___eoddata1__QuoteGet
#define soap_write___eoddata1__QuoteGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__QuoteGet(soap, data), 0) || eoddata::soap_put___eoddata1__QuoteGet(soap, data, "-eoddata1:QuoteGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__QuoteGet * SOAP_FMAC4 soap_get___eoddata1__QuoteGet(struct soap*, struct __eoddata1__QuoteGet *, const char*, const char*);

#ifndef soap_read___eoddata1__QuoteGet
#define soap_read___eoddata1__QuoteGet(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__QuoteGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__QuoteGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolList2
#define SOAP_TYPE_eoddata___eoddata1__SymbolList2 (182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolList2(struct soap*, struct __eoddata1__SymbolList2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolList2(struct soap*, const struct __eoddata1__SymbolList2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolList2(struct soap*, const char*, int, const struct __eoddata1__SymbolList2 *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolList2 * SOAP_FMAC4 soap_in___eoddata1__SymbolList2(struct soap*, const char*, struct __eoddata1__SymbolList2 *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolList2 * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolList2(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolList2 * soap_new___eoddata1__SymbolList2(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolList2(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolList2 * soap_new_req___eoddata1__SymbolList2(
	struct soap *soap)
{	struct __eoddata1__SymbolList2 *_p = soap_new___eoddata1__SymbolList2(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList2(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolList2 * soap_new_set___eoddata1__SymbolList2(
	struct soap *soap,
	_eoddata1__SymbolList2 *eoddata1__SymbolList2)
{	struct __eoddata1__SymbolList2 *_p = soap_new___eoddata1__SymbolList2(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList2(soap, _p);
		_p->eoddata1__SymbolList2 = eoddata1__SymbolList2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolList2(struct soap*, const struct __eoddata1__SymbolList2 *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolList2
#define soap_write___eoddata1__SymbolList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolList2(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolList2(soap, data, "-eoddata1:SymbolList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolList2 * SOAP_FMAC4 soap_get___eoddata1__SymbolList2(struct soap*, struct __eoddata1__SymbolList2 *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolList2
#define soap_read___eoddata1__SymbolList2(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolList2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__SymbolList
#define SOAP_TYPE_eoddata___eoddata1__SymbolList (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__SymbolList(struct soap*, struct __eoddata1__SymbolList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__SymbolList(struct soap*, const struct __eoddata1__SymbolList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__SymbolList(struct soap*, const char*, int, const struct __eoddata1__SymbolList *, const char*);
SOAP_FMAC3 struct __eoddata1__SymbolList * SOAP_FMAC4 soap_in___eoddata1__SymbolList(struct soap*, const char*, struct __eoddata1__SymbolList *, const char*);
SOAP_FMAC1 struct __eoddata1__SymbolList * SOAP_FMAC2 soap_instantiate___eoddata1__SymbolList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__SymbolList * soap_new___eoddata1__SymbolList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__SymbolList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__SymbolList * soap_new_req___eoddata1__SymbolList(
	struct soap *soap)
{	struct __eoddata1__SymbolList *_p = soap_new___eoddata1__SymbolList(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__SymbolList * soap_new_set___eoddata1__SymbolList(
	struct soap *soap,
	_eoddata1__SymbolList *eoddata1__SymbolList)
{	struct __eoddata1__SymbolList *_p = soap_new___eoddata1__SymbolList(soap);
	if (_p)
	{	soap_default___eoddata1__SymbolList(soap, _p);
		_p->eoddata1__SymbolList = eoddata1__SymbolList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__SymbolList(struct soap*, const struct __eoddata1__SymbolList *, const char*, const char*);

#ifndef soap_write___eoddata1__SymbolList
#define soap_write___eoddata1__SymbolList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__SymbolList(soap, data), 0) || eoddata::soap_put___eoddata1__SymbolList(soap, data, "-eoddata1:SymbolList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__SymbolList * SOAP_FMAC4 soap_get___eoddata1__SymbolList(struct soap*, struct __eoddata1__SymbolList *, const char*, const char*);

#ifndef soap_read___eoddata1__SymbolList
#define soap_read___eoddata1__SymbolList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__SymbolList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__SymbolList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeGet
#define SOAP_TYPE_eoddata___eoddata1__ExchangeGet (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeGet(struct soap*, struct __eoddata1__ExchangeGet *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeGet(struct soap*, const struct __eoddata1__ExchangeGet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeGet(struct soap*, const char*, int, const struct __eoddata1__ExchangeGet *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeGet * SOAP_FMAC4 soap_in___eoddata1__ExchangeGet(struct soap*, const char*, struct __eoddata1__ExchangeGet *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeGet * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeGet(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeGet * soap_new___eoddata1__ExchangeGet(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeGet(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeGet * soap_new_req___eoddata1__ExchangeGet(
	struct soap *soap)
{	struct __eoddata1__ExchangeGet *_p = soap_new___eoddata1__ExchangeGet(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeGet(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeGet * soap_new_set___eoddata1__ExchangeGet(
	struct soap *soap,
	_eoddata1__ExchangeGet *eoddata1__ExchangeGet)
{	struct __eoddata1__ExchangeGet *_p = soap_new___eoddata1__ExchangeGet(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeGet(soap, _p);
		_p->eoddata1__ExchangeGet = eoddata1__ExchangeGet;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeGet(struct soap*, const struct __eoddata1__ExchangeGet *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeGet
#define soap_write___eoddata1__ExchangeGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeGet(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeGet(soap, data, "-eoddata1:ExchangeGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeGet * SOAP_FMAC4 soap_get___eoddata1__ExchangeGet(struct soap*, struct __eoddata1__ExchangeGet *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeGet
#define soap_read___eoddata1__ExchangeGet(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__ExchangeList
#define SOAP_TYPE_eoddata___eoddata1__ExchangeList (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__ExchangeList(struct soap*, struct __eoddata1__ExchangeList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__ExchangeList(struct soap*, const struct __eoddata1__ExchangeList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__ExchangeList(struct soap*, const char*, int, const struct __eoddata1__ExchangeList *, const char*);
SOAP_FMAC3 struct __eoddata1__ExchangeList * SOAP_FMAC4 soap_in___eoddata1__ExchangeList(struct soap*, const char*, struct __eoddata1__ExchangeList *, const char*);
SOAP_FMAC1 struct __eoddata1__ExchangeList * SOAP_FMAC2 soap_instantiate___eoddata1__ExchangeList(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__ExchangeList * soap_new___eoddata1__ExchangeList(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__ExchangeList(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__ExchangeList * soap_new_req___eoddata1__ExchangeList(
	struct soap *soap)
{	struct __eoddata1__ExchangeList *_p = soap_new___eoddata1__ExchangeList(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeList(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__ExchangeList * soap_new_set___eoddata1__ExchangeList(
	struct soap *soap,
	_eoddata1__ExchangeList *eoddata1__ExchangeList)
{	struct __eoddata1__ExchangeList *_p = soap_new___eoddata1__ExchangeList(soap);
	if (_p)
	{	soap_default___eoddata1__ExchangeList(soap, _p);
		_p->eoddata1__ExchangeList = eoddata1__ExchangeList;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__ExchangeList(struct soap*, const struct __eoddata1__ExchangeList *, const char*, const char*);

#ifndef soap_write___eoddata1__ExchangeList
#define soap_write___eoddata1__ExchangeList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__ExchangeList(soap, data), 0) || eoddata::soap_put___eoddata1__ExchangeList(soap, data, "-eoddata1:ExchangeList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__ExchangeList * SOAP_FMAC4 soap_get___eoddata1__ExchangeList(struct soap*, struct __eoddata1__ExchangeList *, const char*, const char*);

#ifndef soap_read___eoddata1__ExchangeList
#define soap_read___eoddata1__ExchangeList(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__ExchangeList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__ExchangeList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Membership
#define SOAP_TYPE_eoddata___eoddata1__Membership (166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Membership(struct soap*, struct __eoddata1__Membership *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Membership(struct soap*, const struct __eoddata1__Membership *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Membership(struct soap*, const char*, int, const struct __eoddata1__Membership *, const char*);
SOAP_FMAC3 struct __eoddata1__Membership * SOAP_FMAC4 soap_in___eoddata1__Membership(struct soap*, const char*, struct __eoddata1__Membership *, const char*);
SOAP_FMAC1 struct __eoddata1__Membership * SOAP_FMAC2 soap_instantiate___eoddata1__Membership(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Membership * soap_new___eoddata1__Membership(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Membership(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Membership * soap_new_req___eoddata1__Membership(
	struct soap *soap)
{	struct __eoddata1__Membership *_p = soap_new___eoddata1__Membership(soap);
	if (_p)
	{	soap_default___eoddata1__Membership(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Membership * soap_new_set___eoddata1__Membership(
	struct soap *soap,
	_eoddata1__Membership *eoddata1__Membership)
{	struct __eoddata1__Membership *_p = soap_new___eoddata1__Membership(soap);
	if (_p)
	{	soap_default___eoddata1__Membership(soap, _p);
		_p->eoddata1__Membership = eoddata1__Membership;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Membership(struct soap*, const struct __eoddata1__Membership *, const char*, const char*);

#ifndef soap_write___eoddata1__Membership
#define soap_write___eoddata1__Membership(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Membership(soap, data), 0) || eoddata::soap_put___eoddata1__Membership(soap, data, "-eoddata1:Membership", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Membership * SOAP_FMAC4 soap_get___eoddata1__Membership(struct soap*, struct __eoddata1__Membership *, const char*, const char*);

#ifndef soap_read___eoddata1__Membership
#define soap_read___eoddata1__Membership(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Membership(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Membership(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Login2
#define SOAP_TYPE_eoddata___eoddata1__Login2 (162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Login2(struct soap*, struct __eoddata1__Login2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Login2(struct soap*, const struct __eoddata1__Login2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Login2(struct soap*, const char*, int, const struct __eoddata1__Login2 *, const char*);
SOAP_FMAC3 struct __eoddata1__Login2 * SOAP_FMAC4 soap_in___eoddata1__Login2(struct soap*, const char*, struct __eoddata1__Login2 *, const char*);
SOAP_FMAC1 struct __eoddata1__Login2 * SOAP_FMAC2 soap_instantiate___eoddata1__Login2(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Login2 * soap_new___eoddata1__Login2(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Login2(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Login2 * soap_new_req___eoddata1__Login2(
	struct soap *soap)
{	struct __eoddata1__Login2 *_p = soap_new___eoddata1__Login2(soap);
	if (_p)
	{	soap_default___eoddata1__Login2(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Login2 * soap_new_set___eoddata1__Login2(
	struct soap *soap,
	_eoddata1__Login2 *eoddata1__Login2)
{	struct __eoddata1__Login2 *_p = soap_new___eoddata1__Login2(soap);
	if (_p)
	{	soap_default___eoddata1__Login2(soap, _p);
		_p->eoddata1__Login2 = eoddata1__Login2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Login2(struct soap*, const struct __eoddata1__Login2 *, const char*, const char*);

#ifndef soap_write___eoddata1__Login2
#define soap_write___eoddata1__Login2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Login2(soap, data), 0) || eoddata::soap_put___eoddata1__Login2(soap, data, "-eoddata1:Login2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Login2 * SOAP_FMAC4 soap_get___eoddata1__Login2(struct soap*, struct __eoddata1__Login2 *, const char*, const char*);

#ifndef soap_read___eoddata1__Login2
#define soap_read___eoddata1__Login2(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Login2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Login2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata___eoddata1__Login
#define SOAP_TYPE_eoddata___eoddata1__Login (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___eoddata1__Login(struct soap*, struct __eoddata1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___eoddata1__Login(struct soap*, const struct __eoddata1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___eoddata1__Login(struct soap*, const char*, int, const struct __eoddata1__Login *, const char*);
SOAP_FMAC3 struct __eoddata1__Login * SOAP_FMAC4 soap_in___eoddata1__Login(struct soap*, const char*, struct __eoddata1__Login *, const char*);
SOAP_FMAC1 struct __eoddata1__Login * SOAP_FMAC2 soap_instantiate___eoddata1__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __eoddata1__Login * soap_new___eoddata1__Login(struct soap *soap, int n = -1) { return soap_instantiate___eoddata1__Login(soap, n, NULL, NULL, NULL); }

inline struct __eoddata1__Login * soap_new_req___eoddata1__Login(
	struct soap *soap)
{	struct __eoddata1__Login *_p = soap_new___eoddata1__Login(soap);
	if (_p)
	{	soap_default___eoddata1__Login(soap, _p);
	}
	return _p;
}

inline struct __eoddata1__Login * soap_new_set___eoddata1__Login(
	struct soap *soap,
	_eoddata1__Login *eoddata1__Login)
{	struct __eoddata1__Login *_p = soap_new___eoddata1__Login(soap);
	if (_p)
	{	soap_default___eoddata1__Login(soap, _p);
		_p->eoddata1__Login = eoddata1__Login;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___eoddata1__Login(struct soap*, const struct __eoddata1__Login *, const char*, const char*);

#ifndef soap_write___eoddata1__Login
#define soap_write___eoddata1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize___eoddata1__Login(soap, data), 0) || eoddata::soap_put___eoddata1__Login(soap, data, "-eoddata1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __eoddata1__Login * SOAP_FMAC4 soap_get___eoddata1__Login(struct soap*, struct __eoddata1__Login *, const char*, const char*);

#ifndef soap_read___eoddata1__Login
#define soap_read___eoddata1__Login(soap, data) ( ((data) ? (eoddata::soap_default___eoddata1__Login(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get___eoddata1__Login(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_eoddata_PointerToSOAP_ENV__Reason (368)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || eoddata::soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( ((data) ? (eoddata::soap_default_PointerToSOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToSOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_eoddata_PointerToSOAP_ENV__Detail (367)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || eoddata::soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( ((data) ? (eoddata::soap_default_PointerToSOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToSOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_eoddata_PointerToSOAP_ENV__Code
#define SOAP_TYPE_eoddata_PointerToSOAP_ENV__Code (361)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || eoddata::soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( ((data) ? (eoddata::soap_default_PointerToSOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToSOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__ValidateAccess
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__ValidateAccess (287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__ValidateAccess(struct soap*, _eoddata1__ValidateAccess *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__ValidateAccess(struct soap*, const char *, int, _eoddata1__ValidateAccess *const*, const char *);
SOAP_FMAC3 _eoddata1__ValidateAccess ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__ValidateAccess(struct soap*, const char*, _eoddata1__ValidateAccess **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__ValidateAccess(struct soap*, _eoddata1__ValidateAccess *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__ValidateAccess
#define soap_write_PointerTo_eoddata1__ValidateAccess(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__ValidateAccess(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__ValidateAccess(soap, data, "eoddata1:ValidateAccess", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ValidateAccess ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__ValidateAccess(struct soap*, _eoddata1__ValidateAccess **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__ValidateAccess
#define soap_read_PointerTo_eoddata1__ValidateAccess(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__ValidateAccess(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__ValidateAccess(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__UpdateDataFormat
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__UpdateDataFormat (283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__UpdateDataFormat(struct soap*, _eoddata1__UpdateDataFormat *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__UpdateDataFormat(struct soap*, const char *, int, _eoddata1__UpdateDataFormat *const*, const char *);
SOAP_FMAC3 _eoddata1__UpdateDataFormat ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__UpdateDataFormat(struct soap*, const char*, _eoddata1__UpdateDataFormat **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__UpdateDataFormat(struct soap*, _eoddata1__UpdateDataFormat *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__UpdateDataFormat
#define soap_write_PointerTo_eoddata1__UpdateDataFormat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__UpdateDataFormat(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__UpdateDataFormat(soap, data, "eoddata1:UpdateDataFormat", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__UpdateDataFormat ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__UpdateDataFormat(struct soap*, _eoddata1__UpdateDataFormat **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__UpdateDataFormat
#define soap_read_PointerTo_eoddata1__UpdateDataFormat(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__UpdateDataFormat(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__UpdateDataFormat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__DataFormats
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__DataFormats (279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__DataFormats(struct soap*, _eoddata1__DataFormats *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__DataFormats(struct soap*, const char *, int, _eoddata1__DataFormats *const*, const char *);
SOAP_FMAC3 _eoddata1__DataFormats ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__DataFormats(struct soap*, const char*, _eoddata1__DataFormats **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__DataFormats(struct soap*, _eoddata1__DataFormats *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__DataFormats
#define soap_write_PointerTo_eoddata1__DataFormats(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__DataFormats(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__DataFormats(soap, data, "eoddata1:DataFormats", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataFormats ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__DataFormats(struct soap*, _eoddata1__DataFormats **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__DataFormats
#define soap_read_PointerTo_eoddata1__DataFormats(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__DataFormats(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__DataFormats(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__DataClientLatestVersion
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__DataClientLatestVersion (275)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__DataClientLatestVersion(struct soap*, _eoddata1__DataClientLatestVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__DataClientLatestVersion(struct soap*, const char *, int, _eoddata1__DataClientLatestVersion *const*, const char *);
SOAP_FMAC3 _eoddata1__DataClientLatestVersion ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__DataClientLatestVersion(struct soap*, const char*, _eoddata1__DataClientLatestVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__DataClientLatestVersion(struct soap*, _eoddata1__DataClientLatestVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__DataClientLatestVersion
#define soap_write_PointerTo_eoddata1__DataClientLatestVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__DataClientLatestVersion(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__DataClientLatestVersion(soap, data, "eoddata1:DataClientLatestVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__DataClientLatestVersion ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__DataClientLatestVersion(struct soap*, _eoddata1__DataClientLatestVersion **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__DataClientLatestVersion
#define soap_read_PointerTo_eoddata1__DataClientLatestVersion(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__DataClientLatestVersion(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__DataClientLatestVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolChangesByExchange
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolChangesByExchange (271)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolChangesByExchange(struct soap*, _eoddata1__SymbolChangesByExchange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolChangesByExchange(struct soap*, const char *, int, _eoddata1__SymbolChangesByExchange *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolChangesByExchange ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolChangesByExchange(struct soap*, const char*, _eoddata1__SymbolChangesByExchange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolChangesByExchange(struct soap*, _eoddata1__SymbolChangesByExchange *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolChangesByExchange
#define soap_write_PointerTo_eoddata1__SymbolChangesByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolChangesByExchange(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolChangesByExchange(soap, data, "eoddata1:SymbolChangesByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChangesByExchange ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolChangesByExchange(struct soap*, _eoddata1__SymbolChangesByExchange **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolChangesByExchange
#define soap_read_PointerTo_eoddata1__SymbolChangesByExchange(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolChangesByExchange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolChangesByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDatePeriod2
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDatePeriod2 (267)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteListByDatePeriod2(struct soap*, _eoddata1__QuoteListByDatePeriod2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteListByDatePeriod2(struct soap*, const char *, int, _eoddata1__QuoteListByDatePeriod2 *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2 ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteListByDatePeriod2(struct soap*, const char*, _eoddata1__QuoteListByDatePeriod2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteListByDatePeriod2(struct soap*, _eoddata1__QuoteListByDatePeriod2 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteListByDatePeriod2
#define soap_write_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, data, "eoddata1:QuoteListByDatePeriod2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod2 ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteListByDatePeriod2(struct soap*, _eoddata1__QuoteListByDatePeriod2 **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteListByDatePeriod2
#define soap_read_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteListByDatePeriod2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDatePeriod
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDatePeriod (263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteListByDatePeriod(struct soap*, _eoddata1__QuoteListByDatePeriod *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteListByDatePeriod(struct soap*, const char *, int, _eoddata1__QuoteListByDatePeriod *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteListByDatePeriod(struct soap*, const char*, _eoddata1__QuoteListByDatePeriod **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteListByDatePeriod(struct soap*, _eoddata1__QuoteListByDatePeriod *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteListByDatePeriod
#define soap_write_PointerTo_eoddata1__QuoteListByDatePeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteListByDatePeriod(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteListByDatePeriod(soap, data, "eoddata1:QuoteListByDatePeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDatePeriod ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteListByDatePeriod(struct soap*, _eoddata1__QuoteListByDatePeriod **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteListByDatePeriod
#define soap_read_PointerTo_eoddata1__QuoteListByDatePeriod(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteListByDatePeriod(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteListByDatePeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange (259)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, _eoddata1__SymbolHistoryPeriodByDateRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char *, int, _eoddata1__SymbolHistoryPeriodByDateRange *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRange ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, const char*, _eoddata1__SymbolHistoryPeriodByDateRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, _eoddata1__SymbolHistoryPeriodByDateRange *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange
#define soap_write_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, data, "eoddata1:SymbolHistoryPeriodByDateRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriodByDateRange ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(struct soap*, _eoddata1__SymbolHistoryPeriodByDateRange **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange
#define soap_read_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolHistoryPeriodByDateRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistoryPeriod
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistoryPeriod (255)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolHistoryPeriod(struct soap*, _eoddata1__SymbolHistoryPeriod *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolHistoryPeriod(struct soap*, const char *, int, _eoddata1__SymbolHistoryPeriod *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolHistoryPeriod ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolHistoryPeriod(struct soap*, const char*, _eoddata1__SymbolHistoryPeriod **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolHistoryPeriod(struct soap*, _eoddata1__SymbolHistoryPeriod *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolHistoryPeriod
#define soap_write_PointerTo_eoddata1__SymbolHistoryPeriod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolHistoryPeriod(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolHistoryPeriod(soap, data, "eoddata1:SymbolHistoryPeriod", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistoryPeriod ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolHistoryPeriod(struct soap*, _eoddata1__SymbolHistoryPeriod **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolHistoryPeriod
#define soap_read_PointerTo_eoddata1__SymbolHistoryPeriod(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolHistoryPeriod(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolHistoryPeriod(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__CountryList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__CountryList (251)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__CountryList(struct soap*, _eoddata1__CountryList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__CountryList(struct soap*, const char *, int, _eoddata1__CountryList *const*, const char *);
SOAP_FMAC3 _eoddata1__CountryList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__CountryList(struct soap*, const char*, _eoddata1__CountryList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__CountryList(struct soap*, _eoddata1__CountryList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__CountryList
#define soap_write_PointerTo_eoddata1__CountryList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__CountryList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__CountryList(soap, data, "eoddata1:CountryList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__CountryList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__CountryList(struct soap*, _eoddata1__CountryList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__CountryList
#define soap_read_PointerTo_eoddata1__CountryList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__CountryList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__CountryList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SplitListBySymbol
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SplitListBySymbol (247)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SplitListBySymbol(struct soap*, _eoddata1__SplitListBySymbol *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SplitListBySymbol(struct soap*, const char *, int, _eoddata1__SplitListBySymbol *const*, const char *);
SOAP_FMAC3 _eoddata1__SplitListBySymbol ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SplitListBySymbol(struct soap*, const char*, _eoddata1__SplitListBySymbol **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SplitListBySymbol(struct soap*, _eoddata1__SplitListBySymbol *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SplitListBySymbol
#define soap_write_PointerTo_eoddata1__SplitListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SplitListBySymbol(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SplitListBySymbol(soap, data, "eoddata1:SplitListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListBySymbol ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SplitListBySymbol(struct soap*, _eoddata1__SplitListBySymbol **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SplitListBySymbol
#define soap_read_PointerTo_eoddata1__SplitListBySymbol(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SplitListBySymbol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SplitListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SplitListByExchange
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SplitListByExchange (243)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SplitListByExchange(struct soap*, _eoddata1__SplitListByExchange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SplitListByExchange(struct soap*, const char *, int, _eoddata1__SplitListByExchange *const*, const char *);
SOAP_FMAC3 _eoddata1__SplitListByExchange ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SplitListByExchange(struct soap*, const char*, _eoddata1__SplitListByExchange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SplitListByExchange(struct soap*, _eoddata1__SplitListByExchange *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SplitListByExchange
#define soap_write_PointerTo_eoddata1__SplitListByExchange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SplitListByExchange(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SplitListByExchange(soap, data, "eoddata1:SplitListByExchange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SplitListByExchange ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SplitListByExchange(struct soap*, _eoddata1__SplitListByExchange **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SplitListByExchange
#define soap_read_PointerTo_eoddata1__SplitListByExchange(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SplitListByExchange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SplitListByExchange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeMonths
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeMonths (239)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__ExchangeMonths(struct soap*, _eoddata1__ExchangeMonths *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__ExchangeMonths(struct soap*, const char *, int, _eoddata1__ExchangeMonths *const*, const char *);
SOAP_FMAC3 _eoddata1__ExchangeMonths ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__ExchangeMonths(struct soap*, const char*, _eoddata1__ExchangeMonths **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__ExchangeMonths(struct soap*, _eoddata1__ExchangeMonths *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__ExchangeMonths
#define soap_write_PointerTo_eoddata1__ExchangeMonths(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__ExchangeMonths(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__ExchangeMonths(soap, data, "eoddata1:ExchangeMonths", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeMonths ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__ExchangeMonths(struct soap*, _eoddata1__ExchangeMonths **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__ExchangeMonths
#define soap_read_PointerTo_eoddata1__ExchangeMonths(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__ExchangeMonths(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__ExchangeMonths(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolChart
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolChart (235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolChart(struct soap*, _eoddata1__SymbolChart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolChart(struct soap*, const char *, int, _eoddata1__SymbolChart *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolChart ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolChart(struct soap*, const char*, _eoddata1__SymbolChart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolChart(struct soap*, _eoddata1__SymbolChart *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolChart
#define soap_write_PointerTo_eoddata1__SymbolChart(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolChart(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolChart(soap, data, "eoddata1:SymbolChart", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolChart ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolChart(struct soap*, _eoddata1__SymbolChart **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolChart
#define soap_read_PointerTo_eoddata1__SymbolChart(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolChart(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolChart(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__Top10Losses
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__Top10Losses (231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__Top10Losses(struct soap*, _eoddata1__Top10Losses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__Top10Losses(struct soap*, const char *, int, _eoddata1__Top10Losses *const*, const char *);
SOAP_FMAC3 _eoddata1__Top10Losses ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__Top10Losses(struct soap*, const char*, _eoddata1__Top10Losses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__Top10Losses(struct soap*, _eoddata1__Top10Losses *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__Top10Losses
#define soap_write_PointerTo_eoddata1__Top10Losses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__Top10Losses(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__Top10Losses(soap, data, "eoddata1:Top10Losses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10Losses ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__Top10Losses(struct soap*, _eoddata1__Top10Losses **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__Top10Losses
#define soap_read_PointerTo_eoddata1__Top10Losses(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__Top10Losses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__Top10Losses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__Top10Gains
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__Top10Gains (227)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__Top10Gains(struct soap*, _eoddata1__Top10Gains *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__Top10Gains(struct soap*, const char *, int, _eoddata1__Top10Gains *const*, const char *);
SOAP_FMAC3 _eoddata1__Top10Gains ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__Top10Gains(struct soap*, const char*, _eoddata1__Top10Gains **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__Top10Gains(struct soap*, _eoddata1__Top10Gains *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__Top10Gains
#define soap_write_PointerTo_eoddata1__Top10Gains(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__Top10Gains(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__Top10Gains(soap, data, "eoddata1:Top10Gains", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Top10Gains ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__Top10Gains(struct soap*, _eoddata1__Top10Gains **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__Top10Gains
#define soap_read_PointerTo_eoddata1__Top10Gains(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__Top10Gains(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__Top10Gains(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistory
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolHistory (223)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolHistory(struct soap*, _eoddata1__SymbolHistory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolHistory(struct soap*, const char *, int, _eoddata1__SymbolHistory *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolHistory ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolHistory(struct soap*, const char*, _eoddata1__SymbolHistory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolHistory(struct soap*, _eoddata1__SymbolHistory *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolHistory
#define soap_write_PointerTo_eoddata1__SymbolHistory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolHistory(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolHistory(soap, data, "eoddata1:SymbolHistory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolHistory ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolHistory(struct soap*, _eoddata1__SymbolHistory **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolHistory
#define soap_read_PointerTo_eoddata1__SymbolHistory(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolHistory(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolHistory(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDate2
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDate2 (219)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteListByDate2(struct soap*, _eoddata1__QuoteListByDate2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteListByDate2(struct soap*, const char *, int, _eoddata1__QuoteListByDate2 *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteListByDate2 ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteListByDate2(struct soap*, const char*, _eoddata1__QuoteListByDate2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteListByDate2(struct soap*, _eoddata1__QuoteListByDate2 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteListByDate2
#define soap_write_PointerTo_eoddata1__QuoteListByDate2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteListByDate2(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteListByDate2(soap, data, "eoddata1:QuoteListByDate2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDate2 ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteListByDate2(struct soap*, _eoddata1__QuoteListByDate2 **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteListByDate2
#define soap_read_PointerTo_eoddata1__QuoteListByDate2(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteListByDate2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteListByDate2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDate
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteListByDate (215)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteListByDate(struct soap*, _eoddata1__QuoteListByDate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteListByDate(struct soap*, const char *, int, _eoddata1__QuoteListByDate *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteListByDate ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteListByDate(struct soap*, const char*, _eoddata1__QuoteListByDate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteListByDate(struct soap*, _eoddata1__QuoteListByDate *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteListByDate
#define soap_write_PointerTo_eoddata1__QuoteListByDate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteListByDate(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteListByDate(soap, data, "eoddata1:QuoteListByDate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteListByDate ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteListByDate(struct soap*, _eoddata1__QuoteListByDate **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteListByDate
#define soap_read_PointerTo_eoddata1__QuoteListByDate(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteListByDate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteListByDate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__TechnicalList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__TechnicalList (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__TechnicalList(struct soap*, _eoddata1__TechnicalList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__TechnicalList(struct soap*, const char *, int, _eoddata1__TechnicalList *const*, const char *);
SOAP_FMAC3 _eoddata1__TechnicalList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__TechnicalList(struct soap*, const char*, _eoddata1__TechnicalList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__TechnicalList(struct soap*, _eoddata1__TechnicalList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__TechnicalList
#define soap_write_PointerTo_eoddata1__TechnicalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__TechnicalList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__TechnicalList(soap, data, "eoddata1:TechnicalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__TechnicalList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__TechnicalList(struct soap*, _eoddata1__TechnicalList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__TechnicalList
#define soap_read_PointerTo_eoddata1__TechnicalList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__TechnicalList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__TechnicalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__FundamentalList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__FundamentalList (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__FundamentalList(struct soap*, _eoddata1__FundamentalList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__FundamentalList(struct soap*, const char *, int, _eoddata1__FundamentalList *const*, const char *);
SOAP_FMAC3 _eoddata1__FundamentalList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__FundamentalList(struct soap*, const char*, _eoddata1__FundamentalList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__FundamentalList(struct soap*, _eoddata1__FundamentalList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__FundamentalList
#define soap_write_PointerTo_eoddata1__FundamentalList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__FundamentalList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__FundamentalList(soap, data, "eoddata1:FundamentalList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__FundamentalList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__FundamentalList(struct soap*, _eoddata1__FundamentalList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__FundamentalList
#define soap_read_PointerTo_eoddata1__FundamentalList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__FundamentalList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__FundamentalList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__NewsListBySymbol
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__NewsListBySymbol (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__NewsListBySymbol(struct soap*, _eoddata1__NewsListBySymbol *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__NewsListBySymbol(struct soap*, const char *, int, _eoddata1__NewsListBySymbol *const*, const char *);
SOAP_FMAC3 _eoddata1__NewsListBySymbol ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__NewsListBySymbol(struct soap*, const char*, _eoddata1__NewsListBySymbol **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__NewsListBySymbol(struct soap*, _eoddata1__NewsListBySymbol *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__NewsListBySymbol
#define soap_write_PointerTo_eoddata1__NewsListBySymbol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__NewsListBySymbol(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__NewsListBySymbol(soap, data, "eoddata1:NewsListBySymbol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsListBySymbol ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__NewsListBySymbol(struct soap*, _eoddata1__NewsListBySymbol **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__NewsListBySymbol
#define soap_read_PointerTo_eoddata1__NewsListBySymbol(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__NewsListBySymbol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__NewsListBySymbol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__NewsList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__NewsList (199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__NewsList(struct soap*, _eoddata1__NewsList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__NewsList(struct soap*, const char *, int, _eoddata1__NewsList *const*, const char *);
SOAP_FMAC3 _eoddata1__NewsList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__NewsList(struct soap*, const char*, _eoddata1__NewsList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__NewsList(struct soap*, _eoddata1__NewsList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__NewsList
#define soap_write_PointerTo_eoddata1__NewsList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__NewsList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__NewsList(soap, data, "eoddata1:NewsList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__NewsList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__NewsList(struct soap*, _eoddata1__NewsList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__NewsList
#define soap_read_PointerTo_eoddata1__NewsList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__NewsList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__NewsList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteList (195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteList(struct soap*, _eoddata1__QuoteList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteList(struct soap*, const char *, int, _eoddata1__QuoteList *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteList(struct soap*, const char*, _eoddata1__QuoteList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteList(struct soap*, _eoddata1__QuoteList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteList
#define soap_write_PointerTo_eoddata1__QuoteList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteList(soap, data, "eoddata1:QuoteList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteList(struct soap*, _eoddata1__QuoteList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteList
#define soap_read_PointerTo_eoddata1__QuoteList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolGet
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolGet (191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolGet(struct soap*, _eoddata1__SymbolGet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolGet(struct soap*, const char *, int, _eoddata1__SymbolGet *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolGet ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolGet(struct soap*, const char*, _eoddata1__SymbolGet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolGet(struct soap*, _eoddata1__SymbolGet *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolGet
#define soap_write_PointerTo_eoddata1__SymbolGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolGet(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolGet(soap, data, "eoddata1:SymbolGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolGet ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolGet(struct soap*, _eoddata1__SymbolGet **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolGet
#define soap_read_PointerTo_eoddata1__SymbolGet(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteList2
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteList2 (187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteList2(struct soap*, _eoddata1__QuoteList2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteList2(struct soap*, const char *, int, _eoddata1__QuoteList2 *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteList2 ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteList2(struct soap*, const char*, _eoddata1__QuoteList2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteList2(struct soap*, _eoddata1__QuoteList2 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteList2
#define soap_write_PointerTo_eoddata1__QuoteList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteList2(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteList2(soap, data, "eoddata1:QuoteList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteList2 ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteList2(struct soap*, _eoddata1__QuoteList2 **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteList2
#define soap_read_PointerTo_eoddata1__QuoteList2(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteList2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteGet
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__QuoteGet (183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__QuoteGet(struct soap*, _eoddata1__QuoteGet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__QuoteGet(struct soap*, const char *, int, _eoddata1__QuoteGet *const*, const char *);
SOAP_FMAC3 _eoddata1__QuoteGet ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__QuoteGet(struct soap*, const char*, _eoddata1__QuoteGet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__QuoteGet(struct soap*, _eoddata1__QuoteGet *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__QuoteGet
#define soap_write_PointerTo_eoddata1__QuoteGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__QuoteGet(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__QuoteGet(soap, data, "eoddata1:QuoteGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__QuoteGet ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__QuoteGet(struct soap*, _eoddata1__QuoteGet **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__QuoteGet
#define soap_read_PointerTo_eoddata1__QuoteGet(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__QuoteGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__QuoteGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolList2
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolList2 (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolList2(struct soap*, _eoddata1__SymbolList2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolList2(struct soap*, const char *, int, _eoddata1__SymbolList2 *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolList2 ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolList2(struct soap*, const char*, _eoddata1__SymbolList2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolList2(struct soap*, _eoddata1__SymbolList2 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolList2
#define soap_write_PointerTo_eoddata1__SymbolList2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolList2(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolList2(soap, data, "eoddata1:SymbolList2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolList2 ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolList2(struct soap*, _eoddata1__SymbolList2 **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolList2
#define soap_read_PointerTo_eoddata1__SymbolList2(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolList2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolList2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__SymbolList (175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__SymbolList(struct soap*, _eoddata1__SymbolList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__SymbolList(struct soap*, const char *, int, _eoddata1__SymbolList *const*, const char *);
SOAP_FMAC3 _eoddata1__SymbolList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__SymbolList(struct soap*, const char*, _eoddata1__SymbolList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__SymbolList(struct soap*, _eoddata1__SymbolList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__SymbolList
#define soap_write_PointerTo_eoddata1__SymbolList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__SymbolList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__SymbolList(soap, data, "eoddata1:SymbolList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__SymbolList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__SymbolList(struct soap*, _eoddata1__SymbolList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__SymbolList
#define soap_read_PointerTo_eoddata1__SymbolList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__SymbolList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__SymbolList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeGet
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeGet (171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__ExchangeGet(struct soap*, _eoddata1__ExchangeGet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__ExchangeGet(struct soap*, const char *, int, _eoddata1__ExchangeGet *const*, const char *);
SOAP_FMAC3 _eoddata1__ExchangeGet ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__ExchangeGet(struct soap*, const char*, _eoddata1__ExchangeGet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__ExchangeGet(struct soap*, _eoddata1__ExchangeGet *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__ExchangeGet
#define soap_write_PointerTo_eoddata1__ExchangeGet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__ExchangeGet(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__ExchangeGet(soap, data, "eoddata1:ExchangeGet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeGet ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__ExchangeGet(struct soap*, _eoddata1__ExchangeGet **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__ExchangeGet
#define soap_read_PointerTo_eoddata1__ExchangeGet(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__ExchangeGet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__ExchangeGet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeList
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__ExchangeList (167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__ExchangeList(struct soap*, _eoddata1__ExchangeList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__ExchangeList(struct soap*, const char *, int, _eoddata1__ExchangeList *const*, const char *);
SOAP_FMAC3 _eoddata1__ExchangeList ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__ExchangeList(struct soap*, const char*, _eoddata1__ExchangeList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__ExchangeList(struct soap*, _eoddata1__ExchangeList *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__ExchangeList
#define soap_write_PointerTo_eoddata1__ExchangeList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__ExchangeList(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__ExchangeList(soap, data, "eoddata1:ExchangeList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__ExchangeList ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__ExchangeList(struct soap*, _eoddata1__ExchangeList **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__ExchangeList
#define soap_read_PointerTo_eoddata1__ExchangeList(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__ExchangeList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__ExchangeList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__Membership
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__Membership (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__Membership(struct soap*, _eoddata1__Membership *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__Membership(struct soap*, const char *, int, _eoddata1__Membership *const*, const char *);
SOAP_FMAC3 _eoddata1__Membership ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__Membership(struct soap*, const char*, _eoddata1__Membership **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__Membership(struct soap*, _eoddata1__Membership *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__Membership
#define soap_write_PointerTo_eoddata1__Membership(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__Membership(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__Membership(soap, data, "eoddata1:Membership", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Membership ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__Membership(struct soap*, _eoddata1__Membership **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__Membership
#define soap_read_PointerTo_eoddata1__Membership(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__Membership(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__Membership(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__Login2
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__Login2 (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__Login2(struct soap*, _eoddata1__Login2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__Login2(struct soap*, const char *, int, _eoddata1__Login2 *const*, const char *);
SOAP_FMAC3 _eoddata1__Login2 ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__Login2(struct soap*, const char*, _eoddata1__Login2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__Login2(struct soap*, _eoddata1__Login2 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__Login2
#define soap_write_PointerTo_eoddata1__Login2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__Login2(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__Login2(soap, data, "eoddata1:Login2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Login2 ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__Login2(struct soap*, _eoddata1__Login2 **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__Login2
#define soap_read_PointerTo_eoddata1__Login2(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__Login2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__Login2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTo_eoddata1__Login
#define SOAP_TYPE_eoddata_PointerTo_eoddata1__Login (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_eoddata1__Login(struct soap*, _eoddata1__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_eoddata1__Login(struct soap*, const char *, int, _eoddata1__Login *const*, const char *);
SOAP_FMAC3 _eoddata1__Login ** SOAP_FMAC4 soap_in_PointerTo_eoddata1__Login(struct soap*, const char*, _eoddata1__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_eoddata1__Login(struct soap*, _eoddata1__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_eoddata1__Login
#define soap_write_PointerTo_eoddata1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTo_eoddata1__Login(soap, data), 0) || eoddata::soap_put_PointerTo_eoddata1__Login(soap, data, "eoddata1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _eoddata1__Login ** SOAP_FMAC4 soap_get_PointerTo_eoddata1__Login(struct soap*, _eoddata1__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_eoddata1__Login
#define soap_read_PointerTo_eoddata1__Login(soap, data) ( ((data) ? (eoddata::soap_default_PointerTo_eoddata1__Login(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTo_eoddata1__Login(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__RESPONSE
#define SOAP_TYPE_eoddata_PointerToeoddata1__RESPONSE (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__RESPONSE(struct soap*, eoddata1__RESPONSE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__RESPONSE(struct soap*, const char *, int, eoddata1__RESPONSE *const*, const char *);
SOAP_FMAC3 eoddata1__RESPONSE ** SOAP_FMAC4 soap_in_PointerToeoddata1__RESPONSE(struct soap*, const char*, eoddata1__RESPONSE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__RESPONSE(struct soap*, eoddata1__RESPONSE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__RESPONSE
#define soap_write_PointerToeoddata1__RESPONSE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__RESPONSE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__RESPONSE(soap, data, "eoddata1:RESPONSE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__RESPONSE ** SOAP_FMAC4 soap_get_PointerToeoddata1__RESPONSE(struct soap*, eoddata1__RESPONSE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__RESPONSE
#define soap_read_PointerToeoddata1__RESPONSE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__RESPONSE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__RESPONSE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__LOGINRESPONSE
#define SOAP_TYPE_eoddata_PointerToeoddata1__LOGINRESPONSE (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__LOGINRESPONSE(struct soap*, eoddata1__LOGINRESPONSE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__LOGINRESPONSE(struct soap*, const char *, int, eoddata1__LOGINRESPONSE *const*, const char *);
SOAP_FMAC3 eoddata1__LOGINRESPONSE ** SOAP_FMAC4 soap_in_PointerToeoddata1__LOGINRESPONSE(struct soap*, const char*, eoddata1__LOGINRESPONSE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__LOGINRESPONSE(struct soap*, eoddata1__LOGINRESPONSE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__LOGINRESPONSE
#define soap_write_PointerToeoddata1__LOGINRESPONSE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__LOGINRESPONSE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__LOGINRESPONSE(soap, data, "eoddata1:LOGINRESPONSE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__LOGINRESPONSE ** SOAP_FMAC4 soap_get_PointerToeoddata1__LOGINRESPONSE(struct soap*, eoddata1__LOGINRESPONSE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__LOGINRESPONSE
#define soap_read_PointerToeoddata1__LOGINRESPONSE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__LOGINRESPONSE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__LOGINRESPONSE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__DATAFORMAT_USCORECOLUMN
#define SOAP_TYPE_eoddata_PointerToeoddata1__DATAFORMAT_USCORECOLUMN (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__DATAFORMAT_USCORECOLUMN *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char *, int, eoddata1__DATAFORMAT_USCORECOLUMN *const*, const char *);
SOAP_FMAC3 eoddata1__DATAFORMAT_USCORECOLUMN ** SOAP_FMAC4 soap_in_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char*, eoddata1__DATAFORMAT_USCORECOLUMN **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__DATAFORMAT_USCORECOLUMN *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__DATAFORMAT_USCORECOLUMN
#define soap_write_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, data, "eoddata1:DATAFORMAT_COLUMN", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__DATAFORMAT_USCORECOLUMN ** SOAP_FMAC4 soap_get_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__DATAFORMAT_USCORECOLUMN **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__DATAFORMAT_USCORECOLUMN
#define soap_read_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, const char *, int, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, const char*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define soap_write_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data, "eoddata1:ArrayOfDATAFORMAT_COLUMN", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(struct soap*, eoddata1__ArrayOfDATAFORMAT_USCORECOLUMN **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN
#define soap_read_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfDATAFORMAT_USCORECOLUMN(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__DATAFORMAT
#define SOAP_TYPE_eoddata_PointerToeoddata1__DATAFORMAT (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__DATAFORMAT(struct soap*, eoddata1__DATAFORMAT *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__DATAFORMAT(struct soap*, const char *, int, eoddata1__DATAFORMAT *const*, const char *);
SOAP_FMAC3 eoddata1__DATAFORMAT ** SOAP_FMAC4 soap_in_PointerToeoddata1__DATAFORMAT(struct soap*, const char*, eoddata1__DATAFORMAT **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__DATAFORMAT(struct soap*, eoddata1__DATAFORMAT *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__DATAFORMAT
#define soap_write_PointerToeoddata1__DATAFORMAT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__DATAFORMAT(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__DATAFORMAT(soap, data, "eoddata1:DATAFORMAT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__DATAFORMAT ** SOAP_FMAC4 soap_get_PointerToeoddata1__DATAFORMAT(struct soap*, eoddata1__DATAFORMAT **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__DATAFORMAT
#define soap_read_PointerToeoddata1__DATAFORMAT(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__DATAFORMAT(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__DATAFORMAT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__NEWS
#define SOAP_TYPE_eoddata_PointerToeoddata1__NEWS (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__NEWS(struct soap*, eoddata1__NEWS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__NEWS(struct soap*, const char *, int, eoddata1__NEWS *const*, const char *);
SOAP_FMAC3 eoddata1__NEWS ** SOAP_FMAC4 soap_in_PointerToeoddata1__NEWS(struct soap*, const char*, eoddata1__NEWS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__NEWS(struct soap*, eoddata1__NEWS *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__NEWS
#define soap_write_PointerToeoddata1__NEWS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__NEWS(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__NEWS(soap, data, "eoddata1:NEWS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__NEWS ** SOAP_FMAC4 soap_get_PointerToeoddata1__NEWS(struct soap*, eoddata1__NEWS **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__NEWS
#define soap_read_PointerToeoddata1__NEWS(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__NEWS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__NEWS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOLCHANGE
#define SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOLCHANGE (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__SYMBOLCHANGE(struct soap*, eoddata1__SYMBOLCHANGE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__SYMBOLCHANGE(struct soap*, const char *, int, eoddata1__SYMBOLCHANGE *const*, const char *);
SOAP_FMAC3 eoddata1__SYMBOLCHANGE ** SOAP_FMAC4 soap_in_PointerToeoddata1__SYMBOLCHANGE(struct soap*, const char*, eoddata1__SYMBOLCHANGE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__SYMBOLCHANGE(struct soap*, eoddata1__SYMBOLCHANGE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__SYMBOLCHANGE
#define soap_write_PointerToeoddata1__SYMBOLCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__SYMBOLCHANGE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__SYMBOLCHANGE(soap, data, "eoddata1:SYMBOLCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOLCHANGE ** SOAP_FMAC4 soap_get_PointerToeoddata1__SYMBOLCHANGE(struct soap*, eoddata1__SYMBOLCHANGE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__SYMBOLCHANGE
#define soap_read_PointerToeoddata1__SYMBOLCHANGE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__SYMBOLCHANGE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__SYMBOLCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__TECHNICAL
#define SOAP_TYPE_eoddata_PointerToeoddata1__TECHNICAL (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__TECHNICAL(struct soap*, eoddata1__TECHNICAL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__TECHNICAL(struct soap*, const char *, int, eoddata1__TECHNICAL *const*, const char *);
SOAP_FMAC3 eoddata1__TECHNICAL ** SOAP_FMAC4 soap_in_PointerToeoddata1__TECHNICAL(struct soap*, const char*, eoddata1__TECHNICAL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__TECHNICAL(struct soap*, eoddata1__TECHNICAL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__TECHNICAL
#define soap_write_PointerToeoddata1__TECHNICAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__TECHNICAL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__TECHNICAL(soap, data, "eoddata1:TECHNICAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__TECHNICAL ** SOAP_FMAC4 soap_get_PointerToeoddata1__TECHNICAL(struct soap*, eoddata1__TECHNICAL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__TECHNICAL
#define soap_read_PointerToeoddata1__TECHNICAL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__TECHNICAL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__TECHNICAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__FUNDAMENTAL
#define SOAP_TYPE_eoddata_PointerToeoddata1__FUNDAMENTAL (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__FUNDAMENTAL(struct soap*, eoddata1__FUNDAMENTAL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__FUNDAMENTAL(struct soap*, const char *, int, eoddata1__FUNDAMENTAL *const*, const char *);
SOAP_FMAC3 eoddata1__FUNDAMENTAL ** SOAP_FMAC4 soap_in_PointerToeoddata1__FUNDAMENTAL(struct soap*, const char*, eoddata1__FUNDAMENTAL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__FUNDAMENTAL(struct soap*, eoddata1__FUNDAMENTAL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__FUNDAMENTAL
#define soap_write_PointerToeoddata1__FUNDAMENTAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__FUNDAMENTAL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__FUNDAMENTAL(soap, data, "eoddata1:FUNDAMENTAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__FUNDAMENTAL ** SOAP_FMAC4 soap_get_PointerToeoddata1__FUNDAMENTAL(struct soap*, eoddata1__FUNDAMENTAL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__FUNDAMENTAL
#define soap_read_PointerToeoddata1__FUNDAMENTAL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__FUNDAMENTAL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__FUNDAMENTAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__CountryBase
#define SOAP_TYPE_eoddata_PointerToeoddata1__CountryBase (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__CountryBase(struct soap*, eoddata1__CountryBase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__CountryBase(struct soap*, const char *, int, eoddata1__CountryBase *const*, const char *);
SOAP_FMAC3 eoddata1__CountryBase ** SOAP_FMAC4 soap_in_PointerToeoddata1__CountryBase(struct soap*, const char*, eoddata1__CountryBase **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__CountryBase(struct soap*, eoddata1__CountryBase *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__CountryBase
#define soap_write_PointerToeoddata1__CountryBase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__CountryBase(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__CountryBase(soap, data, "eoddata1:CountryBase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__CountryBase ** SOAP_FMAC4 soap_get_PointerToeoddata1__CountryBase(struct soap*, eoddata1__CountryBase **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__CountryBase
#define soap_read_PointerToeoddata1__CountryBase(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__CountryBase(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__CountryBase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__SPLIT
#define SOAP_TYPE_eoddata_PointerToeoddata1__SPLIT (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__SPLIT(struct soap*, eoddata1__SPLIT *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__SPLIT(struct soap*, const char *, int, eoddata1__SPLIT *const*, const char *);
SOAP_FMAC3 eoddata1__SPLIT ** SOAP_FMAC4 soap_in_PointerToeoddata1__SPLIT(struct soap*, const char*, eoddata1__SPLIT **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__SPLIT(struct soap*, eoddata1__SPLIT *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__SPLIT
#define soap_write_PointerToeoddata1__SPLIT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__SPLIT(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__SPLIT(soap, data, "eoddata1:SPLIT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SPLIT ** SOAP_FMAC4 soap_get_PointerToeoddata1__SPLIT(struct soap*, eoddata1__SPLIT **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__SPLIT
#define soap_read_PointerToeoddata1__SPLIT(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__SPLIT(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__SPLIT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__QUOTE2
#define SOAP_TYPE_eoddata_PointerToeoddata1__QUOTE2 (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__QUOTE2(struct soap*, eoddata1__QUOTE2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__QUOTE2(struct soap*, const char *, int, eoddata1__QUOTE2 *const*, const char *);
SOAP_FMAC3 eoddata1__QUOTE2 ** SOAP_FMAC4 soap_in_PointerToeoddata1__QUOTE2(struct soap*, const char*, eoddata1__QUOTE2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__QUOTE2(struct soap*, eoddata1__QUOTE2 *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__QUOTE2
#define soap_write_PointerToeoddata1__QUOTE2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__QUOTE2(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__QUOTE2(soap, data, "eoddata1:QUOTE2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__QUOTE2 ** SOAP_FMAC4 soap_get_PointerToeoddata1__QUOTE2(struct soap*, eoddata1__QUOTE2 **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__QUOTE2
#define soap_read_PointerToeoddata1__QUOTE2(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__QUOTE2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__QUOTE2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOL2
#define SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOL2 (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__SYMBOL2(struct soap*, eoddata1__SYMBOL2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__SYMBOL2(struct soap*, const char *, int, eoddata1__SYMBOL2 *const*, const char *);
SOAP_FMAC3 eoddata1__SYMBOL2 ** SOAP_FMAC4 soap_in_PointerToeoddata1__SYMBOL2(struct soap*, const char*, eoddata1__SYMBOL2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__SYMBOL2(struct soap*, eoddata1__SYMBOL2 *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__SYMBOL2
#define soap_write_PointerToeoddata1__SYMBOL2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__SYMBOL2(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__SYMBOL2(soap, data, "eoddata1:SYMBOL2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOL2 ** SOAP_FMAC4 soap_get_PointerToeoddata1__SYMBOL2(struct soap*, eoddata1__SYMBOL2 **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__SYMBOL2
#define soap_read_PointerToeoddata1__SYMBOL2(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__SYMBOL2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__SYMBOL2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfDATAFORMAT
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfDATAFORMAT (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfDATAFORMAT(struct soap*, eoddata1__ArrayOfDATAFORMAT *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfDATAFORMAT(struct soap*, const char *, int, eoddata1__ArrayOfDATAFORMAT *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfDATAFORMAT(struct soap*, const char*, eoddata1__ArrayOfDATAFORMAT **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfDATAFORMAT(struct soap*, eoddata1__ArrayOfDATAFORMAT *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfDATAFORMAT
#define soap_write_PointerToeoddata1__ArrayOfDATAFORMAT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfDATAFORMAT(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfDATAFORMAT(soap, data, "eoddata1:ArrayOfDATAFORMAT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfDATAFORMAT ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfDATAFORMAT(struct soap*, eoddata1__ArrayOfDATAFORMAT **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfDATAFORMAT
#define soap_read_PointerToeoddata1__ArrayOfDATAFORMAT(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfDATAFORMAT(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfDATAFORMAT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfNEWS
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfNEWS (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfNEWS(struct soap*, eoddata1__ArrayOfNEWS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfNEWS(struct soap*, const char *, int, eoddata1__ArrayOfNEWS *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfNEWS ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfNEWS(struct soap*, const char*, eoddata1__ArrayOfNEWS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfNEWS(struct soap*, eoddata1__ArrayOfNEWS *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfNEWS
#define soap_write_PointerToeoddata1__ArrayOfNEWS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfNEWS(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfNEWS(soap, data, "eoddata1:ArrayOfNEWS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfNEWS ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfNEWS(struct soap*, eoddata1__ArrayOfNEWS **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfNEWS
#define soap_read_PointerToeoddata1__ArrayOfNEWS(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfNEWS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfNEWS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOLCHANGE
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOLCHANGE (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfSYMBOLCHANGE(struct soap*, eoddata1__ArrayOfSYMBOLCHANGE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfSYMBOLCHANGE(struct soap*, const char *, int, eoddata1__ArrayOfSYMBOLCHANGE *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOLCHANGE ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfSYMBOLCHANGE(struct soap*, const char*, eoddata1__ArrayOfSYMBOLCHANGE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfSYMBOLCHANGE(struct soap*, eoddata1__ArrayOfSYMBOLCHANGE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfSYMBOLCHANGE
#define soap_write_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, data, "eoddata1:ArrayOfSYMBOLCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOLCHANGE ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfSYMBOLCHANGE(struct soap*, eoddata1__ArrayOfSYMBOLCHANGE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfSYMBOLCHANGE
#define soap_read_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfSYMBOLCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfTECHNICAL
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfTECHNICAL (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfTECHNICAL(struct soap*, eoddata1__ArrayOfTECHNICAL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfTECHNICAL(struct soap*, const char *, int, eoddata1__ArrayOfTECHNICAL *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfTECHNICAL ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfTECHNICAL(struct soap*, const char*, eoddata1__ArrayOfTECHNICAL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfTECHNICAL(struct soap*, eoddata1__ArrayOfTECHNICAL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfTECHNICAL
#define soap_write_PointerToeoddata1__ArrayOfTECHNICAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfTECHNICAL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfTECHNICAL(soap, data, "eoddata1:ArrayOfTECHNICAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfTECHNICAL ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfTECHNICAL(struct soap*, eoddata1__ArrayOfTECHNICAL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfTECHNICAL
#define soap_read_PointerToeoddata1__ArrayOfTECHNICAL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfTECHNICAL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfTECHNICAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfFUNDAMENTAL
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfFUNDAMENTAL (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfFUNDAMENTAL(struct soap*, eoddata1__ArrayOfFUNDAMENTAL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfFUNDAMENTAL(struct soap*, const char *, int, eoddata1__ArrayOfFUNDAMENTAL *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfFUNDAMENTAL ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfFUNDAMENTAL(struct soap*, const char*, eoddata1__ArrayOfFUNDAMENTAL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfFUNDAMENTAL(struct soap*, eoddata1__ArrayOfFUNDAMENTAL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfFUNDAMENTAL
#define soap_write_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, data, "eoddata1:ArrayOfFUNDAMENTAL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfFUNDAMENTAL ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfFUNDAMENTAL(struct soap*, eoddata1__ArrayOfFUNDAMENTAL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfFUNDAMENTAL
#define soap_read_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfFUNDAMENTAL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfCountryBase
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfCountryBase (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfCountryBase(struct soap*, eoddata1__ArrayOfCountryBase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfCountryBase(struct soap*, const char *, int, eoddata1__ArrayOfCountryBase *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfCountryBase ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfCountryBase(struct soap*, const char*, eoddata1__ArrayOfCountryBase **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfCountryBase(struct soap*, eoddata1__ArrayOfCountryBase *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfCountryBase
#define soap_write_PointerToeoddata1__ArrayOfCountryBase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfCountryBase(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfCountryBase(soap, data, "eoddata1:ArrayOfCountryBase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfCountryBase ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfCountryBase(struct soap*, eoddata1__ArrayOfCountryBase **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfCountryBase
#define soap_read_PointerToeoddata1__ArrayOfCountryBase(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfCountryBase(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfCountryBase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSPLIT
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSPLIT (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfSPLIT(struct soap*, eoddata1__ArrayOfSPLIT *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfSPLIT(struct soap*, const char *, int, eoddata1__ArrayOfSPLIT *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfSPLIT ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfSPLIT(struct soap*, const char*, eoddata1__ArrayOfSPLIT **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfSPLIT(struct soap*, eoddata1__ArrayOfSPLIT *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfSPLIT
#define soap_write_PointerToeoddata1__ArrayOfSPLIT(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfSPLIT(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfSPLIT(soap, data, "eoddata1:ArrayOfSPLIT", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSPLIT ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfSPLIT(struct soap*, eoddata1__ArrayOfSPLIT **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfSPLIT
#define soap_read_PointerToeoddata1__ArrayOfSPLIT(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfSPLIT(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfSPLIT(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfQUOTE2
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfQUOTE2 (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfQUOTE2(struct soap*, eoddata1__ArrayOfQUOTE2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfQUOTE2(struct soap*, const char *, int, eoddata1__ArrayOfQUOTE2 *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfQUOTE2 ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfQUOTE2(struct soap*, const char*, eoddata1__ArrayOfQUOTE2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfQUOTE2(struct soap*, eoddata1__ArrayOfQUOTE2 *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfQUOTE2
#define soap_write_PointerToeoddata1__ArrayOfQUOTE2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfQUOTE2(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfQUOTE2(soap, data, "eoddata1:ArrayOfQUOTE2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfQUOTE2 ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfQUOTE2(struct soap*, eoddata1__ArrayOfQUOTE2 **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfQUOTE2
#define soap_read_PointerToeoddata1__ArrayOfQUOTE2(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfQUOTE2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfQUOTE2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfQUOTE
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfQUOTE (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfQUOTE(struct soap*, eoddata1__ArrayOfQUOTE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfQUOTE(struct soap*, const char *, int, eoddata1__ArrayOfQUOTE *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfQUOTE ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfQUOTE(struct soap*, const char*, eoddata1__ArrayOfQUOTE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfQUOTE(struct soap*, eoddata1__ArrayOfQUOTE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfQUOTE
#define soap_write_PointerToeoddata1__ArrayOfQUOTE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfQUOTE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfQUOTE(soap, data, "eoddata1:ArrayOfQUOTE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfQUOTE ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfQUOTE(struct soap*, eoddata1__ArrayOfQUOTE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfQUOTE
#define soap_read_PointerToeoddata1__ArrayOfQUOTE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfQUOTE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfQUOTE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__QUOTE
#define SOAP_TYPE_eoddata_PointerToeoddata1__QUOTE (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__QUOTE(struct soap*, eoddata1__QUOTE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__QUOTE(struct soap*, const char *, int, eoddata1__QUOTE *const*, const char *);
SOAP_FMAC3 eoddata1__QUOTE ** SOAP_FMAC4 soap_in_PointerToeoddata1__QUOTE(struct soap*, const char*, eoddata1__QUOTE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__QUOTE(struct soap*, eoddata1__QUOTE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__QUOTE
#define soap_write_PointerToeoddata1__QUOTE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__QUOTE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__QUOTE(soap, data, "eoddata1:QUOTE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__QUOTE ** SOAP_FMAC4 soap_get_PointerToeoddata1__QUOTE(struct soap*, eoddata1__QUOTE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__QUOTE
#define soap_read_PointerToeoddata1__QUOTE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__QUOTE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__QUOTE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOL2
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOL2 (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfSYMBOL2(struct soap*, eoddata1__ArrayOfSYMBOL2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfSYMBOL2(struct soap*, const char *, int, eoddata1__ArrayOfSYMBOL2 *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOL2 ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfSYMBOL2(struct soap*, const char*, eoddata1__ArrayOfSYMBOL2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfSYMBOL2(struct soap*, eoddata1__ArrayOfSYMBOL2 *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfSYMBOL2
#define soap_write_PointerToeoddata1__ArrayOfSYMBOL2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfSYMBOL2(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfSYMBOL2(soap, data, "eoddata1:ArrayOfSYMBOL2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOL2 ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfSYMBOL2(struct soap*, eoddata1__ArrayOfSYMBOL2 **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfSYMBOL2
#define soap_read_PointerToeoddata1__ArrayOfSYMBOL2(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfSYMBOL2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfSYMBOL2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOL
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfSYMBOL (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfSYMBOL(struct soap*, eoddata1__ArrayOfSYMBOL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfSYMBOL(struct soap*, const char *, int, eoddata1__ArrayOfSYMBOL *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfSYMBOL ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfSYMBOL(struct soap*, const char*, eoddata1__ArrayOfSYMBOL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfSYMBOL(struct soap*, eoddata1__ArrayOfSYMBOL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfSYMBOL
#define soap_write_PointerToeoddata1__ArrayOfSYMBOL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfSYMBOL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfSYMBOL(soap, data, "eoddata1:ArrayOfSYMBOL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfSYMBOL ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfSYMBOL(struct soap*, eoddata1__ArrayOfSYMBOL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfSYMBOL
#define soap_read_PointerToeoddata1__ArrayOfSYMBOL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfSYMBOL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfSYMBOL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOL
#define SOAP_TYPE_eoddata_PointerToeoddata1__SYMBOL (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__SYMBOL(struct soap*, eoddata1__SYMBOL *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__SYMBOL(struct soap*, const char *, int, eoddata1__SYMBOL *const*, const char *);
SOAP_FMAC3 eoddata1__SYMBOL ** SOAP_FMAC4 soap_in_PointerToeoddata1__SYMBOL(struct soap*, const char*, eoddata1__SYMBOL **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__SYMBOL(struct soap*, eoddata1__SYMBOL *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__SYMBOL
#define soap_write_PointerToeoddata1__SYMBOL(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__SYMBOL(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__SYMBOL(soap, data, "eoddata1:SYMBOL", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__SYMBOL ** SOAP_FMAC4 soap_get_PointerToeoddata1__SYMBOL(struct soap*, eoddata1__SYMBOL **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__SYMBOL
#define soap_read_PointerToeoddata1__SYMBOL(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__SYMBOL(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__SYMBOL(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfEXCHANGE
#define SOAP_TYPE_eoddata_PointerToeoddata1__ArrayOfEXCHANGE (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__ArrayOfEXCHANGE(struct soap*, eoddata1__ArrayOfEXCHANGE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__ArrayOfEXCHANGE(struct soap*, const char *, int, eoddata1__ArrayOfEXCHANGE *const*, const char *);
SOAP_FMAC3 eoddata1__ArrayOfEXCHANGE ** SOAP_FMAC4 soap_in_PointerToeoddata1__ArrayOfEXCHANGE(struct soap*, const char*, eoddata1__ArrayOfEXCHANGE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__ArrayOfEXCHANGE(struct soap*, eoddata1__ArrayOfEXCHANGE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__ArrayOfEXCHANGE
#define soap_write_PointerToeoddata1__ArrayOfEXCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__ArrayOfEXCHANGE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__ArrayOfEXCHANGE(soap, data, "eoddata1:ArrayOfEXCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__ArrayOfEXCHANGE ** SOAP_FMAC4 soap_get_PointerToeoddata1__ArrayOfEXCHANGE(struct soap*, eoddata1__ArrayOfEXCHANGE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__ArrayOfEXCHANGE
#define soap_read_PointerToeoddata1__ArrayOfEXCHANGE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__ArrayOfEXCHANGE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__ArrayOfEXCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerToeoddata1__EXCHANGE
#define SOAP_TYPE_eoddata_PointerToeoddata1__EXCHANGE (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeoddata1__EXCHANGE(struct soap*, eoddata1__EXCHANGE *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeoddata1__EXCHANGE(struct soap*, const char *, int, eoddata1__EXCHANGE *const*, const char *);
SOAP_FMAC3 eoddata1__EXCHANGE ** SOAP_FMAC4 soap_in_PointerToeoddata1__EXCHANGE(struct soap*, const char*, eoddata1__EXCHANGE **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeoddata1__EXCHANGE(struct soap*, eoddata1__EXCHANGE *const*, const char*, const char*);

#ifndef soap_write_PointerToeoddata1__EXCHANGE
#define soap_write_PointerToeoddata1__EXCHANGE(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerToeoddata1__EXCHANGE(soap, data), 0) || eoddata::soap_put_PointerToeoddata1__EXCHANGE(soap, data, "eoddata1:EXCHANGE", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 eoddata1__EXCHANGE ** SOAP_FMAC4 soap_get_PointerToeoddata1__EXCHANGE(struct soap*, eoddata1__EXCHANGE **, const char*, const char*);

#ifndef soap_read_PointerToeoddata1__EXCHANGE
#define soap_read_PointerToeoddata1__EXCHANGE(soap, data) ( ((data) ? (eoddata::soap_default_PointerToeoddata1__EXCHANGE(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerToeoddata1__EXCHANGE(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_PointerTostd__string
#define SOAP_TYPE_eoddata_PointerTostd__string (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_PointerTostd__string(soap, data), 0) || eoddata::soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( ((data) ? (eoddata::soap_default_PointerTostd__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_PointerTostd__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata__QName
#define SOAP_TYPE_eoddata__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize__QName(soap, data), 0) || eoddata::soap_put__QName(soap, data, "QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( ((data) ? (eoddata::soap_default__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_string
#define SOAP_TYPE_eoddata_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (eoddata::soap_serialize_string(soap, data), 0) || eoddata::soap_put_string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( ((data) ? (eoddata::soap_default_string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !eoddata::soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char*, int, const std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, const char*, std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__DATAFORMAT_USCORECOLUMN *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT_USCORECOLUMN(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap*, std::vector<eoddata1__DATAFORMAT *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap*, const std::vector<eoddata1__DATAFORMAT *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap*, const char*, int, const std::vector<eoddata1__DATAFORMAT *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__DATAFORMAT *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap*, const char*, std::vector<eoddata1__DATAFORMAT *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__DATAFORMAT *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__DATAFORMAT *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__DATAFORMAT(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__NEWS
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__NEWS (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap*, std::vector<eoddata1__NEWS *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap*, const std::vector<eoddata1__NEWS *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap*, const char*, int, const std::vector<eoddata1__NEWS *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__NEWS *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap*, const char*, std::vector<eoddata1__NEWS *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__NEWS *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__NEWS *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__NEWS(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__NEWS(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap*, std::vector<eoddata1__SYMBOLCHANGE *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap*, const std::vector<eoddata1__SYMBOLCHANGE *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap*, const char*, int, const std::vector<eoddata1__SYMBOLCHANGE *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__SYMBOLCHANGE *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap*, const char*, std::vector<eoddata1__SYMBOLCHANGE *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__SYMBOLCHANGE *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__SYMBOLCHANGE *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOLCHANGE(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__TECHNICAL
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__TECHNICAL (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap*, std::vector<eoddata1__TECHNICAL *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap*, const std::vector<eoddata1__TECHNICAL *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap*, const char*, int, const std::vector<eoddata1__TECHNICAL *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__TECHNICAL *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap*, const char*, std::vector<eoddata1__TECHNICAL *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__TECHNICAL *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__TECHNICAL *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__TECHNICAL(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap*, std::vector<eoddata1__FUNDAMENTAL *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap*, const std::vector<eoddata1__FUNDAMENTAL *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap*, const char*, int, const std::vector<eoddata1__FUNDAMENTAL *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__FUNDAMENTAL *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap*, const char*, std::vector<eoddata1__FUNDAMENTAL *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__FUNDAMENTAL *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__FUNDAMENTAL *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__FUNDAMENTAL(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__CountryBase
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__CountryBase (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap*, std::vector<eoddata1__CountryBase *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap*, const std::vector<eoddata1__CountryBase *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap*, const char*, int, const std::vector<eoddata1__CountryBase *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__CountryBase *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap*, const char*, std::vector<eoddata1__CountryBase *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__CountryBase *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__CountryBase *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__CountryBase(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__CountryBase(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SPLIT
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SPLIT (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap*, std::vector<eoddata1__SPLIT *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap*, const std::vector<eoddata1__SPLIT *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap*, const char*, int, const std::vector<eoddata1__SPLIT *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__SPLIT *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap*, const char*, std::vector<eoddata1__SPLIT *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__SPLIT *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__SPLIT *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__SPLIT(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SPLIT(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__QUOTE2
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__QUOTE2 (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap*, std::vector<eoddata1__QUOTE2 *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap*, const std::vector<eoddata1__QUOTE2 *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap*, const char*, int, const std::vector<eoddata1__QUOTE2 *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__QUOTE2 *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap*, const char*, std::vector<eoddata1__QUOTE2 *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__QUOTE2 *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__QUOTE2 *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__QUOTE2(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__QUOTE2(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__QUOTE
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__QUOTE (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap*, std::vector<eoddata1__QUOTE *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap*, const std::vector<eoddata1__QUOTE *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap*, const char*, int, const std::vector<eoddata1__QUOTE *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__QUOTE *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap*, const char*, std::vector<eoddata1__QUOTE *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__QUOTE *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__QUOTE *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__QUOTE(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__QUOTE(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOL2
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOL2 (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap*, std::vector<eoddata1__SYMBOL2 *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap*, const std::vector<eoddata1__SYMBOL2 *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap*, const char*, int, const std::vector<eoddata1__SYMBOL2 *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__SYMBOL2 *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap*, const char*, std::vector<eoddata1__SYMBOL2 *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__SYMBOL2 *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__SYMBOL2 *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOL2(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOL
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__SYMBOL (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap*, std::vector<eoddata1__SYMBOL *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap*, const std::vector<eoddata1__SYMBOL *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap*, const char*, int, const std::vector<eoddata1__SYMBOL *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__SYMBOL *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap*, const char*, std::vector<eoddata1__SYMBOL *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__SYMBOL *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__SYMBOL *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__SYMBOL(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__SYMBOL(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__EXCHANGE
#define SOAP_TYPE_eoddata_std__vectorTemplateOfPointerToeoddata1__EXCHANGE (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap*, std::vector<eoddata1__EXCHANGE *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap*, const std::vector<eoddata1__EXCHANGE *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap*, const char*, int, const std::vector<eoddata1__EXCHANGE *> *, const char*);
SOAP_FMAC3 std::vector<eoddata1__EXCHANGE *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap*, const char*, std::vector<eoddata1__EXCHANGE *> *, const char*);
SOAP_FMAC1 std::vector<eoddata1__EXCHANGE *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eoddata1__EXCHANGE *>  * soap_new_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerToeoddata1__EXCHANGE(soap, n, NULL, NULL, NULL); }

} // namespace eoddata


#endif

/* End of eoddataH.h */
